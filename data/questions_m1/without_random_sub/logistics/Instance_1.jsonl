{"id": "9a250bce-148d-4aba-b0ba-8fbf3b7d082e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t0: at airport l0_2, object t0 is located?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "50f7c15b-c435-4e21-8e02-4cb117bc86a6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t1: at airport l1_1, object t1 is located, at airport l1_2, object t1 is located, object t1 is at airport l0_0, object t1 is located at airport l0_1, object t1 is located at airport l0_2, object t1 is located at airport l1_0, package p0 is in vehicle t1, package p1 is in vehicle t1, package p2 is present in vehicle t1 and package p3 is located in vehicle t1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3f4eb3b6-f5a2-42ff-a4dd-6eacd1b4a015", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a1: at airport l0_0, object a1 is not located, at airport l0_1, object a1 is not located, at airport l1_1, object a1 is not located, at airport l1_2, object a1 is not located, object a1 is not located at airport l0_2, package p0 is not present in vehicle a1, package p1 is not located in vehicle a1, package p2 is not located in vehicle a1 and package p3 is not in vehicle a1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "3a0a35d7-71d2-4822-add7-71d0690716c7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_2: at airport l0_2, object a1 is not located, object a0 is not at airport l0_2, object p0 is not at airport l0_2, object p1 is not located at airport l0_2, object p2 is not located at airport l0_2, object p3 is not at airport l0_2, object t0 is not located at airport l0_2, object t1 is not located at airport l0_2 and object t2 is not at airport l0_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "cd8ab697-89ac-4e2e-82c7-1439f3ddfaf2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t0: at airport l0_0, object t0 is not located, at airport l0_1, object t0 is not located, at airport l1_1, object t0 is not located, object t0 is located at airport l0_2, object t0 is not at airport l1_0, object t0 is not located at airport l1_2, package p0 is not in vehicle t0, package p1 is not located in vehicle t0, package p2 is not located in vehicle t0 and package p3 is not in vehicle t0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c0d97fd6-ed43-4042-b380-13d107c8916d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p3: at airport l0_0, object p3 is located, at airport l0_1, object p3 is not located, at airport l1_0, object p3 is not located, at airport l1_1, object p3 is not located, object p3 is not at airport l0_2, object p3 is not located at airport l1_2, package p3 is in vehicle t0, package p3 is in vehicle t2, package p3 is located in vehicle a1, package p3 is not in vehicle t1 and package p3 is not located in vehicle a0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d1a44f8a-4667-4eea-ada8-90c094b5c81d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: airport l0_0 is in city c0, airport l0_1 is located in city c0 and city c0 contains airport l0_2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f1665e3d-c1e7-448b-a4d7-df07f06dcc1a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c1: airport l0_2 is in city c1, airport l1_0 is located in city c1, airport l1_2 is located in city c1, city c1 contains airport l0_0, city c1 contains airport l0_1 and city c1 contains airport l1_1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "d9c06d89-8050-4580-94bf-f91d2007a0ac", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: airport l1_0 is not in city c0airport l1_0 is not located in city c0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9b81ef0b-2945-4960-af26-4623c70ef7fa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_1: airport l0_1 is not in city c0airport l0_1 is not located in city c0 and airport l0_1 is not in city c1airport l0_1 is not located in city c1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "3991aeec-2133-4d2c-b544-7f79b6dbb27b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: airport l1_1 is in city c1 and city c0 does not contain airport l1_1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "dcbda15c-00ef-4384-b066-cd17de1d1b08", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_2: city c0 does not contain airport l1_2 and city c1 does not contain airport l1_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f5d9f2a2-e266-4a8c-8db2-19f76e113956", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, list all objects associated with type airport. Write None if there are none.", "answer": "l0_0 and l1_0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fadc872f-20ae-41d1-9b3b-49ae19dfd72a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, what is the object type for c0. Write None if there are none.", "answer": "city", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7ff1a431-f8fd-4165-bcac-2ab965fc6d96", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_1: object t2 is at airport l0_1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "0a23a28e-8437-48c4-9932-ee2ca271547f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a0: object a0 is at airport l0_1, object a0 is located at airport l0_0, object a0 is located at airport l0_2, object a0 is located at airport l1_0, object a0 is located at airport l1_1, object a0 is located at airport l1_2, package p0 is located in vehicle a0, package p1 is located in vehicle a0, package p2 is in vehicle a0 and package p3 is in vehicle a0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "0b816164-11fc-4415-b66a-3a5d7ae8fded", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a0: at airport l0_1, object a0 is not located, at airport l1_2, object a0 is not located, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, package p0 is not present in vehicle a0, package p1 is not present in vehicle a0, package p2 is not in vehicle a0 and package p3 is not located in vehicle a0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "a15a00f3-d8a5-4892-9b8d-c39765e1c2c4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p3: at airport l0_0, object p3 is not located, at airport l0_2, object p3 is not located, object p3 is not at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, package p3 is not in vehicle a1, package p3 is not in vehicle t0, package p3 is not in vehicle t2, package p3 is not located in vehicle a0 and package p3 is not present in vehicle t1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "bb54389b-067a-444e-b0ad-bdd68dbd6393", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: at airport l1_1, object p3 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, object a0 is not located at airport l1_1, object a1 is not located at airport l1_1, object p0 is not at airport l1_1, object p1 is not located at airport l1_1, object p2 is not at airport l1_1 and object t0 is not at airport l1_1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d1d39145-e627-45c2-8adc-af214ce47562", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t1: object t1 is located at airport l0_0, object t1 is located at airport l0_1, object t1 is located at airport l1_1, object t1 is not at airport l0_2, object t1 is not at airport l1_2, object t1 is not located at airport l1_0, package p0 is not present in vehicle t1, package p1 is not located in vehicle t1, package p2 is not in vehicle t1 and package p3 is not located in vehicle t1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f826b7e9-f9f7-4298-b1a0-2a5bcd80f06d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: airport l0_0 is located in city c0, airport l0_1 is located in city c0 and airport l0_2 is in city c0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "e7ab5825-efa4-4fd3-af07-5c727c616e28", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: airport l1_0 is in city c1 and city c0 contains airport l1_0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "b617b896-45ae-40b0-9863-69c396b74597", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: airport l1_1 is not in city c0airport l1_1 is not located in city c0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "673de093-cdc1-4e18-8e30-81d9f0012f23", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: airport l0_1 is not in city c0airport l0_1 is not located in city c0, airport l0_2 is not in city c0airport l0_2 is not located in city c0, city c0 does not contain airport l0_0, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1 and city c0 does not contain airport l1_2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "e65a3582-a9be-4046-821a-17374c1afef3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_2: city c0 contains airport l0_2 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d9f334c8-91a8-4349-9530-c73c77434dab", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: airport l1_1 is in city c0 and airport l1_1 is in city c1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "eb2e4f6c-a75d-4d5d-ad7d-ccf98b608ae3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, list all objects associated with type airplane. Write None if there are none.", "answer": "a0 and a1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "888527c8-d8a4-49f9-b25b-de1a257a3c33", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, what is the object type for p0 and p3. Write None if there are none.", "answer": "package", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "93d897b5-7e06-4e29-9f6d-5dd3285e38b5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t2: at airport l0_1, object t2 is located?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "9f30ed1a-3e9a-4da2-9533-5c702c499bfe", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p3: at airport l1_1, object p3 is located, object p3 is at airport l0_1, object p3 is at airport l0_2, object p3 is located at airport l0_0, object p3 is located at airport l1_0, object p3 is located at airport l1_2, package p3 is in vehicle a1, package p3 is in vehicle t0, package p3 is in vehicle t2, package p3 is present in vehicle a0 and package p3 is present in vehicle t1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f4c2cb0e-cc44-4a82-9cda-c45761e0d432", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a0: at airport l1_1, object a0 is not located, at airport l1_2, object a0 is not located, object a0 is not at airport l0_0, object a0 is not located at airport l0_1, object a0 is not located at airport l0_2, package p0 is not located in vehicle a0, package p1 is not in vehicle a0, package p2 is not in vehicle a0 and package p3 is not located in vehicle a0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "7ac61f11-6347-4f1c-8659-31a7b3ec3d75", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_1: at airport l0_1, object a0 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, object p0 is not located at airport l0_1, object p1 is not at airport l0_1, object t0 is not located at airport l0_1, object t1 is not located at airport l0_1 and object t2 is not located at airport l0_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "87e21a28-9c96-499c-9eab-82581e86f750", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a1: at airport l0_2, object a1 is not located, at airport l1_1, object a1 is not located, object a1 is located at airport l1_0, object a1 is not at airport l0_0, object a1 is not located at airport l0_1, object a1 is not located at airport l1_2, package p0 is not located in vehicle a1, package p1 is not located in vehicle a1, package p2 is not in vehicle a1 and package p3 is not in vehicle a1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4b1fcac0-8b75-4607-a2e4-cbd0cb01f96d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: at airport l1_1, object p3 is located, object a0 is not located at airport l1_1, object a1 is located at airport l1_1, object p0 is not at airport l1_1, object p1 is not at airport l1_1, object p2 is at airport l1_1, object t0 is at airport l1_1, object t1 is not at airport l1_1 and object t2 is not located at airport l1_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b8a4772c-1559-4af4-91d6-b24e2a59bda7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_2: airport l1_2 is in city c1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "49b7cf53-89dd-4c5d-b89a-74175bfdc817", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_1: airport l0_1 is located in city c0 and city c1 contains airport l0_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "2a1ae1e4-dc5c-4805-8be6-44263ae34590", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: airport l1_0 is not in city c0airport l1_0 is not located in city c0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "0fe33c79-8c45-4e7c-bb1e-3be0b872a43b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: airport l1_1 is not in city c1airport l1_1 is not located in city c1 and city c0 does not contain airport l1_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "ca5a63b4-b936-44bd-b109-8beb6c5ebc4c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: airport l0_0 is in city c0, airport l0_2 is in city c0, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, city c0 contains airport l0_1 and city c0 does not contain airport l1_2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a557915d-976b-44be-b2a2-7a83079588ba", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_1: airport l0_1 is not in city c0airport l0_1 is not located in city c0 and city c1 does not contain airport l0_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b37d2b44-8c2e-478f-a528-85871f5f7277", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, list all objects associated with type location. Write None if there are none.", "answer": "l0_1, l0_2, l1_1 and l1_2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f4d5e79e-08d1-475c-8c31-0d0b2e67e048", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, what is the object type for p0 and p1. Write None if there are none.", "answer": "package", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a886fe9b-1086-4f0e-9e30-ce470f83dd60", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t1: at airport l1_0, object t1 is located?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "a5571160-ab79-4aef-9012-d6f33938e34c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p3: at airport l0_2, object p3 is located, at airport l1_1, object p3 is located, object p3 is at airport l0_0, object p3 is at airport l1_0, object p3 is at airport l1_2, object p3 is located at airport l0_1, package p3 is in vehicle t0, package p3 is located in vehicle a0, package p3 is present in vehicle a1, package p3 is present in vehicle t1 and package p3 is present in vehicle t2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f6f6eede-2772-46ad-b1d5-209c6d6383d3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for t0: at airport l1_1, object t0 is not located, object t0 is not at airport l0_1, object t0 is not at airport l1_0, object t0 is not at airport l1_2, object t0 is not located at airport l0_2, package p0 is not located in vehicle t0, package p1 is not in vehicle t0 and package p2 is not located in vehicle t0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "7c6544a1-9eea-4016-a4cf-daad11a8d32d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p3: at airport l1_2, object p3 is not located, object p3 is not at airport l0_2, object p3 is not at airport l1_0, object p3 is not located at airport l0_0, object p3 is not located at airport l0_1, object p3 is not located at airport l1_1, package p3 is not in vehicle t0, package p3 is not located in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "926a13f9-8e75-49ac-b85d-19d676b4c0d5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a0: at airport l0_0, object a0 is not located, at airport l0_1, object a0 is not located, at airport l1_0, object a0 is located, object a0 is not at airport l1_1, object a0 is not located at airport l0_2, object a0 is not located at airport l1_2, package p0 is not located in vehicle a0, package p1 is not present in vehicle a0, package p2 is not located in vehicle a0 and package p3 is not located in vehicle a0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3ca66842-f2f1-4f71-bfef-060c80eed5e5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_0: at airport l0_0, object p0 is located, at airport l0_0, object p1 is located, at airport l0_0, object t1 is located, object a0 is not located at airport l0_0, object a1 is located at airport l0_0, object p2 is not at airport l0_0, object p3 is located at airport l0_0, object t0 is not located at airport l0_0 and object t2 is not at airport l0_0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1bad455a-7518-4a87-9656-b5232961c6c6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c1: airport l1_1 is in city c1, airport l1_2 is located in city c1 and city c1 contains airport l1_0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3c70c801-779c-4287-92f6-428114bf4b87", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: airport l1_0 is located in city c0 and city c1 contains airport l1_0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "4db79129-49b0-4742-860e-3e42b1f26ac2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c1: city c1 does not contain airport l0_0, city c1 does not contain airport l0_1 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "8143c24a-6803-4b7a-b581-ae7e97ad2d96", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_1: airport l1_1 is not in city c0airport l1_1 is not located in city c0 and city c1 does not contain airport l1_1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9895b894-d295-4b86-af4b-127220ba0b21", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_1: airport l0_1 is not in city c1airport l0_1 is not located in city c1 and city c0 contains airport l0_1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b74c25d6-3391-4bb6-8182-39735fcc76e9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_0: airport l0_0 is not in city c0airport l0_0 is not located in city c0 and city c1 does not contain airport l0_0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1fe3b8ef-d915-4a17-a6e2-d35f807c8368", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, list all objects associated with type airplane. Write None if there are none.", "answer": "a0 and a1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "531d5680-8b01-40fc-ac87-0a1b32c2eed9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, what is the object type for l0_1, l0_2, l1_1 and l1_2. Write None if there are none.", "answer": "location", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "eb77acd1-a808-41f2-90d7-1da2c58897ff", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a1: object a1 is located at airport l0_0 and package p2 is in vehicle a1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "cc35695d-995d-4b9b-ab32-57f337ef7725", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: at airport l1_0, object a0 is located, at airport l1_0, object p1 is located, at airport l1_0, object p3 is located, object a1 is located at airport l1_0, object p0 is at airport l1_0, object p2 is at airport l1_0, object t0 is located at airport l1_0, object t1 is located at airport l1_0 and object t2 is located at airport l1_0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "9d69149e-28e8-46d9-b490-77201629498b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p3: at airport l0_2, object p3 is not located, at airport l1_2, object p3 is not located, object p3 is not at airport l0_1, object p3 is not at airport l1_1, object p3 is not located at airport l0_0, object p3 is not located at airport l1_0, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not located in vehicle a0 and package p3 is not located in vehicle t2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d0cbb152-abd6-4d41-b3ff-d13e5679e90f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for p2: at airport l0_1, object p2 is not located, object p2 is not at airport l0_0, object p2 is not at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l0_2, object p2 is not located at airport l1_1, package p2 is not in vehicle t1, package p2 is not located in vehicle a0, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0 and package p2 is not located in vehicle t2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "2a869d6d-7cda-4e81-80a1-0b1a26a2fe8b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for a0: at airport l0_1, object a0 is not located, at airport l1_1, object a0 is not located, at airport l1_2, object a0 is not located, object a0 is at airport l1_0, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, package p0 is not present in vehicle a0, package p1 is not located in vehicle a0, package p2 is not present in vehicle a0 and package p3 is not present in vehicle a0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e71bf73a-81ea-4da0-a19a-d529ae757ed9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: at airport l1_0, object a1 is not located, at airport l1_0, object p0 is located, at airport l1_0, object p3 is not located, at airport l1_0, object t1 is not located, object a0 is located at airport l1_0, object p1 is located at airport l1_0, object p2 is at airport l1_0, object t0 is not located at airport l1_0 and object t2 is not located at airport l1_0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "91609059-0d2a-4179-8482-093953aaef1b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_2: airport l0_2 is in city c0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "946f54c2-56ce-418b-8fee-da2678514c29", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l1_0: city c0 contains airport l1_0 and city c1 contains airport l1_0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "e8222451-2f7d-4e47-837e-5bb906a3495e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_0: city c1 does not contain airport l0_0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "51ce6ac8-7b13-47ef-b54e-2c6f91451c5b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that the following properties of the state are correct for l0_2: airport l0_2 is not in city c0airport l0_2 is not located in city c0 and airport l0_2 is not in city c1airport l0_2 is not located in city c1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "73787714-9c13-4c2e-889d-0217318e576d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 contains airport l0_0 and city c0 does not contain airport l1_0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fbcc8bbb-b78a-4159-8609-c9e16f9115d3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "iter_1_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for c0: airport l0_0 is not in city c0airport l0_0 is not located in city c0, airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c0, airport l1_1 is in city c0 and city c0 does not contain airport l1_2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fbd4b5ac-d0ad-4ed7-994a-31fc10a99019", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, list all objects associated with type truck. Write None if there are none.", "answer": "t0, t1 and t2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "868b4288-dc8b-4a7f-8e79-da3c1934b3ee", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, what is the object type for p2 and p3. Write None if there are none.", "answer": "package", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is in city c0, at airport l0_2, object p2 is located, at airport l1_0, object a1 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p3 is at airport l0_2, object t0 is located at airport l0_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b2f6134a-9688-4235-92ff-dcfd725ad0d0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that at airport l1_0, object a0 is located?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "e8f2043b-2527-4bad-aaf3-8bed6116d8f1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that at airport l1_2, object t1 is not located?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "94d964b2-746c-46b7-8c8e-85cb193894b3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is it True or False that object p3 is not at airport l0_1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "47f31e98-5b7e-4bbc-84d0-c75cf1689ed9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that airport l0_1 is in city c0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3673a992-abfc-43ac-b9ae-098948066d61", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is it True or False that city c0 does not contain airport l0_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3bb88e25-b67f-4894-aaf6-1bd13c5633af", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is it True or False that airport l1_2 is not in city c0airport l1_2 is not located in city c0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "fc08a587-3ef9-4862-8852-09ef32276ceb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_1, object p1 is located, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t1 is at airport l1_2 and package p0 is present in vehicle t1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "457cef6e-72ca-43e3-9f69-d42547c7d593", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p0 is located, at airport l0_0, object p3 is located, at airport l0_0, object t1 is located, at airport l0_0, object t2 is located, at airport l0_1, object p0 is located, at airport l0_1, object t2 is located, at airport l0_2, object p0 is located, at airport l0_2, object p2 is located, at airport l1_0, object t2 is located, at airport l1_1, object a1 is located, at airport l1_1, object p1 is located, at airport l1_1, object p3 is located, at airport l1_1, object t0 is located, at airport l1_1, object t2 is located, at airport l1_2, object t1 is located, object a0 is at airport l0_0, object a0 is at airport l0_1, object a0 is at airport l0_2, object a0 is located at airport l1_0, object a0 is located at airport l1_1, object a0 is located at airport l1_2, object a1 is at airport l0_0, object a1 is at airport l1_2, object a1 is located at airport l0_1, object a1 is located at airport l0_2, object a1 is located at airport l1_0, object p0 is at airport l1_0, object p0 is located at airport l1_1, object p0 is located at airport l1_2, object p1 is at airport l1_0, object p1 is located at airport l0_0, object p1 is located at airport l0_1, object p1 is located at airport l0_2, object p1 is located at airport l1_2, object p2 is at airport l0_0, object p2 is located at airport l0_1, object p2 is located at airport l1_0, object p2 is located at airport l1_1, object p2 is located at airport l1_2, object p3 is at airport l0_1, object p3 is at airport l1_0, object p3 is at airport l1_2, object p3 is located at airport l0_2, object t0 is at airport l0_0, object t0 is at airport l1_0, object t0 is at airport l1_2, object t0 is located at airport l0_1, object t0 is located at airport l0_2, object t1 is at airport l0_1, object t1 is at airport l1_0, object t1 is located at airport l0_2, object t1 is located at airport l1_1, object t2 is located at airport l0_2, object t2 is located at airport l1_2, package p0 is in vehicle a1, package p0 is located in vehicle t1, package p0 is located in vehicle t2, package p0 is present in vehicle a0, package p0 is present in vehicle t0, package p1 is in vehicle a1, package p1 is in vehicle t0, package p1 is present in vehicle a0, package p1 is present in vehicle t1, package p1 is present in vehicle t2, package p2 is in vehicle t0, package p2 is in vehicle t1, package p2 is in vehicle t2, package p2 is present in vehicle a0, package p2 is present in vehicle a1, package p3 is in vehicle a0, package p3 is in vehicle t1, package p3 is located in vehicle t0, package p3 is present in vehicle a1 and package p3 is present in vehicle t2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8e12a345-6a63-4985-922a-178fbae2ce06", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is not located, at airport l0_0, object a1 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p2 is not located, at airport l0_0, object t1 is not located, at airport l0_0, object t2 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object p1 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p2 is not located, object a0 is not at airport l0_1, object a0 is not at airport l0_2, object a0 is not at airport l1_2, object a0 is not located at airport l1_1, object a1 is not at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l1_1, object p0 is not at airport l1_2, object p0 is not located at airport l0_0, object p0 is not located at airport l0_1, object p0 is not located at airport l0_2, object p1 is not at airport l1_2, object p1 is not located at airport l0_1, object p2 is not at airport l0_1, object p2 is not at airport l1_1, object p2 is not located at airport l1_0, object p3 is not at airport l0_0, object p3 is not at airport l0_1, object p3 is not at airport l1_0, object p3 is not at airport l1_2, object t0 is not at airport l0_1, object t0 is not located at airport l0_0, object t0 is not located at airport l1_0, object t0 is not located at airport l1_2, object t1 is not at airport l0_1, object t1 is not located at airport l1_0, object t2 is not at airport l0_2, object t2 is not at airport l1_2, object t2 is not located at airport l1_0, package p0 is not in vehicle a1, package p0 is not in vehicle t0, package p0 is not in vehicle t2, package p0 is not present in vehicle a0, package p1 is not in vehicle t0, package p1 is not in vehicle t1, package p1 is not located in vehicle a1, package p1 is not present in vehicle a0, package p1 is not present in vehicle t2, package p2 is not in vehicle a1, package p2 is not located in vehicle t1, package p2 is not present in vehicle a0, package p2 is not present in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle t2, package p3 is not located in vehicle a1, package p3 is not located in vehicle t1 and package p3 is not present in vehicle t0?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "1c393071-84a2-4f61-a050-0e2cf59272b2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is not located, at airport l0_0, object p2 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t0 is not located, at airport l0_1, object t2 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t0 is not located, object a0 is not at airport l0_2, object a0 is not at airport l1_0, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a0 is not located at airport l0_1, object a0 is not located at airport l1_1, object a1 is not located at airport l1_0, object a1 is not located at airport l1_1, object p0 is not at airport l0_2, object p0 is not located at airport l0_0, object p0 is not located at airport l1_0, object p0 is not located at airport l1_1, object p0 is not located at airport l1_2, object p1 is not at airport l1_0, object p1 is not located at airport l0_0, object p1 is not located at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_0, object p3 is not located at airport l1_1, object t0 is not located at airport l0_0, object t0 is not located at airport l0_2, object t0 is not located at airport l1_1, object t1 is not at airport l0_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t1 is not located at airport l1_0, object t2 is not at airport l0_0, object t2 is not at airport l0_2, object t2 is not at airport l1_0, object t2 is not located at airport l1_2, package p0 is not in vehicle t2, package p0 is not located in vehicle a1, package p0 is not located in vehicle t1, package p0 is not present in vehicle a0, package p0 is not present in vehicle t0, package p1 is not in vehicle a1, package p1 is not in vehicle t0, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle t1, package p2 is not in vehicle a1, package p2 is not in vehicle t1, package p2 is not located in vehicle t0, package p2 is not present in vehicle a0, package p2 is not present in vehicle t2, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not in vehicle t2, package p3 is not present in vehicle a0 and package p3 is not present in vehicle t0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "eb1df0cd-b60d-455f-8978-68d84057cedb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is not located, at airport l0_0, object p0 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p1 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p1 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object p2 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t1 is located, object a0 is not at airport l1_1, object a0 is not located at airport l1_2, object a1 is at airport l1_0, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_0, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not at airport l1_2, object p0 is not located at airport l0_2, object p0 is not located at airport l1_1, object p1 is at airport l1_1, object p1 is not at airport l0_0, object p1 is not located at airport l0_1, object p1 is not located at airport l1_2, object p2 is at airport l0_2, object p2 is not at airport l0_0, object p2 is not at airport l1_0, object p2 is not located at airport l1_2, object p3 is at airport l0_2, object p3 is not at airport l0_0, object p3 is not at airport l1_1, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, object p3 is not located at airport l1_2, object t0 is at airport l0_2, object t0 is not at airport l1_1, object t0 is not located at airport l0_0, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l0_2, object t1 is not located at airport l1_1, object t2 is located at airport l0_1, object t2 is not at airport l0_0, object t2 is not at airport l0_2, object t2 is not at airport l1_0, object t2 is not at airport l1_2, object t2 is not located at airport l1_1, package p0 is in vehicle t1, package p0 is not in vehicle a0, package p0 is not in vehicle a1, package p0 is not located in vehicle t0, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle t1, package p2 is not in vehicle a0, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle a1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle t0, package p3 is not located in vehicle a1, package p3 is not located in vehicle t1 and package p3 is not located in vehicle t2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fabfd266-0a61-41a7-8c80-0a67b5667b21", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p0 is not located, at airport l0_0, object p2 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_0, object t1 is located, at airport l0_0, object t2 is located, at airport l0_1, object t0 is located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is located, at airport l0_2, object t0 is not located, at airport l0_2, object t2 is located, at airport l1_0, object p1 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p3 is located, at airport l1_1, object t1 is located, at airport l1_2, object p1 is located, at airport l1_2, object p2 is located, at airport l1_2, object p3 is located, at airport l1_2, object t2 is not located, object a0 is at airport l1_0, object a0 is at airport l1_1, object a0 is located at airport l1_2, object a0 is not at airport l0_1, object a0 is not located at airport l0_0, object a1 is at airport l1_0, object a1 is located at airport l1_2, object a1 is not at airport l0_0, object a1 is not at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object p0 is at airport l0_2, object p0 is located at airport l1_0, object p0 is not at airport l0_1, object p0 is not at airport l1_2, object p1 is at airport l0_2, object p1 is located at airport l0_0, object p1 is not at airport l0_1, object p1 is not located at airport l1_1, object p2 is located at airport l1_0, object p2 is located at airport l1_1, object p2 is not at airport l0_1, object p2 is not at airport l0_2, object p3 is located at airport l0_1, object p3 is located at airport l0_2, object p3 is located at airport l1_0, object t0 is located at airport l1_0, object t0 is not at airport l1_2, object t0 is not located at airport l1_1, object t1 is located at airport l0_2, object t1 is located at airport l1_0, object t1 is located at airport l1_2, object t2 is not at airport l0_1, object t2 is not at airport l1_1, object t2 is not located at airport l1_0, package p0 is located in vehicle a0, package p0 is located in vehicle a1, package p0 is not in vehicle t1, package p0 is not in vehicle t2, package p0 is present in vehicle t0, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p1 is present in vehicle t0, package p2 is in vehicle t1, package p2 is not in vehicle t0, package p2 is not located in vehicle a0, package p2 is not present in vehicle a1, package p2 is not present in vehicle t2, package p3 is in vehicle a1, package p3 is located in vehicle t0, package p3 is located in vehicle t1, package p3 is not in vehicle t2 and package p3 is not located in vehicle a0?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "bdd804cd-c22d-4d41-8854-36d862015499", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, city c0 contains airport l0_1 and city c1 contains airport l1_2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "2bb4d355-0a11-4224-b599-fbc2ffb1f0e8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c1, airport l0_1 is in city c1, airport l0_1 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c0, airport l1_1 is in city c1, airport l1_2 is located in city c0, city c0 contains airport l0_0, city c1 contains airport l0_2 and city c1 contains airport l1_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3d2fd7db-d3fc-4f47-8b11-77206a256e29", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0 and city c1 does not contain airport l0_1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "53a41c87-b6bf-43a1-b2db-2c5f998b4060", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c0airport l0_0 is not located in city c0, airport l0_1 is not in city c0airport l0_1 is not located in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c0airport l0_2 is not located in city c0, airport l1_0 is not in city c1airport l1_0 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_1 is not in city c1airport l1_1 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 does not contain airport l1_0, city c1 does not contain airport l0_0, city c1 does not contain airport l0_2 and city c1 does not contain airport l1_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "653bb218-6d29-44f2-9359-f252fb2ed75a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is in city c1, airport l1_2 is located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 contains airport l0_0, city c0 does not contain airport l1_1 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "47164034-c2d8-45a1-9d15-f3211d768344", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is located in city c0, airport l0_2 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_2 is not in city c1airport l1_2 is not located in city c1, city c0 contains airport l1_1, city c0 contains airport l1_2, city c0 does not contain airport l0_2, city c1 contains airport l0_1, city c1 contains airport l1_0 and city c1 contains airport l1_1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7cf655f3-bef0-4e46-bb6e-551fb3e77c94", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state,. What are the self constraint properties of the state for p3? Write None if there are none", "answer": "at airport l0_2, object p3 is located", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "a8a5c1a7-b0b7-4ba0-9193-4c4b03dc2231", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state,. What are the self constraint properties of the state for t2? Write None if there are none", "answer": "at airport l0_0, object t2 is not located, at airport l1_0, object t2 is not located, object t2 is not at airport l0_2, object t2 is not at airport l1_1, object t2 is not at airport l1_2, package p0 is not in vehicle t2, package p1 is not in vehicle t2, package p2 is not in vehicle t2 and package p3 is not present in vehicle t2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d39e05ae-bb39-40ae-9418-72a60337ff6c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state,. What are the self constraint properties of the state for l1_1? Write None if there are none", "answer": "at airport l1_1, object t2 is not located, object a0 is not at airport l1_1, object a1 is not located at airport l1_1, object p0 is not at airport l1_1, object p1 is located at airport l1_1, object p2 is not at airport l1_1, object p3 is not at airport l1_1, object t0 is not at airport l1_1 and object t1 is not located at airport l1_1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "095f86d6-733d-4cd3-b1b2-742643cd2946", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state,. What are the static properties of the state for l0_2? Write None if there are none", "answer": "city c0 contains airport l0_2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "b59dda83-a172-4295-8b55-261373321434", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state,. What are the static properties of the state for l0_0? Write None if there are none", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "6fa61050-8a7a-4d25-b9fb-8e70fb4e74d3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state,. What are the static properties of the state for c0? Write None if there are none", "answer": "airport l0_1 is in city c0, airport l0_2 is located in city c0, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, city c0 contains airport l0_0 and city c0 does not contain airport l1_2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9a0bcb37-8a88-4761-a685-22dfba67cb65", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is it True or False that object p1 is located at airport l1_0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "c95efdf3-d75c-4d83-aa8a-f97b4a6a14f3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is it True or False that at airport l0_2, object p3 is not located?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "939a895e-1db2-4626-8348-936a6a78987e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is it True or False that object p1 is not located at airport l0_0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "fa434eb6-a0ee-4071-bf41-62bd340ba04f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is it True or False that airport l1_1 is located in city c1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3695f788-4e35-4964-9043-23e0a135b22d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is it True or False that airport l0_2 is not in city c0airport l0_2 is not located in city c0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "87342744-c155-4285-b8a8-c5bb86ec6004", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is it True or False that airport l1_0 is not in city c0airport l1_0 is not located in city c0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "462e173e-3664-499f-a911-0db9c9ae19f8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a1 is located, at airport l1_0, object t1 is located, object a0 is located at airport l1_0, object p1 is at airport l1_0, object p2 is at airport l0_2 and package p0 is in vehicle t1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "27b9c98c-6a03-4f02-8342-ca919d8c909c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is located, at airport l0_0, object a1 is located, at airport l0_0, object p0 is located, at airport l0_0, object p1 is located, at airport l0_0, object p3 is located, at airport l0_1, object a0 is located, at airport l0_1, object p0 is located, at airport l0_1, object p2 is located, at airport l0_1, object t2 is located, at airport l0_2, object a1 is located, at airport l0_2, object p2 is located, at airport l0_2, object t1 is located, at airport l1_0, object a0 is located, at airport l1_0, object p1 is located, at airport l1_0, object p2 is located, at airport l1_0, object t0 is located, at airport l1_1, object p0 is located, at airport l1_1, object p2 is located, at airport l1_1, object p3 is located, at airport l1_1, object t1 is located, at airport l1_2, object a0 is located, at airport l1_2, object a1 is located, at airport l1_2, object p0 is located, at airport l1_2, object p1 is located, object a0 is located at airport l0_2, object a0 is located at airport l1_1, object a1 is at airport l0_1, object a1 is at airport l1_0, object a1 is at airport l1_1, object p0 is at airport l0_2, object p0 is located at airport l1_0, object p1 is at airport l1_1, object p1 is located at airport l0_1, object p1 is located at airport l0_2, object p2 is at airport l0_0, object p2 is located at airport l1_2, object p3 is at airport l0_1, object p3 is at airport l1_2, object p3 is located at airport l0_2, object p3 is located at airport l1_0, object t0 is at airport l0_0, object t0 is at airport l0_1, object t0 is at airport l1_1, object t0 is located at airport l0_2, object t0 is located at airport l1_2, object t1 is at airport l0_0, object t1 is at airport l0_1, object t1 is located at airport l1_0, object t1 is located at airport l1_2, object t2 is at airport l0_0, object t2 is at airport l1_0, object t2 is at airport l1_1, object t2 is at airport l1_2, object t2 is located at airport l0_2, package p0 is in vehicle t1, package p0 is located in vehicle a0, package p0 is located in vehicle t0, package p0 is present in vehicle a1, package p0 is present in vehicle t2, package p1 is in vehicle a0, package p1 is in vehicle a1, package p1 is in vehicle t1, package p1 is in vehicle t2, package p1 is present in vehicle t0, package p2 is in vehicle a0, package p2 is in vehicle a1, package p2 is in vehicle t1, package p2 is in vehicle t2, package p2 is located in vehicle t0, package p3 is in vehicle t1, package p3 is located in vehicle a0, package p3 is located in vehicle a1, package p3 is located in vehicle t0 and package p3 is present in vehicle t2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8b452f0e-94bc-4aa2-8248-f5bdf19b74db", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t1 is not located, object a0 is not at airport l0_0, object a0 is not at airport l0_1, object a0 is not at airport l1_2, object a1 is not at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not at airport l0_2, object p0 is not at airport l1_1, object p0 is not located at airport l1_0, object p1 is not at airport l0_2, object p1 is not located at airport l0_0, object p1 is not located at airport l1_2, object p2 is not at airport l0_0, object p2 is not located at airport l0_1, object p2 is not located at airport l1_0, object p2 is not located at airport l1_1, object p2 is not located at airport l1_2, object p3 is not at airport l0_1, object p3 is not at airport l1_1, object p3 is not located at airport l0_0, object t0 is not at airport l0_0, object t0 is not at airport l1_0, object t0 is not located at airport l0_1, object t0 is not located at airport l1_2, object t1 is not located at airport l1_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, package p0 is not in vehicle t0, package p0 is not located in vehicle a0, package p0 is not present in vehicle a1, package p0 is not present in vehicle t2, package p1 is not in vehicle t1, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a1, package p2 is not in vehicle a1, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not located in vehicle t2 and package p3 is not present in vehicle t0?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d8ba377b-1f7c-49b6-a7b4-f427a4dabd0e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object t0 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object t0 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t0 is not located, object a0 is not at airport l0_0, object a0 is not at airport l0_2, object a0 is not at airport l1_0, object a0 is not at airport l1_2, object a0 is not located at airport l0_1, object a1 is not at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l1_0, object p0 is not located at airport l0_1, object p0 is not located at airport l0_2, object p1 is not at airport l0_1, object p1 is not at airport l1_0, object p1 is not at airport l1_1, object p1 is not located at airport l0_2, object p1 is not located at airport l1_2, object p2 is not at airport l0_0, object p2 is not at airport l0_2, object p2 is not at airport l1_0, object p2 is not at airport l1_1, object p2 is not located at airport l1_2, object p3 is not at airport l1_1, object p3 is not located at airport l0_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_0, object t0 is not at airport l0_1, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is not at airport l0_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_1, object t1 is not located at airport l1_2, object t2 is not at airport l0_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, object t2 is not located at airport l1_0, package p0 is not in vehicle a0, package p0 is not in vehicle a1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t1, package p0 is not present in vehicle t2, package p1 is not in vehicle a0, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not located in vehicle t1, package p2 is not present in vehicle a0, package p2 is not present in vehicle a1, package p2 is not present in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle a1, package p3 is not in vehicle t2, package p3 is not located in vehicle t0, package p3 is not present in vehicle a0 and package p3 is not present in vehicle t1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "eb4f5519-7d41-474e-8f10-228c7d8c3bdc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object t0 is not located, at airport l1_0, object a1 is located, at airport l1_0, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t2 is not located, object a0 is located at airport l1_0, object a0 is not at airport l0_0, object a0 is not at airport l0_1, object a0 is not at airport l1_1, object a0 is not located at airport l0_2, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object p0 is not at airport l0_0, object p0 is not at airport l0_1, object p0 is not at airport l1_1, object p0 is not located at airport l0_2, object p0 is not located at airport l1_2, object p1 is located at airport l1_0, object p1 is not at airport l0_2, object p1 is not located at airport l0_1, object p1 is not located at airport l1_2, object p2 is located at airport l0_2, object p2 is not at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l0_1, object p3 is located at airport l0_2, object p3 is not at airport l1_0, object p3 is not located at airport l0_1, object p3 is not located at airport l1_2, object t0 is at airport l0_2, object t0 is not at airport l0_0, object t0 is not at airport l1_1, object t0 is not at airport l1_2, object t0 is not located at airport l1_0, object t1 is at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l1_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_1, object t1 is not located at airport l0_2, object t2 is at airport l0_1, object t2 is not at airport l0_2, object t2 is not at airport l1_0, object t2 is not located at airport l1_1, package p0 is located in vehicle t1, package p0 is not in vehicle a1, package p0 is not in vehicle t0, package p0 is not in vehicle t2, package p0 is not present in vehicle a0, package p1 is not in vehicle t0, package p1 is not in vehicle t2, package p1 is not located in vehicle t1, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p2 is not in vehicle t1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0, package p2 is not present in vehicle a1, package p3 is not in vehicle t1, package p3 is not located in vehicle a0, package p3 is not located in vehicle a1, package p3 is not located in vehicle t0 and package p3 is not located in vehicle t2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a9b4f64c-87ea-403e-8d94-bdd3b5057041", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p2 is located, at airport l0_0, object p3 is not located, at airport l0_0, object t2 is not located, at airport l0_2, object a0 is located, at airport l0_2, object p0 is not located, at airport l0_2, object p3 is located, at airport l0_2, object t2 is not located, at airport l1_0, object p0 is located, at airport l1_0, object p2 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object t1 is located, at airport l1_1, object t2 is located, at airport l1_2, object a1 is located, at airport l1_2, object p0 is located, at airport l1_2, object p2 is not located, at airport l1_2, object t0 is located, object a0 is at airport l0_1, object a0 is located at airport l1_2, object a0 is not at airport l0_0, object a0 is not at airport l1_1, object a0 is not located at airport l1_0, object a1 is at airport l0_2, object a1 is located at airport l0_1, object a1 is not located at airport l0_0, object a1 is not located at airport l1_0, object p0 is at airport l0_1, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p1 is at airport l0_0, object p1 is at airport l0_2, object p1 is located at airport l1_0, object p1 is located at airport l1_1, object p1 is not located at airport l0_1, object p1 is not located at airport l1_2, object p2 is not at airport l1_1, object p2 is not located at airport l0_1, object p2 is not located at airport l0_2, object p3 is at airport l0_1, object p3 is located at airport l1_2, object p3 is not at airport l1_0, object p3 is not located at airport l1_1, object t0 is at airport l1_1, object t0 is not at airport l0_0, object t0 is not at airport l0_2, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t1 is at airport l0_0, object t1 is at airport l0_1, object t1 is at airport l1_2, object t1 is located at airport l1_0, object t1 is not located at airport l0_2, object t2 is not at airport l0_1, object t2 is not at airport l1_2, package p0 is not in vehicle t1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p0 is present in vehicle a1, package p1 is located in vehicle a0, package p1 is located in vehicle a1, package p1 is not located in vehicle t0, package p1 is not located in vehicle t1, package p1 is present in vehicle t2, package p2 is in vehicle t2, package p2 is located in vehicle t0, package p2 is located in vehicle t1, package p2 is not in vehicle a0, package p2 is present in vehicle a1, package p3 is in vehicle t1, package p3 is not in vehicle a0, package p3 is not in vehicle t2, package p3 is not located in vehicle a1 and package p3 is not located in vehicle t0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "bf5c53ea-9816-41bb-bde3-561a80d7e317", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c0, airport l0_1 is in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1 and airport l1_2 is located in city c1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "cee9df45-c333-4307-8304-2bba264c0dcc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c1, airport l0_1 is in city c0, airport l0_2 is in city c0, airport l0_2 is located in city c1, airport l1_1 is in city c0, airport l1_1 is located in city c1, airport l1_2 is located in city c1, city c0 contains airport l0_0, city c0 contains airport l1_0, city c0 contains airport l1_2, city c1 contains airport l0_1 and city c1 contains airport l1_0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f6a8fece-6ec8-4520-8d1d-88bab28d4c12", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "989cc7c9-ab3e-4a1e-a458-88f56c216394", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c0airport l0_0 is not located in city c0, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_1 is not in city c1airport l1_1 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, airport l1_2 is not in city c1airport l1_2 is not located in city c1, city c0 does not contain airport l0_1, city c0 does not contain airport l0_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, city c1 does not contain airport l0_2 and city c1 does not contain airport l1_0?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "f790da81-38e5-45b6-9bda-77f006461331", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 contains airport l1_1, city c1 contains airport l1_2 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "8054ad32-c8d8-482b-b9cf-3c000c713ad6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c1, airport l0_1 is located in city c0, airport l0_2 is not in city c0airport l0_2 is not located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is in city c1, airport l1_2 is in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 contains airport l1_1, city c0 does not contain airport l0_0, city c0 does not contain airport l1_0, city c1 contains airport l0_1 and city c1 does not contain airport l1_1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fd056360-9a16-425a-87f6-885e5f464542", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state,. What are the self constraint properties of the state for t0? Write None if there are none", "answer": "object t0 is at airport l0_2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "e07548b2-889c-4ae3-95dd-c009f893c2c7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state,. What are the self constraint properties of the state for p0? Write None if there are none", "answer": "at airport l0_2, object p0 is not located, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p0 is not located at airport l1_2, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle t0 and package p0 is not present in vehicle a1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "445d2651-25cd-4da4-8a40-f723937f924b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state,. What are the self constraint properties of the state for t0? Write None if there are none", "answer": "at airport l1_0, object t0 is not located, at airport l1_2, object t0 is not located, object t0 is at airport l0_2, object t0 is not at airport l0_0, object t0 is not located at airport l0_1, object t0 is not located at airport l1_1, package p0 is not located in vehicle t0, package p1 is not located in vehicle t0, package p2 is not present in vehicle t0 and package p3 is not present in vehicle t0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9ce831a0-64b8-4464-bc70-451b38b2f001", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state,. What are the static properties of the state for l0_2? Write None if there are none", "answer": "city c0 contains airport l0_2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ee5061a0-1e07-418b-afae-6a60bcc34560", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state,. What are the static properties of the state for l0_2? Write None if there are none", "answer": "airport l0_2 is not in city c1airport l0_2 is not located in city c1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "233b0717-fc60-4f7c-93c4-816aa6d47beb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state,. What are the static properties of the state for l0_0? Write None if there are none", "answer": "airport l0_0 is located in city c0 and airport l0_0 is not in city c1airport l0_0 is not located in city c1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "dd50c4d8-0a0e-43e3-94b0-2c510bb3dba7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is it True or False that at airport l1_0, object p1 is located?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3550d258-8e69-4694-92a9-eccc54f31376", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is it True or False that object t0 is not at airport l0_0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "fdcff204-d365-4451-9945-14e7529643b2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is it True or False that object p0 is not located at airport l1_2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "44da174a-2dc3-40da-ad84-b3c649894b3c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that airport l1_1 is in city c1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "45f30ff6-313e-4e55-ab10-b03a10fcada0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is it True or False that city c0 does not contain airport l0_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "d95afa1d-91f5-4ac0-91e7-65628c19dac2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is it True or False that airport l1_1 is not in city c0airport l1_1 is not located in city c0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "7b673c80-808a-490d-afc6-f79cd79306fa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object t0 is located, at airport l1_0, object a1 is located, at airport l1_0, object p0 is located, at airport l1_0, object p1 is located, at airport l1_0, object t1 is located, object a0 is at airport l1_0, object p2 is located at airport l0_0, object t2 is at airport l0_1 and package p3 is located in vehicle t0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "d5e9ce98-c7c9-4436-afa2-6f430d70319c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p0 is located, at airport l0_0, object p2 is located, at airport l0_1, object a0 is located, at airport l0_1, object a1 is located, at airport l0_1, object p3 is located, at airport l0_1, object t0 is located, at airport l0_2, object t1 is located, at airport l1_0, object a0 is located, at airport l1_0, object p3 is located, at airport l1_0, object t0 is located, at airport l1_0, object t2 is located, at airport l1_1, object a0 is located, at airport l1_2, object p0 is located, object a0 is at airport l0_2, object a0 is located at airport l0_0, object a0 is located at airport l1_2, object a1 is at airport l0_0, object a1 is at airport l1_1, object a1 is located at airport l0_2, object a1 is located at airport l1_0, object a1 is located at airport l1_2, object p0 is at airport l1_0, object p0 is at airport l1_1, object p0 is located at airport l0_1, object p0 is located at airport l0_2, object p1 is at airport l0_0, object p1 is at airport l1_1, object p1 is at airport l1_2, object p1 is located at airport l0_1, object p1 is located at airport l0_2, object p1 is located at airport l1_0, object p2 is at airport l0_1, object p2 is at airport l0_2, object p2 is at airport l1_0, object p2 is at airport l1_1, object p2 is at airport l1_2, object p3 is at airport l0_0, object p3 is at airport l0_2, object p3 is at airport l1_1, object p3 is at airport l1_2, object t0 is at airport l0_0, object t0 is at airport l0_2, object t0 is at airport l1_1, object t0 is at airport l1_2, object t1 is at airport l1_2, object t1 is located at airport l0_0, object t1 is located at airport l0_1, object t1 is located at airport l1_0, object t1 is located at airport l1_1, object t2 is at airport l0_0, object t2 is at airport l0_2, object t2 is at airport l1_2, object t2 is located at airport l0_1, object t2 is located at airport l1_1, package p0 is in vehicle a0, package p0 is in vehicle t2, package p0 is located in vehicle t0, package p0 is present in vehicle a1, package p0 is present in vehicle t1, package p1 is located in vehicle a0, package p1 is located in vehicle t0, package p1 is located in vehicle t1, package p1 is located in vehicle t2, package p1 is present in vehicle a1, package p2 is in vehicle t0, package p2 is in vehicle t1, package p2 is located in vehicle a1, package p2 is located in vehicle t2, package p2 is present in vehicle a0, package p3 is in vehicle a0, package p3 is in vehicle a1, package p3 is located in vehicle t1, package p3 is present in vehicle t0 and package p3 is present in vehicle t2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ba52b594-fec8-4f28-a38f-6dad64c16def", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is not located, at airport l0_0, object t1 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t0 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_1, object p0 is not located at airport l0_2, object p1 is not located at airport l0_0, object p1 is not located at airport l0_2, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l0_2, object p2 is not located at airport l1_0, object p3 is not at airport l0_0, object p3 is not located at airport l0_2, object t0 is not at airport l0_2, object t0 is not at airport l1_2, object t0 is not located at airport l1_1, object t1 is not located at airport l1_1, object t2 is not at airport l1_1, object t2 is not located at airport l0_2, object t2 is not located at airport l1_0, package p0 is not in vehicle t2, package p0 is not located in vehicle a1, package p0 is not present in vehicle a0, package p0 is not present in vehicle t0, package p0 is not present in vehicle t1, package p1 is not in vehicle t1, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p2 is not in vehicle a0, package p2 is not in vehicle t2, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p3 is not in vehicle a0, package p3 is not in vehicle t1, package p3 is not located in vehicle a1 and package p3 is not present in vehicle t2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "11f388b4-9635-4db0-ab6b-ac458fde86fa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is not located, at airport l0_0, object p2 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t2 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object p3 is not located, object a0 is not at airport l0_1, object a0 is not at airport l1_0, object a0 is not at airport l1_1, object a0 is not at airport l1_2, object a1 is not at airport l1_2, object a1 is not located at airport l0_0, object a1 is not located at airport l0_2, object a1 is not located at airport l1_0, object a1 is not located at airport l1_1, object p0 is not at airport l0_0, object p0 is not at airport l1_1, object p0 is not located at airport l1_0, object p0 is not located at airport l1_2, object p1 is not at airport l1_1, object p1 is not located at airport l0_0, object p1 is not located at airport l0_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_2, object p2 is not located at airport l1_0, object p2 is not located at airport l1_2, object p3 is not at airport l0_2, object p3 is not at airport l1_0, object t0 is not at airport l0_1, object t0 is not at airport l0_2, object t0 is not at airport l1_0, object t0 is not at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not located at airport l0_0, object t1 is not located at airport l1_2, object t2 is not at airport l0_0, object t2 is not at airport l1_1, object t2 is not located at airport l1_0, object t2 is not located at airport l1_2, package p0 is not in vehicle t0, package p0 is not located in vehicle a0, package p0 is not located in vehicle a1, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p1 is not in vehicle a0, package p1 is not in vehicle t0, package p1 is not in vehicle t1, package p1 is not in vehicle t2, package p1 is not located in vehicle a1, package p2 is not in vehicle t1, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not in vehicle t2, package p3 is not located in vehicle t0 and package p3 is not present in vehicle a0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "5e863988-7bd9-405b-a5c5-8676e126f925", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is not located, at airport l0_0, object p0 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t0 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p3 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object t0 is not located, object a0 is located at airport l1_0, object a0 is not at airport l0_0, object a0 is not located at airport l1_1, object a0 is not located at airport l1_2, object a1 is at airport l1_0, object a1 is not at airport l1_2, object p0 is located at airport l1_0, object p0 is not located at airport l0_1, object p1 is located at airport l1_0, object p1 is not at airport l1_2, object p1 is not located at airport l0_0, object p1 is not located at airport l1_1, object p2 is at airport l0_0, object p2 is not at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l0_2, object p2 is not located at airport l1_1, object p3 is not at airport l0_0, object p3 is not at airport l1_2, object t0 is located at airport l0_0, object t0 is not at airport l0_2, object t0 is not at airport l1_0, object t1 is at airport l1_0, object t1 is not at airport l0_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_0, object t1 is not located at airport l1_1, object t2 is located at airport l0_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_0, object t2 is not located at airport l1_1, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle a1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t1, package p1 is not in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t1, package p1 is not present in vehicle t2, package p2 is not in vehicle a1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle a0, package p2 is not present in vehicle t2, package p3 is in vehicle t0, package p3 is not located in vehicle a0, package p3 is not located in vehicle t1, package p3 is not located in vehicle t2 and package p3 is not present in vehicle a1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4559305d-f4f6-40f5-be39-fd43d450e41e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is located, at airport l0_0, object p0 is not located, at airport l0_0, object p2 is not located, at airport l0_1, object a0 is located, at airport l0_1, object t1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is located, at airport l0_2, object t1 is located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p1 is located, at airport l1_1, object p0 is located, at airport l1_1, object t0 is not located, at airport l1_2, object a1 is located, at airport l1_2, object p1 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object t1 is not located, object a0 is at airport l0_0, object a0 is at airport l1_2, object a0 is located at airport l0_2, object a0 is located at airport l1_0, object a0 is not located at airport l1_1, object a1 is at airport l0_2, object a1 is not at airport l0_1, object a1 is not at airport l1_1, object p0 is at airport l1_0, object p0 is located at airport l0_1, object p0 is not at airport l1_2, object p0 is not located at airport l0_2, object p1 is located at airport l0_1, object p1 is not at airport l0_0, object p1 is not at airport l0_2, object p1 is not at airport l1_1, object p2 is at airport l1_1, object p2 is located at airport l0_1, object p2 is not located at airport l1_0, object p3 is at airport l0_0, object p3 is located at airport l1_0, object p3 is not at airport l0_1, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is at airport l0_1, object t0 is located at airport l0_2, object t0 is not at airport l1_0, object t0 is not at airport l1_2, object t0 is not located at airport l0_0, object t1 is at airport l0_0, object t1 is at airport l1_0, object t1 is not located at airport l1_1, object t2 is at airport l0_0, object t2 is at airport l0_1, object t2 is located at airport l1_0, object t2 is located at airport l1_1, object t2 is not at airport l1_2, package p0 is in vehicle t0, package p0 is located in vehicle t1, package p0 is not in vehicle t2, package p0 is not located in vehicle a1, package p0 is present in vehicle a0, package p1 is located in vehicle a0, package p1 is located in vehicle t1, package p1 is not in vehicle t2, package p1 is not located in vehicle t0, package p1 is present in vehicle a1, package p2 is in vehicle t1, package p2 is located in vehicle a0, package p2 is not located in vehicle t0, package p2 is present in vehicle a1, package p2 is present in vehicle t2, package p3 is located in vehicle a0, package p3 is not in vehicle t0, package p3 is not located in vehicle a1, package p3 is not located in vehicle t1 and package p3 is not located in vehicle t2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fcecfe75-7a0b-44be-82d4-c661e722b9ee", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c0, airport l0_1 is in city c0, airport l1_1 is located in city c1, airport l1_2 is located in city c1, city c0 contains airport l0_2 and city c1 contains airport l1_0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "3a2d379e-9717-4f10-a665-377aa13c3516", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_1 is in city c0, airport l0_1 is located in city c1, airport l0_2 is in city c1, airport l0_2 is located in city c0, airport l1_0 is located in city c0, airport l1_1 is in city c0, airport l1_2 is located in city c0, city c0 contains airport l0_0, city c1 contains airport l0_0, city c1 contains airport l1_0, city c1 contains airport l1_1 and city c1 contains airport l1_2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "977e52e7-3478-4280-a006-c51682281382", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_0?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "582c4dbc-8867-47ec-9dd3-36556e46f40f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_2 is not in city c0airport l0_2 is not located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_0 is not in city c1airport l1_0 is not located in city c1, city c0 does not contain airport l0_0, city c0 does not contain airport l0_1, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, city c1 does not contain airport l1_1 and city c1 does not contain airport l1_2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "4713c50c-15a3-4e81-a6a5-7eadb416aa27", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 contains airport l0_0, city c0 does not contain airport l1_0, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ffb26d30-a8f9-463c-a5b6-bc4b7b977650", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c0airport l0_2 is not located in city c0, airport l1_2 is located in city c1, city c0 contains airport l0_1, city c0 contains airport l1_0, city c0 does not contain airport l0_0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 contains airport l0_0, city c1 does not contain airport l0_2, city c1 does not contain airport l1_0 and city c1 does not contain airport l1_1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "2e45bb89-c1d3-4d37-b794-a9d46a5079a5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state,. What are the self constraint properties of the state for p1? Write None if there are none", "answer": "object p1 is at airport l1_0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "213b6006-e52c-4fea-86bf-7e9a0c9741f1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state,. What are the self constraint properties of the state for p2? Write None if there are none", "answer": "at airport l1_1, object p2 is not located, object p2 is not at airport l0_1, object p2 is not at airport l0_2, object p2 is not at airport l1_2, object p2 is not located at airport l1_0, package p2 is not in vehicle a1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0 and package p2 is not present in vehicle t1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "b6d7b9f4-566f-450f-8a84-48df0d92c587", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state,. What are the self constraint properties of the state for l0_1? Write None if there are none", "answer": "at airport l0_1, object a1 is not located, at airport l0_1, object p3 is not located, object a0 is not at airport l0_1, object p0 is not at airport l0_1, object p1 is not located at airport l0_1, object p2 is not located at airport l0_1, object t0 is not at airport l0_1, object t1 is not located at airport l0_1 and object t2 is at airport l0_1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "038d8beb-0942-4f3a-a06c-c889131c3e50", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state,. What are the static properties of the state for c1? Write None if there are none", "answer": "airport l1_0 is located in city c1, city c1 contains airport l1_1 and city c1 contains airport l1_2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "14e5ad86-9f86-48ea-9e4a-562906d375ac", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state,. What are the static properties of the state for c0? Write None if there are none", "answer": "airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0 and city c0 does not contain airport l1_0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "f7d5e083-2b67-46ee-b707-479b09c94533", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state,. What are the static properties of the state for l1_0? Write None if there are none", "answer": "airport l1_0 is located in city c1 and airport l1_0 is not in city c0airport l1_0 is not located in city c0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d2c40c93-cbd0-44a7-8eba-5fe68fb8e82b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is it True or False that package p2 is in vehicle a1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8ff169b1-b09d-42f6-950f-ceb9023a741c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that object t1 is not located at airport l1_0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "0bb9d8ae-75c7-4a27-ac75-582b9865a33c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that package p0 is not located in vehicle t2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9eead0fb-824b-4880-b4dd-da46251680e0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that airport l0_1 is located in city c0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "a6a8ef19-85f4-4a32-a002-a9d6f9bb1a12", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that city c0 does not contain airport l0_0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "5ff8b5a5-74f0-4c18-8b67-67310fa2c158", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is it True or False that city c0 does not contain airport l1_0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "38dbca53-cd0f-4453-854d-b571244f6775", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is located, at airport l0_1, object t2 is located, at airport l1_0, object a0 is located, object p1 is located at airport l0_0, object t0 is at airport l0_0, object t1 is at airport l1_0, package p0 is in vehicle a1, package p2 is in vehicle a1 and package p3 is located in vehicle t0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "83f9db86-d9a9-47a9-ab57-245b515eb4ab", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is located, at airport l0_0, object p0 is located, at airport l0_0, object p2 is located, at airport l0_1, object a1 is located, at airport l0_1, object p1 is located, at airport l0_1, object p2 is located, at airport l0_1, object t1 is located, at airport l0_2, object p0 is located, at airport l0_2, object p1 is located, at airport l1_0, object a1 is located, at airport l1_0, object p1 is located, at airport l1_0, object p2 is located, at airport l1_0, object p3 is located, at airport l1_1, object a0 is located, at airport l1_2, object p0 is located, at airport l1_2, object p1 is located, at airport l1_2, object p2 is located, at airport l1_2, object p3 is located, at airport l1_2, object t1 is located, at airport l1_2, object t2 is located, object a0 is at airport l1_2, object a0 is located at airport l0_1, object a0 is located at airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l0_0, object a1 is at airport l1_2, object a1 is located at airport l0_2, object a1 is located at airport l1_1, object p0 is located at airport l0_1, object p0 is located at airport l1_0, object p0 is located at airport l1_1, object p1 is at airport l0_0, object p1 is located at airport l1_1, object p2 is at airport l0_2, object p2 is at airport l1_1, object p3 is at airport l0_0, object p3 is at airport l1_1, object p3 is located at airport l0_1, object p3 is located at airport l0_2, object t0 is at airport l0_0, object t0 is at airport l0_1, object t0 is at airport l0_2, object t0 is at airport l1_0, object t0 is at airport l1_1, object t0 is located at airport l1_2, object t1 is at airport l0_2, object t1 is located at airport l0_0, object t1 is located at airport l1_0, object t1 is located at airport l1_1, object t2 is at airport l0_0, object t2 is at airport l0_1, object t2 is located at airport l0_2, object t2 is located at airport l1_0, object t2 is located at airport l1_1, package p0 is located in vehicle t0, package p0 is located in vehicle t1, package p0 is located in vehicle t2, package p0 is present in vehicle a0, package p0 is present in vehicle a1, package p1 is located in vehicle a1, package p1 is located in vehicle t0, package p1 is present in vehicle a0, package p1 is present in vehicle t1, package p1 is present in vehicle t2, package p2 is in vehicle a0, package p2 is located in vehicle a1, package p2 is located in vehicle t0, package p2 is present in vehicle t1, package p2 is present in vehicle t2, package p3 is in vehicle a0, package p3 is in vehicle t0, package p3 is in vehicle t2, package p3 is located in vehicle t1 and package p3 is present in vehicle a1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "1acbf6b2-e180-4ac3-a5fe-e6ac76f4ebd3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p0 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object t0 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object p2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t2 is not located, object a0 is not at airport l0_0, object a0 is not located at airport l0_1, object a1 is not at airport l0_2, object a1 is not at airport l1_0, object a1 is not at airport l1_1, object a1 is not located at airport l0_1, object a1 is not located at airport l1_2, object p0 is not located at airport l1_2, object p1 is not at airport l0_2, object p1 is not at airport l1_0, object p1 is not at airport l1_1, object p1 is not located at airport l0_1, object p2 is not at airport l0_0, object p2 is not at airport l0_1, object p2 is not located at airport l1_1, object p3 is not at airport l0_0, object p3 is not at airport l1_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is not at airport l0_1, object t0 is not located at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l1_2, object t1 is not located at airport l0_1, object t1 is not located at airport l0_2, object t2 is not at airport l0_0, object t2 is not at airport l1_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, package p0 is not in vehicle t2, package p0 is not located in vehicle t0, package p0 is not present in vehicle a0, package p0 is not present in vehicle t1, package p1 is not in vehicle t2, package p1 is not located in vehicle a1, package p1 is not located in vehicle t0, package p1 is not present in vehicle a0, package p1 is not present in vehicle t1, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p3 is not in vehicle a0, package p3 is not located in vehicle a1, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "8f2b6571-173b-4adc-ab41-c2d51c1571a4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object t0 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p2 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p2 is not located, object a0 is not at airport l0_0, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a0 is not located at airport l1_0, object a0 is not located at airport l1_2, object a1 is not at airport l0_1, object a1 is not at airport l1_1, object a1 is not located at airport l0_0, object p0 is not at airport l1_2, object p0 is not located at airport l0_0, object p0 is not located at airport l0_1, object p0 is not located at airport l0_2, object p1 is not at airport l0_2, object p1 is not at airport l1_0, object p1 is not located at airport l1_2, object p2 is not at airport l0_2, object p2 is not at airport l1_0, object p2 is not located at airport l0_0, object p2 is not located at airport l0_1, object p3 is not at airport l0_2, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, object p3 is not located at airport l1_1, object t0 is not at airport l0_1, object t0 is not located at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l1_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t1 is not located at airport l1_1, object t2 is not located at airport l0_1, object t2 is not located at airport l1_0, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is not in vehicle a1, package p0 is not in vehicle t0, package p0 is not located in vehicle a0, package p0 is not located in vehicle t2, package p0 is not present in vehicle t1, package p1 is not in vehicle a1, package p1 is not in vehicle t1, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p1 is not present in vehicle t2, package p2 is not located in vehicle a0, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p2 is not present in vehicle a1, package p2 is not present in vehicle t0, package p3 is not in vehicle t1, package p3 is not in vehicle t2, package p3 is not located in vehicle a0, package p3 is not located in vehicle t0 and package p3 is not present in vehicle a1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "f870f8f4-3f9e-46dd-b68e-2810126e8048", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is not located, at airport l0_0, object p2 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t2 is located, at airport l0_2, object a0 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t0 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object a0 is located, at airport l1_0, object t1 is located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object t1 is not located, object a0 is not at airport l0_1, object a0 is not located at airport l1_2, object a1 is located at airport l0_0, object a1 is not at airport l1_0, object a1 is not at airport l1_1, object a1 is not located at airport l0_1, object p0 is not at airport l0_0, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p1 is located at airport l0_0, object p1 is not at airport l0_2, object p1 is not at airport l1_1, object p1 is not at airport l1_2, object p1 is not located at airport l1_0, object p2 is not at airport l0_1, object p2 is not at airport l1_0, object p2 is not located at airport l0_2, object p3 is not at airport l1_0, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object t0 is at airport l0_0, object t0 is not at airport l0_1, object t0 is not at airport l1_0, object t0 is not located at airport l1_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_1, object t2 is not at airport l0_2, object t2 is not at airport l1_2, package p0 is in vehicle a1, package p0 is not in vehicle a0, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p0 is not present in vehicle t0, package p1 is not in vehicle t0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle t1, package p2 is located in vehicle a1, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not located in vehicle a0, package p2 is not present in vehicle t2, package p3 is located in vehicle t0, package p3 is not in vehicle a0, package p3 is not in vehicle a1, package p3 is not in vehicle t1 and package p3 is not located in vehicle t2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "71370d14-da6d-45a0-82ed-2b6cf4141997", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p1 is not located, at airport l0_0, object p3 is located, at airport l0_1, object a1 is located, at airport l0_1, object p3 is located, at airport l0_2, object t0 is not located, at airport l1_0, object p0 is located, at airport l1_0, object p3 is located, at airport l1_1, object p2 is not located, at airport l1_1, object t0 is located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is located, object a0 is at airport l0_0, object a0 is not at airport l0_2, object a0 is not located at airport l0_1, object a0 is not located at airport l1_0, object a0 is not located at airport l1_1, object a1 is at airport l1_1, object a1 is located at airport l0_2, object a1 is not located at airport l0_0, object a1 is not located at airport l1_0, object p0 is at airport l0_0, object p0 is located at airport l1_1, object p0 is not at airport l0_1, object p0 is not located at airport l0_2, object p0 is not located at airport l1_2, object p1 is at airport l0_1, object p1 is not at airport l0_2, object p1 is not at airport l1_2, object p1 is not located at airport l1_0, object p1 is not located at airport l1_1, object p2 is at airport l0_1, object p2 is at airport l1_0, object p2 is at airport l1_2, object p2 is not at airport l0_0, object p2 is not located at airport l0_2, object p3 is at airport l1_2, object p3 is not at airport l0_2, object p3 is not at airport l1_1, object t0 is located at airport l0_0, object t0 is located at airport l0_1, object t0 is not at airport l1_0, object t0 is not located at airport l1_2, object t1 is at airport l0_0, object t1 is at airport l1_0, object t1 is at airport l1_1, object t1 is not at airport l0_1, object t1 is not located at airport l0_2, object t1 is not located at airport l1_2, object t2 is located at airport l0_2, object t2 is located at airport l1_1, object t2 is not located at airport l0_0, object t2 is not located at airport l0_1, object t2 is not located at airport l1_0, object t2 is not located at airport l1_2, package p0 is located in vehicle t1, package p0 is not in vehicle a1, package p0 is not present in vehicle a0, package p0 is present in vehicle t0, package p0 is present in vehicle t2, package p1 is in vehicle a0, package p1 is located in vehicle t2, package p1 is not located in vehicle t0, package p1 is not present in vehicle t1, package p1 is present in vehicle a1, package p2 is located in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not present in vehicle t2, package p2 is present in vehicle a1, package p3 is located in vehicle t2, package p3 is not present in vehicle t1, package p3 is present in vehicle a0, package p3 is present in vehicle a1 and package p3 is present in vehicle t0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a1f1ff0e-6921-48d4-8bad-e8265e11ce6d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, city c0 contains airport l0_2 and city c1 contains airport l1_2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "2e8760fc-20e5-4ed0-a059-d70fc2c7cb91", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c1, airport l0_1 is in city c0, airport l0_1 is in city c1, airport l0_2 is in city c1, airport l1_0 is in city c1, airport l1_0 is located in city c0, airport l1_1 is in city c0, airport l1_2 is located in city c0, airport l1_2 is located in city c1, city c0 contains airport l0_0, city c0 contains airport l0_2 and city c1 contains airport l1_1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "704233ab-5ebe-44a6-8957-343f9ad471ba", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "5f7771e7-b112-484e-86af-56c85c13b7bd", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c0airport l0_0 is not located in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c0airport l0_2 is not located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_1 is not in city c1airport l1_1 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, airport l1_2 is not in city c1airport l1_2 is not located in city c1, city c0 does not contain airport l0_1, city c0 does not contain airport l1_0 and city c1 does not contain airport l1_0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "625ee8ec-118b-4c20-bd14-1affa5c788be", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is in city c0, airport l0_1 is in city c0, airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is located in city c1, city c0 contains airport l0_2, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a90f9786-bbda-42a4-bc9a-bb52666332c3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c0airport l0_0 is not located in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c0airport l0_1 is not located in city c0, airport l0_2 is in city c0, airport l0_2 is in city c1, airport l1_0 is in city c1, airport l1_1 is located in city c0, city c0 contains airport l1_2, city c0 does not contain airport l1_0, city c1 contains airport l1_1, city c1 does not contain airport l0_1 and city c1 does not contain airport l1_2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "8ea34796-543a-4ddd-a12a-a1a3a098a2df", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state,. What are the self constraint properties of the state for p1? Write None if there are none", "answer": "object p1 is at airport l0_0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "04bc178a-f069-40ef-be25-003c1fcdff17", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state,. What are the self constraint properties of the state for t2? Write None if there are none", "answer": "at airport l1_0, object t2 is not located, object t2 is not at airport l0_2, object t2 is not located at airport l0_0, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is not present in vehicle t2, package p1 is not in vehicle t2, package p2 is not present in vehicle t2 and package p3 is not present in vehicle t2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "a17b4923-b754-4566-a5a2-fa04d8592ab1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state,. What are the self constraint properties of the state for t1? Write None if there are none", "answer": "at airport l0_1, object t1 is not located, at airport l1_0, object t1 is located, at airport l1_2, object t1 is not located, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t1 is not located at airport l1_1, package p0 is not in vehicle t1, package p1 is not in vehicle t1, package p2 is not in vehicle t1 and package p3 is not in vehicle t1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0d7cd0a6-7e94-4b7d-8f09-0abf67060e2f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state,. What are the static properties of the state for c0? Write None if there are none", "answer": "airport l0_0 is located in city c0, airport l0_1 is in city c0 and airport l0_2 is located in city c0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "c68a4e65-f38f-44e6-8dc7-118c3c6b3967", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state,. What are the static properties of the state for l1_1? Write None if there are none", "answer": "airport l1_1 is not in city c0airport l1_1 is not located in city c0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "846fb1fd-8635-43d8-bbc0-00b8a134acc8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state,. What are the static properties of the state for l1_2? Write None if there are none", "answer": "airport l1_2 is not in city c0airport l1_2 is not located in city c0 and city c1 contains airport l1_2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "17583f0b-75a9-4033-8945-d6508732e2fa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that at airport l0_1, object t2 is located?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "0ac0844e-36a5-4870-b4af-9a744fe71e04", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that package p0 is not located in vehicle t0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "a84b82eb-4562-40d2-b519-29bc960358de", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that at airport l1_2, object p0 is not located?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "93c58ff9-4872-4494-801c-f55929c53887", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is it True or False that city c0 contains airport l0_0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "927a403d-cb3a-4c31-8267-f692d3e175ed", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is it True or False that city c1 does not contain airport l1_2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "12770e4d-8c2d-420e-916a-41ab8ca60560", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is it True or False that city c1 does not contain airport l0_0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "12df7745-a704-49bf-8f39-0da803424b56", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_1, object t2 is located, object a0 is at airport l1_0, object a1 is located at airport l0_0, object t0 is located at airport l0_1, object t1 is located at airport l1_0, package p0 is present in vehicle t0, package p1 is located in vehicle t0, package p2 is present in vehicle a1 and package p3 is present in vehicle t0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "90163c05-9184-4780-bfde-8b600383da65", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p1 is located, at airport l0_0, object p2 is located, at airport l0_0, object t0 is located, at airport l0_0, object t2 is located, at airport l0_1, object p1 is located, at airport l0_1, object p2 is located, at airport l0_1, object p3 is located, at airport l0_1, object t0 is located, at airport l0_2, object p0 is located, at airport l0_2, object p1 is located, at airport l0_2, object t0 is located, at airport l0_2, object t2 is located, at airport l1_0, object a1 is located, at airport l1_0, object p2 is located, at airport l1_0, object t1 is located, at airport l1_0, object t2 is located, at airport l1_1, object a0 is located, at airport l1_1, object p0 is located, at airport l1_1, object p1 is located, at airport l1_1, object p3 is located, at airport l1_1, object t0 is located, at airport l1_1, object t1 is located, at airport l1_2, object a0 is located, at airport l1_2, object p3 is located, object a0 is at airport l0_0, object a0 is located at airport l0_1, object a0 is located at airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l0_1, object a1 is at airport l0_2, object a1 is at airport l1_2, object a1 is located at airport l0_0, object a1 is located at airport l1_1, object p0 is at airport l0_0, object p0 is at airport l0_1, object p0 is at airport l1_2, object p0 is located at airport l1_0, object p1 is at airport l1_2, object p1 is located at airport l1_0, object p2 is at airport l0_2, object p2 is located at airport l1_1, object p2 is located at airport l1_2, object p3 is located at airport l0_0, object p3 is located at airport l0_2, object p3 is located at airport l1_0, object t0 is at airport l1_0, object t0 is at airport l1_2, object t1 is located at airport l0_0, object t1 is located at airport l0_1, object t1 is located at airport l0_2, object t1 is located at airport l1_2, object t2 is at airport l0_1, object t2 is at airport l1_1, object t2 is located at airport l1_2, package p0 is in vehicle a1, package p0 is located in vehicle t1, package p0 is present in vehicle a0, package p0 is present in vehicle t0, package p0 is present in vehicle t2, package p1 is located in vehicle t0, package p1 is located in vehicle t1, package p1 is located in vehicle t2, package p1 is present in vehicle a0, package p1 is present in vehicle a1, package p2 is located in vehicle a0, package p2 is located in vehicle a1, package p2 is located in vehicle t0, package p2 is present in vehicle t1, package p2 is present in vehicle t2, package p3 is in vehicle a1, package p3 is in vehicle t0, package p3 is in vehicle t1, package p3 is in vehicle t2 and package p3 is located in vehicle a0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8d10a9c5-f5ae-43db-8f30-13b830c59b79", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object p0 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p2 is not located, object a0 is not at airport l1_1, object a0 is not located at airport l0_0, object a0 is not located at airport l0_1, object a1 is not at airport l1_1, object a1 is not located at airport l0_1, object a1 is not located at airport l1_0, object a1 is not located at airport l1_2, object p0 is not at airport l0_2, object p0 is not located at airport l0_1, object p0 is not located at airport l1_0, object p0 is not located at airport l1_2, object p1 is not at airport l0_0, object p1 is not located at airport l1_0, object p2 is not at airport l0_0, object p2 is not at airport l0_1, object p2 is not at airport l1_1, object p2 is not located at airport l0_2, object p3 is not at airport l0_0, object p3 is not at airport l0_1, object p3 is not at airport l1_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is not at airport l0_0, object t0 is not at airport l1_1, object t0 is not at airport l1_2, object t0 is not located at airport l0_2, object t1 is not at airport l0_1, object t1 is not at airport l1_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_2, object t2 is not at airport l0_0, object t2 is not at airport l0_2, object t2 is not at airport l1_0, object t2 is not at airport l1_2, package p0 is not located in vehicle a1, package p0 is not located in vehicle t1, package p0 is not present in vehicle a0, package p0 is not present in vehicle t2, package p1 is not in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not present in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not located in vehicle t1, package p3 is not located in vehicle t2 and package p3 is not present in vehicle a1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "fb285471-7cf9-4e91-911d-92fe326f7fbd", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a0 is not located, at airport l0_0, object a1 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t2 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object a1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p0 is not located, object a0 is not at airport l1_0, object a1 is not at airport l0_1, object a1 is not at airport l1_0, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not located at airport l0_2, object p1 is not at airport l0_2, object p1 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l0_2, object p2 is not located at airport l1_0, object p2 is not located at airport l1_2, object p3 is not at airport l1_2, object p3 is not located at airport l0_2, object p3 is not located at airport l1_1, object t0 is not at airport l0_1, object t0 is not at airport l0_2, object t0 is not at airport l1_0, object t0 is not at airport l1_1, object t0 is not at airport l1_2, object t0 is not located at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not at airport l1_2, object t1 is not located at airport l1_1, object t2 is not at airport l0_2, object t2 is not at airport l1_0, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, package p0 is not in vehicle a1, package p0 is not located in vehicle a0, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p0 is not present in vehicle t0, package p1 is not in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t0, package p1 is not present in vehicle t1, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t2, package p2 is not present in vehicle a1, package p2 is not present in vehicle t1, package p3 is not in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle a1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "911ac683-07c3-4c07-8ba0-edfad0752487", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is located, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t1 is not located, at airport l0_1, object t2 is located, at airport l0_2, object a0 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object p2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t1 is not located, object a0 is located at airport l1_0, object a0 is not located at airport l0_0, object a0 is not located at airport l0_1, object a0 is not located at airport l1_2, object a1 is not at airport l0_2, object a1 is not at airport l1_2, object a1 is not located at airport l0_1, object p0 is not at airport l0_2, object p0 is not at airport l1_1, object p1 is not at airport l1_0, object p1 is not located at airport l0_1, object p1 is not located at airport l0_2, object p1 is not located at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_0, object p2 is not located at airport l0_2, object p2 is not located at airport l1_1, object p2 is not located at airport l1_2, object p3 is not at airport l0_0, object p3 is not at airport l0_2, object p3 is not located at airport l1_0, object t0 is located at airport l0_1, object t0 is not at airport l0_2, object t0 is not at airport l1_2, object t0 is not located at airport l0_0, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l1_1, object t2 is not at airport l0_2, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, object t2 is not located at airport l1_0, object t2 is not located at airport l1_1, package p0 is in vehicle t0, package p0 is not in vehicle a0, package p0 is not located in vehicle a1, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p1 is located in vehicle t0, package p1 is not in vehicle a1, package p1 is not located in vehicle a0, package p1 is not present in vehicle t1, package p1 is not present in vehicle t2, package p2 is in vehicle a1, package p2 is not in vehicle t0, package p2 is not located in vehicle a0, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p3 is in vehicle t0, package p3 is not in vehicle a0, package p3 is not in vehicle a1, package p3 is not in vehicle t1 and package p3 is not in vehicle t2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "35de79a6-f091-40e0-ba4c-383319428ebd", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: at airport l0_0, object a1 is located, at airport l0_0, object p0 is located, at airport l0_0, object p1 is located, at airport l0_0, object p2 is not located, at airport l0_0, object p3 is not located, at airport l0_1, object p2 is located, at airport l0_1, object p3 is located, at airport l0_1, object t0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p1 is located, at airport l1_0, object p3 is not located, at airport l1_0, object t0 is located, at airport l1_1, object t0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is located, object a0 is located at airport l0_1, object a0 is located at airport l0_2, object a0 is located at airport l1_0, object a0 is located at airport l1_2, object a0 is not at airport l0_0, object a0 is not located at airport l1_1, object a1 is at airport l0_2, object a1 is at airport l1_1, object a1 is not at airport l0_1, object p0 is located at airport l0_1, object p0 is located at airport l1_1, object p0 is not located at airport l1_0, object p1 is at airport l0_2, object p1 is located at airport l1_1, object p1 is located at airport l1_2, object p1 is not located at airport l0_1, object p2 is at airport l0_2, object p2 is located at airport l1_0, object p2 is located at airport l1_2, object p2 is not at airport l1_1, object p3 is at airport l0_2, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is at airport l0_2, object t0 is at airport l1_2, object t0 is not at airport l0_0, object t1 is at airport l1_1, object t1 is located at airport l1_0, object t1 is not at airport l0_0, object t1 is not located at airport l0_1, object t2 is at airport l0_0, object t2 is at airport l0_2, object t2 is not at airport l0_1, object t2 is not at airport l1_1, object t2 is not located at airport l1_0, package p0 is located in vehicle t0, package p0 is located in vehicle t2, package p0 is not in vehicle a0, package p0 is not in vehicle t1, package p0 is not present in vehicle a1, package p1 is located in vehicle a0, package p1 is not in vehicle t1, package p1 is not located in vehicle a1, package p1 is present in vehicle t0, package p1 is present in vehicle t2, package p2 is in vehicle a0, package p2 is not located in vehicle t1, package p2 is not present in vehicle a1, package p2 is not present in vehicle t2, package p2 is present in vehicle t0, package p3 is in vehicle t2, package p3 is located in vehicle a1, package p3 is not in vehicle a0, package p3 is not in vehicle t0 and package p3 is not in vehicle t1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "8248755e-b5df-45d2-b8f8-8bbee64e896d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_19", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_1 is located in city c1, city c1 contains airport l1_0 and city c1 contains airport l1_2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "aa3502a6-3419-439d-bad3-7c31e20adc29", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_20", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c0, airport l0_1 is in city c0, airport l0_1 is located in city c1, airport l0_2 is in city c1, airport l1_0 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c0, airport l1_1 is in city c1, city c0 contains airport l0_2, city c0 contains airport l1_2, city c1 contains airport l0_0 and city c1 contains airport l1_2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f239c9f1-4bbb-4dba-a0ad-d52f978f443a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_21", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "4889f64f-e909-49b1-af15-4e2081f8723f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_22", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is not in city c0airport l0_0 is not located in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c0airport l0_1 is not located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c1airport l1_1 is not located in city c1, airport l1_2 is not in city c1airport l1_2 is not located in city c1, city c0 does not contain airport l0_2, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_1 and city c1 does not contain airport l1_0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "12142571-edf5-4bf4-bbd7-8a1425cb0a1a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_23", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is in city c0, airport l1_0 is located in city c1, airport l1_1 is located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is in city c1, city c0 contains airport l0_2, city c0 does not contain airport l1_0, city c0 does not contain airport l1_2, city c1 does not contain airport l0_1 and city c1 does not contain airport l0_2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "45c7029d-7635-4a6a-b325-36a865c27ef4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_2_question_24", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, are all of the following properties of the state True or False: airport l0_0 is located in city c1, airport l0_1 is in city c0, airport l0_1 is in city c1, airport l0_2 is in city c0, airport l0_2 is located in city c1, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_1 is not in city c1airport l1_1 is not located in city c1, airport l1_2 is located in city c0, city c0 contains airport l0_0 and city c1 does not contain airport l1_2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e8822713-1dc8-441c-b488-779ff98e9c23", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state,. What are the self constraint properties of the state for t0? Write None if there are none", "answer": "at airport l0_1, object t0 is located, package p0 is present in vehicle t0, package p1 is in vehicle t0 and package p3 is present in vehicle t0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "e947d622-ea37-4247-8dd2-8e9d65318f1e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state,. What are the self constraint properties of the state for l0_2? Write None if there are none", "answer": "at airport l0_2, object a0 is not located, at airport l0_2, object t1 is not located, object a1 is not located at airport l0_2, object p0 is not at airport l0_2, object p1 is not located at airport l0_2, object p2 is not located at airport l0_2, object p3 is not at airport l0_2, object t0 is not located at airport l0_2 and object t2 is not located at airport l0_2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "b4c1d7c7-fba4-4242-bbed-56f200f30760", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state,. What are the self constraint properties of the state for t0? Write None if there are none", "answer": "at airport l0_0, object t0 is not located, at airport l0_1, object t0 is located, at airport l0_2, object t0 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object t0 is not located, object t0 is not located at airport l1_2, package p0 is in vehicle t0, package p1 is present in vehicle t0, package p2 is not in vehicle t0 and package p3 is located in vehicle t0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f9d12fb6-5260-4183-bbe2-5fd4361d859f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_10", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state,. What are the static properties of the state for c1? Write None if there are none", "answer": "airport l1_0 is in city c1, airport l1_1 is located in city c1 and airport l1_2 is located in city c1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "23ab9d84-4557-4d40-adf4-51be2b9c64d1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_11", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state,. What are the static properties of the state for c1? Write None if there are none", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1 and city c1 does not contain airport l0_1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "3d239910-4e54-4d63-9e31-7978e60062fd", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "fluent_tracking", "question_name": "iter_3_question_12", "fluent_type": "static_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state,. What are the static properties of the state for l1_0? Write None if there are none", "answer": "airport l1_0 is in city c1 and city c0 does not contain airport l1_0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l1_1 is located in city c1, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is located at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "95e09e15-4701-410e-8573-dfb65d42003d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, are all of the following properties: airport l0_1 is located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_0, object a1 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object t0 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object p1 is not located, at airport l1_0, object a1 is located, at airport l1_0, object p0 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t1 is located, at airport l1_2, object t2 is not located, city c0 contains airport l0_0, city c0 contains airport l0_2, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, object a0 is located at airport l1_0, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_1, object a1 is not located at airport l0_2, object p0 is not at airport l0_0, object p0 is not located at airport l0_2, object p1 is at airport l1_1, object p1 is not located at airport l1_0, object p2 is located at airport l0_2, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p3 is at airport l0_2, object p3 is not at airport l0_0, object p3 is not at airport l1_2, object p3 is not located at airport l1_0, object p3 is not located at airport l1_1, object t0 is located at airport l0_2, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t1 is not at airport l1_1, object t1 is not located at airport l0_0, object t1 is not located at airport l0_1, object t1 is not located at airport l0_2, object t1 is not located at airport l1_0, object t2 is located at airport l0_1, object t2 is not at airport l0_2, object t2 is not located at airport l0_0, object t2 is not located at airport l1_1, package p0 is located in vehicle t1, package p0 is not located in vehicle a1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p1 is not in vehicle a1, package p1 is not in vehicle t2, package p1 is not located in vehicle t0, package p1 is not present in vehicle a0, package p1 is not present in vehicle t1, package p2 is not in vehicle a0, package p2 is not in vehicle t1, package p2 is not present in vehicle a1, package p2 is not present in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not located in vehicle t2 and package p3 is not present in vehicle t0, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6751c1d1-11d3-45b3-9ed8-69f967bd5566", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, are all of the following properties: airport l0_0 is in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is located in city c1, airport l0_2 is not in city c0airport l0_2 is not located in city c0, airport l1_0 is located in city c0, airport l1_0 is not in city c1airport l1_0 is not located in city c1, airport l1_1 is located in city c1, airport l1_2 is located in city c0, airport l1_2 is not in city c1airport l1_2 is not located in city c1, at airport l0_0, object a0 is not located, at airport l0_0, object a1 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is located, at airport l0_0, object p2 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is located, at airport l0_1, object p2 is not located, at airport l0_1, object t0 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p0 is located, at airport l1_0, object p1 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object t0 is located, at airport l1_2, object a0 is located, at airport l1_2, object p3 is located, at airport l1_2, object t1 is not located, city c0 contains airport l1_1, city c0 does not contain airport l0_0, city c0 does not contain airport l0_1, object a0 is at airport l0_2, object a0 is located at airport l0_1, object a0 is not located at airport l1_1, object a1 is at airport l1_0, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not at airport l1_1, object a1 is not located at airport l1_2, object p0 is located at airport l0_2, object p0 is not at airport l1_1, object p0 is not at airport l1_2, object p1 is at airport l0_2, object p1 is not at airport l1_2, object p2 is at airport l0_2, object p2 is located at airport l1_1, object p2 is not at airport l1_0, object p2 is not located at airport l1_2, object p3 is at airport l0_1, object p3 is not at airport l1_0, object p3 is not located at airport l0_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_1, object t0 is located at airport l0_0, object t0 is located at airport l1_2, object t0 is not at airport l0_2, object t1 is at airport l0_0, object t1 is located at airport l0_1, object t1 is located at airport l0_2, object t1 is not at airport l1_1, object t2 is at airport l1_2, object t2 is located at airport l0_1, object t2 is located at airport l0_2, object t2 is located at airport l1_1, object t2 is not located at airport l0_0, object t2 is not located at airport l1_0, package p0 is in vehicle a0, package p0 is in vehicle t0, package p0 is located in vehicle t1, package p0 is located in vehicle t2, package p0 is not in vehicle a1, package p1 is not located in vehicle a1, package p1 is not present in vehicle a0, package p1 is not present in vehicle t0, package p1 is not present in vehicle t1, package p1 is not present in vehicle t2, package p2 is in vehicle a1, package p2 is in vehicle t1, package p2 is located in vehicle a0, package p2 is not present in vehicle t2, package p2 is present in vehicle t0, package p3 is in vehicle t0, package p3 is in vehicle t1, package p3 is not in vehicle a1, package p3 is not in vehicle t2 and package p3 is not present in vehicle a0, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c4d2ef88-888e-409a-b4dd-e5c4d2508aaa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "airport l0_1 is located in city c0, airport l1_0 is located in city c1, airport l1_2 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_0, city c0 contains airport l0_2, city c1 contains airport l1_1, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p2 is located at airport l0_2, object t1 is at airport l1_2, object t2 is at airport l0_1 and package p0 is present in vehicle t1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "b0226314-04e3-4727-80a0-95390c07d91d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p2 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c1 does not contain airport l0_0, object a0 is not at airport l0_0, object a0 is not at airport l0_2, object a0 is not located at airport l1_2, object a1 is not at airport l0_0, object a1 is not at airport l0_2, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object p0 is not at airport l1_2, object p0 is not located at airport l0_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_1, object p1 is not located at airport l0_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_0, object p2 is not located at airport l0_0, object p2 is not located at airport l1_1, object p3 is not at airport l1_1, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, object p3 is not located at airport l1_2, object t0 is not at airport l0_1, object t0 is not located at airport l0_0, object t0 is not located at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l1_1, object t1 is not located at airport l0_2, object t1 is not located at airport l1_0, object t2 is not located at airport l1_2, package p0 is not in vehicle a1, package p0 is not in vehicle t0, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p1 is not located in vehicle t1, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t0, package p1 is not present in vehicle t2, package p2 is not in vehicle a0, package p2 is not located in vehicle t1, package p2 is not present in vehicle a1, package p2 is not present in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not located in vehicle t2, package p3 is not present in vehicle a1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "ecf38b15-b34b-4604-9b0d-57ba7ef27e17", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object p1 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object p0 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object t2 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p1 is not located, city c0 does not contain airport l1_0, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, object a0 is not at airport l0_1, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object p0 is not at airport l1_0, object p0 is not located at airport l0_0, object p0 is not located at airport l1_1, object p1 is not at airport l1_0, object p1 is not located at airport l0_1, object p2 is not at airport l0_0, object p2 is not at airport l0_1, object p2 is not at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l1_1, object p3 is not at airport l0_0, object p3 is not at airport l0_1, object p3 is not at airport l1_0, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is not at airport l0_1, object t0 is not at airport l1_1, object t0 is not located at airport l0_0, object t0 is not located at airport l1_0, object t0 is not located at airport l1_2, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not at airport l1_0, object t1 is not at airport l1_1, object t2 is not at airport l1_2, object t2 is not located at airport l1_1, package p0 is not in vehicle a1, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not in vehicle t1, package p2 is not located in vehicle a0, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle a1, package p3 is not located in vehicle a0, package p3 is not located in vehicle t0, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5461ef62-6df6-4f71-a560-ab2338020c8f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties: airport l0_0 is located in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_0, object a0 is not located, at airport l0_0, object a1 is not located, at airport l0_0, object p2 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p2 is located, at airport l0_2, object t2 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p1 is located, at airport l1_0, object p3 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t0 is not located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, object a0 is not located at airport l0_1, object a1 is at airport l1_0, object a1 is not at airport l0_2, object a1 is not at airport l1_1, object a1 is not located at airport l0_1, object p0 is not at airport l0_1, object p0 is not located at airport l0_0, object p0 is not located at airport l1_0, object p0 is not located at airport l1_2, object p1 is not located at airport l0_0, object p1 is not located at airport l0_2, object p1 is not located at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_2, object p2 is not located at airport l1_0, object p2 is not located at airport l1_1, object p3 is located at airport l0_2, object p3 is not at airport l0_0, object p3 is not at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object t0 is at airport l0_2, object t0 is not located at airport l0_0, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t1 is located at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l1_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_2, object t2 is located at airport l0_1, object t2 is not at airport l1_0, object t2 is not at airport l1_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, package p0 is located in vehicle t1, package p0 is not in vehicle a1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p1 is not in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p2 is not in vehicle a0, package p2 is not in vehicle a1, package p2 is not in vehicle t2, package p2 is not present in vehicle t0, package p2 is not present in vehicle t1, package p3 is not in vehicle t0, package p3 is not in vehicle t1, package p3 is not located in vehicle a0, package p3 is not located in vehicle a1 and package p3 is not located in vehicle t2, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "2cd011d1-6400-4e49-99fb-e3d6761efff6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, are all of the following properties: airport l0_0 is in city c0, airport l0_2 is located in city c1, airport l1_0 is not in city c1airport l1_0 is not located in city c1, airport l1_1 is located in city c0, airport l1_2 is not in city c1airport l1_2 is not located in city c1, at airport l0_0, object a0 is located, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object t1 is located, at airport l0_0, object t2 is located, at airport l0_1, object a0 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object t1 is not located, at airport l0_1, object t2 is not located, at airport l0_2, object a1 is located, at airport l0_2, object p0 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p0 is located, at airport l1_2, object a1 is located, at airport l1_2, object p2 is not located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c0 contains airport l1_0, city c0 contains airport l1_2, city c1 contains airport l0_1, city c1 does not contain airport l0_0, city c1 does not contain airport l1_1, object a0 is at airport l1_0, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a0 is not located at airport l1_2, object a1 is located at airport l1_0, object a1 is not at airport l0_0, object a1 is not at airport l0_1, object p0 is located at airport l1_2, object p0 is not located at airport l1_0, object p1 is at airport l0_1, object p1 is at airport l1_2, object p1 is located at airport l1_0, object p1 is located at airport l1_1, object p1 is not at airport l0_2, object p2 is at airport l0_0, object p2 is located at airport l1_0, object p2 is located at airport l1_1, object p2 is not located at airport l0_1, object p2 is not located at airport l0_2, object p3 is at airport l0_0, object p3 is at airport l0_1, object p3 is at airport l1_1, object p3 is located at airport l1_2, object p3 is not at airport l0_2, object p3 is not located at airport l1_0, object t0 is at airport l0_2, object t0 is at airport l1_2, object t0 is not at airport l0_0, object t0 is not at airport l0_1, object t0 is not located at airport l1_1, object t1 is at airport l0_2, object t1 is not at airport l1_0, object t1 is not at airport l1_2, object t1 is not located at airport l1_1, object t2 is at airport l0_2, object t2 is at airport l1_0, object t2 is at airport l1_2, object t2 is not located at airport l1_1, package p0 is not in vehicle t1, package p0 is not in vehicle t2, package p0 is not located in vehicle t0, package p0 is not present in vehicle a1, package p0 is present in vehicle a0, package p1 is not in vehicle a1, package p1 is not in vehicle t0, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p2 is in vehicle t1, package p2 is in vehicle t2, package p2 is not in vehicle t0, package p2 is not located in vehicle a0, package p2 is present in vehicle a1, package p3 is in vehicle t1, package p3 is not present in vehicle t0, package p3 is present in vehicle a0, package p3 is present in vehicle a1 and package p3 is present in vehicle t2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9a9e6148-fb08-4afa-91d9-cb8309213f74", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "airport l0_0 is located in city c0, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_2, object t0 is located, at airport l1_0, object a1 is located, at airport l1_0, object p1 is located, at airport l1_0, object t1 is located, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_0, object a0 is at airport l1_0, object p2 is at airport l0_2, object p3 is at airport l0_2, object t2 is at airport l0_1 and package p0 is in vehicle t1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "07f66abe-9da6-4779-8032-493bd2fcc7c5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, at airport l0_0, object t0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t0 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object t0 is not located, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, object a0 is not at airport l0_0, object a0 is not at airport l0_1, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a0 is not at airport l1_2, object a1 is not at airport l0_2, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l0_1, object p0 is not at airport l0_2, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p0 is not located at airport l1_2, object p1 is not at airport l0_2, object p1 is not located at airport l0_0, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l1_1, object p3 is not at airport l0_0, object p3 is not at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object t0 is not at airport l1_0, object t0 is not located at airport l1_1, object t1 is not at airport l0_0, object t1 is not at airport l1_2, object t1 is not located at airport l0_1, object t1 is not located at airport l0_2, object t2 is not at airport l1_1, object t2 is not located at airport l0_0, object t2 is not located at airport l1_2, package p0 is not in vehicle t2, package p0 is not located in vehicle a1, package p0 is not present in vehicle a0, package p0 is not present in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t0, package p1 is not located in vehicle t1, package p1 is not present in vehicle t2, package p2 is not in vehicle a0, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle a1, package p2 is not present in vehicle t2, package p3 is not in vehicle a1, package p3 is not in vehicle t2, package p3 is not located in vehicle t1, package p3 is not present in vehicle a0 and package p3 is not present in vehicle t0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9207afc8-f203-4748-8fb7-8bedf8ca7a94", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, at airport l0_0, object a1 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t0 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_2, city c1 does not contain airport l0_2, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a1 is not located at airport l0_1, object p0 is not at airport l0_2, object p0 is not at airport l1_2, object p0 is not located at airport l0_1, object p0 is not located at airport l1_1, object p1 is not at airport l0_1, object p1 is not at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not located at airport l0_0, object p2 is not located at airport l1_2, object p3 is not at airport l0_0, object p3 is not at airport l1_2, object t0 is not at airport l1_0, object t0 is not located at airport l0_0, object t0 is not located at airport l0_1, object t1 is not at airport l0_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t1 is not located at airport l1_1, object t2 is not at airport l1_1, object t2 is not at airport l1_2, package p0 is not located in vehicle a1, package p0 is not located in vehicle t0, package p0 is not present in vehicle a0, package p0 is not present in vehicle t2, package p1 is not in vehicle t0, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p1 is not present in vehicle t2, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not in vehicle t2, package p2 is not present in vehicle a1, package p3 is not in vehicle a0, package p3 is not in vehicle t0, package p3 is not located in vehicle a1, package p3 is not located in vehicle t1 and package p3 is not present in vehicle t2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ec720db9-4594-48fa-afde-119ca789b9e8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, are all of the following properties: airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is located, at airport l0_0, object t1 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object a1 is located, at airport l1_0, object p0 is located, at airport l1_0, object p3 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object p0 is not located, city c0 does not contain airport l1_2, city c1 contains airport l1_2, city c1 does not contain airport l0_0, object a0 is at airport l1_0, object a0 is not at airport l1_1, object a0 is not located at airport l0_1, object a0 is not located at airport l0_2, object a0 is not located at airport l1_2, object a1 is not at airport l0_2, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not at airport l0_1, object p0 is not at airport l1_1, object p1 is at airport l1_0, object p1 is not at airport l0_1, object p1 is not at airport l0_2, object p1 is not located at airport l1_2, object p2 is at airport l0_0, object p2 is not at airport l0_1, object p2 is not at airport l1_2, object p2 is not located at airport l1_0, object p2 is not located at airport l1_1, object p3 is not located at airport l0_2, object p3 is not located at airport l1_2, object t0 is not at airport l0_2, object t0 is not at airport l1_2, object t0 is not located at airport l0_1, object t1 is at airport l1_0, object t1 is not at airport l1_2, object t2 is at airport l0_1, object t2 is not at airport l0_0, object t2 is not at airport l0_2, object t2 is not at airport l1_0, object t2 is not at airport l1_1, object t2 is not located at airport l1_2, package p0 is not in vehicle a1, package p0 is not in vehicle t1, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle t0, package p1 is not in vehicle a0, package p1 is not in vehicle t0, package p1 is not in vehicle t1, package p1 is not located in vehicle a1, package p1 is not located in vehicle t2, package p2 is not in vehicle a1, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not in vehicle t2, package p2 is not located in vehicle a0, package p3 is located in vehicle t0, package p3 is not in vehicle t1, package p3 is not in vehicle t2, package p3 is not present in vehicle a0 and package p3 is not present in vehicle a1, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "eee9be1a-b461-48d5-9443-fd6a2bc662e7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, are all of the following properties: airport l0_2 is in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is located in city c0, airport l1_2 is located in city c1, at airport l0_0, object t0 is not located, at airport l0_1, object a1 is located, at airport l0_1, object p0 is located, at airport l0_1, object p1 is located, at airport l0_1, object p2 is located, at airport l0_2, object p0 is located, at airport l0_2, object p1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p3 is located, at airport l1_1, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c1 contains airport l0_0, city c1 contains airport l1_0, city c1 contains airport l1_1, city c1 does not contain airport l0_1, object a0 is at airport l0_1, object a0 is located at airport l0_0, object a0 is not at airport l1_1, object a0 is not located at airport l0_2, object a1 is at airport l0_2, object a1 is not at airport l0_0, object a1 is not at airport l1_1, object a1 is not located at airport l1_0, object a1 is not located at airport l1_2, object p0 is at airport l0_0, object p0 is not located at airport l1_0, object p0 is not located at airport l1_2, object p1 is located at airport l1_0, object p1 is not at airport l0_0, object p1 is not at airport l1_2, object p2 is located at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p3 is at airport l0_0, object p3 is not at airport l0_1, object p3 is not at airport l1_1, object p3 is not located at airport l1_2, object t0 is located at airport l0_1, object t0 is located at airport l0_2, object t0 is located at airport l1_2, object t0 is not located at airport l1_0, object t1 is at airport l0_1, object t1 is at airport l1_0, object t1 is located at airport l0_2, object t1 is located at airport l1_2, object t1 is not at airport l1_1, object t1 is not located at airport l0_0, object t2 is at airport l0_0, object t2 is at airport l0_1, object t2 is at airport l0_2, object t2 is located at airport l1_0, object t2 is not at airport l1_1, package p0 is located in vehicle a1, package p0 is located in vehicle t0, package p0 is not in vehicle t1, package p0 is present in vehicle a0, package p0 is present in vehicle t2, package p1 is in vehicle a0, package p1 is located in vehicle t2, package p1 is not in vehicle t1, package p1 is not located in vehicle t0, package p1 is not present in vehicle a1, package p2 is in vehicle a0, package p2 is in vehicle t2, package p2 is not present in vehicle t0, package p2 is present in vehicle a1, package p2 is present in vehicle t1, package p3 is in vehicle t0, package p3 is in vehicle t2, package p3 is located in vehicle a1, package p3 is located in vehicle t1 and package p3 is present in vehicle a0, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ac4521bb-74b0-4844-8d60-68947b9ec0f8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l1_0, object a0 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a1 is located at airport l1_0, object p0 is at airport l1_0, object p1 is at airport l1_0, object p2 is located at airport l0_0, object t0 is located at airport l0_0, object t1 is at airport l1_0 and package p3 is present in vehicle t0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "32ee0875-f912-4a2c-b24c-9353a0905e77", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object t0 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object p3 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object p3 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, object a0 is not at airport l0_1, object a0 is not located at airport l0_2, object a1 is not at airport l1_1, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_2, object p0 is not at airport l0_1, object p0 is not at airport l0_2, object p0 is not at airport l1_1, object p1 is not at airport l0_0, object p1 is not at airport l0_1, object p1 is not at airport l1_2, object p1 is not located at airport l0_2, object p1 is not located at airport l1_1, object p2 is not located at airport l0_1, object p2 is not located at airport l1_1, object p3 is not at airport l1_1, object p3 is not located at airport l0_1, object t0 is not at airport l1_2, object t0 is not located at airport l0_2, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is not located at airport l0_1, object t1 is not located at airport l1_1, object t1 is not located at airport l1_2, object t2 is not at airport l0_0, object t2 is not at airport l1_2, object t2 is not located at airport l0_2, object t2 is not located at airport l1_0, package p0 is not present in vehicle a0, package p0 is not present in vehicle a1, package p0 is not present in vehicle t0, package p0 is not present in vehicle t1, package p0 is not present in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a1, package p1 is not present in vehicle t0, package p1 is not present in vehicle t1, package p2 is not in vehicle a1, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0, package p3 is not located in vehicle a1, package p3 is not present in vehicle a0, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "99639e36-963d-45fa-b7eb-835a01b2a2f0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object t2 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t0 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t2 is not located, city c1 does not contain airport l0_2, object a0 is not at airport l0_0, object a0 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object p0 is not at airport l0_1, object p0 is not at airport l0_2, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p1 is not at airport l1_1, object p1 is not at airport l1_2, object p1 is not located at airport l0_0, object p2 is not at airport l1_0, object p2 is not located at airport l0_1, object p3 is not at airport l0_0, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, object t0 is not at airport l1_0, object t0 is not located at airport l0_2, object t0 is not located at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_0, object t1 is not at airport l0_2, object t1 is not at airport l1_1, object t1 is not located at airport l0_1, object t1 is not located at airport l1_2, object t2 is not at airport l1_0, object t2 is not located at airport l1_1, package p0 is not in vehicle t0, package p0 is not located in vehicle a1, package p0 is not located in vehicle t1, package p0 is not present in vehicle a0, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not in vehicle t0, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle t1, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t2, package p2 is not located in vehicle a1, package p2 is not located in vehicle t1, package p3 is not in vehicle a0, package p3 is not in vehicle t1, package p3 is not in vehicle t2 and package p3 is not located in vehicle a1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d307dc1a-f1c9-47ed-aa63-6e98710ef2e1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, are all of the following properties: airport l0_0 is in city c0, airport l0_2 is located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object t0 is not located, at airport l0_1, object t1 is not located, at airport l0_1, object t2 is located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object t1 is located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object t0 is not located, city c0 contains airport l0_1, city c0 does not contain airport l1_1, city c1 contains airport l1_0, city c1 contains airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, object a0 is at airport l1_0, object a0 is not at airport l0_2, object a0 is not located at airport l1_2, object a1 is located at airport l0_0, object a1 is not at airport l0_1, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_2, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_1, object p1 is located at airport l0_0, object p1 is not at airport l1_0, object p1 is not at airport l1_1, object p1 is not located at airport l0_1, object p1 is not located at airport l0_2, object p2 is not at airport l0_0, object p2 is not at airport l0_1, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_2, object p2 is not located at airport l1_0, object p3 is not at airport l0_1, object p3 is not at airport l1_0, object p3 is not at airport l1_2, object p3 is not located at airport l0_2, object t0 is located at airport l0_0, object t0 is not at airport l0_2, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is not at airport l0_2, object t1 is not at airport l1_2, object t2 is not at airport l0_0, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is not in vehicle a0, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle t1, package p0 is present in vehicle a1, package p1 is not in vehicle a0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t0, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p2 is in vehicle a1, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0, package p2 is not present in vehicle t0, package p3 is not in vehicle a1, package p3 is not in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle t1 and package p3 is present in vehicle t0, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0fbbddb2-dd72-4000-9693-2cc4317b64d9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, are all of the following properties: airport l0_0 is in city c0, airport l0_1 is located in city c1, airport l0_1 is not in city c0airport l0_1 is not located in city c0, airport l0_2 is in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is in city c0, airport l1_2 is located in city c1, at airport l0_0, object a1 is not located, at airport l0_0, object p0 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is located, at airport l0_1, object p3 is located, at airport l0_1, object t0 is not located, at airport l0_1, object t1 is located, at airport l0_2, object p0 is located, at airport l0_2, object p1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t0 is located, at airport l0_2, object t2 is located, at airport l1_0, object a0 is located, at airport l1_0, object p3 is located, at airport l1_0, object t0 is not located, at airport l1_1, object p0 is located, at airport l1_1, object t0 is not located, at airport l1_2, object a1 is located, at airport l1_2, object p1 is located, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l1_0, city c1 does not contain airport l1_1, object a0 is located at airport l0_0, object a0 is located at airport l0_1, object a0 is located at airport l1_2, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a1 is at airport l1_0, object a1 is located at airport l0_1, object a1 is located at airport l1_1, object a1 is not located at airport l0_2, object p0 is located at airport l1_0, object p0 is not at airport l1_2, object p0 is not located at airport l0_1, object p1 is at airport l0_0, object p1 is located at airport l0_1, object p1 is located at airport l1_1, object p1 is not located at airport l1_0, object p2 is at airport l0_0, object p2 is located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_1, object p2 is not located at airport l1_0, object p3 is located at airport l1_1, object p3 is not located at airport l1_2, object t0 is located at airport l1_2, object t1 is at airport l0_0, object t1 is at airport l1_2, object t1 is not at airport l1_1, object t1 is not located at airport l0_2, object t1 is not located at airport l1_0, object t2 is at airport l0_0, object t2 is located at airport l1_2, object t2 is not at airport l0_1, object t2 is not located at airport l1_0, object t2 is not located at airport l1_1, package p0 is located in vehicle t0, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p0 is present in vehicle a1, package p1 is not in vehicle t0, package p1 is not located in vehicle a1, package p1 is not present in vehicle t2, package p1 is present in vehicle a0, package p1 is present in vehicle t1, package p2 is located in vehicle a1, package p2 is located in vehicle t2, package p2 is not in vehicle t1, package p2 is not present in vehicle t0, package p2 is present in vehicle a0, package p3 is located in vehicle t2, package p3 is not located in vehicle t1, package p3 is not present in vehicle t0, package p3 is present in vehicle a0 and package p3 is present in vehicle a1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b434fadc-4b4c-4f2b-b44e-c374f37da01c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "airport l0_0 is in city c0, airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l1_0, object a0 is located, object a1 is located at airport l0_0, object p1 is at airport l0_0, object t0 is located at airport l0_0, object t1 is located at airport l1_0, object t2 is at airport l0_1, package p0 is in vehicle a1, package p2 is located in vehicle a1 and package p3 is located in vehicle t0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "53adf00e-fd71-463d-b66f-f0bef7414762", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object p0 is not located, at airport l0_0, object p2 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t0 is not located, at airport l0_2, object t1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t2 is not located, city c0 does not contain airport l1_1, object a0 is not at airport l0_0, object a0 is not located at airport l0_1, object a0 is not located at airport l0_2, object a0 is not located at airport l1_2, object a1 is not at airport l1_0, object a1 is not at airport l1_1, object a1 is not located at airport l0_1, object p0 is not at airport l1_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_1, object p0 is not located at airport l1_2, object p1 is not at airport l0_2, object p1 is not located at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_2, object p3 is not at airport l1_1, object p3 is not located at airport l0_0, object t0 is not at airport l0_1, object t0 is not at airport l1_1, object t1 is not at airport l0_1, object t1 is not at airport l1_1, object t1 is not located at airport l1_2, object t2 is not at airport l0_0, object t2 is not at airport l1_0, package p0 is not in vehicle t1, package p0 is not located in vehicle a0, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p1 is not in vehicle a1, package p1 is not in vehicle t1, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p2 is not in vehicle t1, package p2 is not located in vehicle t0, package p2 is not present in vehicle a0, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not present in vehicle a1, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "cebd54e8-a507-4740-b273-d96ac0f42c63", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object p0 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t0 is not located, city c0 does not contain airport l1_0, city c1 does not contain airport l0_1, city c1 does not contain airport l0_2, object a0 is not at airport l0_1, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a1 is not at airport l0_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_2, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_2, object p0 is not located at airport l1_2, object p1 is not at airport l1_2, object p1 is not located at airport l0_1, object p1 is not located at airport l0_2, object p2 is not located at airport l0_0, object p2 is not located at airport l0_1, object p2 is not located at airport l1_1, object p3 is not at airport l0_0, object p3 is not at airport l1_0, object p3 is not at airport l1_1, object t0 is not at airport l0_1, object t0 is not at airport l0_2, object t0 is not located at airport l1_1, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not located at airport l1_2, object t2 is not at airport l0_0, object t2 is not located at airport l1_2, package p0 is not in vehicle a0, package p0 is not in vehicle t1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p1 is not in vehicle t1, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle a1, package p1 is not present in vehicle t0, package p2 is not in vehicle t2, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not present in vehicle t1, package p3 is not in vehicle t2, package p3 is not located in vehicle a1, package p3 is not present in vehicle a0 and package p3 is not present in vehicle t1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f0edab03-ab10-4d32-b4da-65fe37987586", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, are all of the following properties: airport l0_0 is located in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is in city c0, airport l1_1 is in city c1, airport l1_2 is located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_0, object a1 is located, at airport l0_0, object p0 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_1, object a1 is not located, at airport l0_2, object a0 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t1 is located, at airport l1_0, object t2 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object p0 is not located, city c0 contains airport l0_1, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c1 contains airport l1_0, city c1 does not contain airport l0_0, city c1 does not contain airport l0_2, object a0 is located at airport l1_0, object a0 is not at airport l0_1, object a0 is not at airport l1_2, object a0 is not located at airport l1_1, object a1 is not at airport l0_2, object a1 is not at airport l1_2, object a1 is not located at airport l1_1, object p0 is not at airport l0_1, object p0 is not at airport l1_0, object p0 is not located at airport l0_2, object p1 is not at airport l0_0, object p1 is not at airport l0_2, object p1 is not located at airport l0_1, object p1 is not located at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_2, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l0_1, object p3 is not at airport l0_1, object p3 is not at airport l0_2, object p3 is not located at airport l1_0, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is located at airport l0_1, object t0 is not located at airport l0_2, object t0 is not located at airport l1_2, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not located at airport l0_0, object t1 is not located at airport l1_1, object t1 is not located at airport l1_2, object t2 is located at airport l0_1, object t2 is not at airport l0_2, object t2 is not at airport l1_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, package p0 is not in vehicle a1, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p0 is present in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle a1, package p1 is not present in vehicle t1, package p1 is not present in vehicle t2, package p1 is present in vehicle t0, package p2 is not in vehicle t1, package p2 is not in vehicle t2, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is present in vehicle a1, package p3 is in vehicle t0, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not in vehicle t2 and package p3 is not present in vehicle a0, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "2b2597f3-6d80-4e65-9249-a12549f69564", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, are all of the following properties: airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is in city c1, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, airport l1_2 is not in city c1airport l1_2 is not located in city c1, at airport l0_0, object a1 is located, at airport l0_0, object p0 is located, at airport l0_0, object p1 is not located, at airport l0_0, object t0 is not located, at airport l0_0, object t1 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t0 is not located, at airport l1_0, object a1 is located, at airport l1_0, object t1 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is located, at airport l1_2, object a1 is located, at airport l1_2, object p1 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is located, city c0 contains airport l0_0, city c0 does not contain airport l1_1, city c1 contains airport l0_2, city c1 does not contain airport l1_0, city c1 does not contain airport l1_1, object a0 is at airport l0_0, object a0 is at airport l1_0, object a0 is located at airport l1_2, object a0 is not at airport l1_1, object a0 is not located at airport l0_1, object a0 is not located at airport l0_2, object a1 is at airport l0_2, object a1 is located at airport l1_1, object p0 is at airport l0_2, object p0 is located at airport l1_0, object p0 is located at airport l1_2, object p0 is not at airport l0_1, object p0 is not located at airport l1_1, object p1 is located at airport l1_0, object p1 is not at airport l0_1, object p1 is not at airport l0_2, object p1 is not at airport l1_1, object p2 is at airport l0_2, object p2 is at airport l1_2, object p2 is located at airport l0_0, object p2 is located at airport l1_1, object p2 is not at airport l1_0, object p2 is not located at airport l0_1, object p3 is at airport l1_0, object p3 is located at airport l0_2, object p3 is not at airport l1_2, object p3 is not located at airport l0_0, object p3 is not located at airport l1_1, object t0 is at airport l1_2, object t0 is located at airport l0_2, object t0 is not at airport l1_0, object t0 is not located at airport l1_1, object t1 is located at airport l0_1, object t1 is not at airport l0_2, object t2 is at airport l1_0, object t2 is located at airport l0_2, object t2 is not located at airport l0_1, package p0 is in vehicle a1, package p0 is not in vehicle a0, package p0 is not located in vehicle t2, package p0 is not present in vehicle t0, package p0 is not present in vehicle t1, package p1 is in vehicle t2, package p1 is located in vehicle a1, package p1 is not in vehicle a0, package p1 is not in vehicle t1, package p1 is not present in vehicle t0, package p2 is in vehicle a1, package p2 is located in vehicle a0, package p2 is located in vehicle t2, package p2 is not located in vehicle t1, package p2 is not present in vehicle t0, package p3 is in vehicle t0, package p3 is in vehicle t1, package p3 is in vehicle t2, package p3 is located in vehicle a1 and package p3 is not in vehicle a0, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9c88a371-d9a9-4608-b22c-0b79aee993cb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "airport l0_0 is in city c0, airport l0_2 is located in city c0, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t0 is located, city c0 contains airport l0_1, city c1 contains airport l1_0, object a0 is at airport l1_0, object a1 is at airport l0_0, object t1 is located at airport l1_0, object t2 is located at airport l0_1, package p0 is located in vehicle t0, package p1 is in vehicle t0, package p2 is present in vehicle a1 and package p3 is located in vehicle t0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "548177f9-0b1d-4910-9562-b31b06d865e9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p2 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object t0 is not located, city c0 does not contain airport l1_1, city c1 does not contain airport l0_2, object a0 is not at airport l0_1, object a0 is not at airport l1_2, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_2, object p0 is not at airport l0_0, object p0 is not at airport l0_1, object p0 is not at airport l0_2, object p0 is not located at airport l1_0, object p0 is not located at airport l1_1, object p1 is not at airport l0_1, object p1 is not located at airport l1_1, object p2 is not at airport l0_1, object p2 is not located at airport l0_2, object p2 is not located at airport l1_2, object p3 is not at airport l1_0, object p3 is not located at airport l0_0, object p3 is not located at airport l1_2, object t0 is not at airport l0_0, object t0 is not at airport l0_2, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is not at airport l1_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_0, object t2 is not at airport l1_0, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle t1, package p0 is not present in vehicle a1, package p1 is not in vehicle t1, package p1 is not located in vehicle a1, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p2 is not located in vehicle a0, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p2 is not present in vehicle t0, package p3 is not in vehicle a1, package p3 is not in vehicle t1, package p3 is not located in vehicle a0 and package p3 is not located in vehicle t2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "870c4ecb-e719-4e9a-b7fb-f9191b213d03", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, at airport l0_1, object a0 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a1 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_2, object a0 is not at airport l0_2, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a1 is not at airport l1_0, object a1 is not located at airport l0_1, object a1 is not located at airport l1_1, object p0 is not at airport l0_1, object p0 is not located at airport l0_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_0, object p0 is not located at airport l1_2, object p1 is not at airport l0_2, object p1 is not at airport l1_0, object p1 is not located at airport l0_0, object p1 is not located at airport l0_1, object p1 is not located at airport l1_1, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l0_2, object p2 is not at airport l1_0, object p2 is not at airport l1_1, object p2 is not located at airport l0_0, object p3 is not at airport l0_0, object p3 is not at airport l0_1, object p3 is not at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_2, object p3 is not located at airport l1_0, object t0 is not located at airport l0_0, object t0 is not located at airport l0_2, object t1 is not at airport l1_1, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t2 is not located at airport l0_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, package p0 is not in vehicle t1, package p0 is not located in vehicle a0, package p0 is not located in vehicle a1, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not present in vehicle t1, package p2 is not located in vehicle a0, package p2 is not present in vehicle t0, package p2 is not present in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle a1, package p3 is not in vehicle t2 and package p3 is not present in vehicle t1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_1 is in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1, at airport l0_1, object t2 is located, at airport l0_2, object p3 is located, at airport l1_2, object t1 is located, city c0 contains airport l0_0, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p1 is located at airport l1_1, object p2 is at airport l0_2 and object t0 is located at airport l0_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "397431d7-16f6-43b4-a689-cd498e89032b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "13932e62-678e-46d1-a7ad-746be4eb5b92", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: airplane a0 is loaded with package p0 at airport l1_2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "20efdd10-8e59-4a9c-a7ba-efd7e3bc4c2d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2. Is the action: package p0 is loaded in truck t1 at airport l1_2 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b97e64a8-4488-4dbe-88f1-970dc573a04e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: truck t1 is driven from airport l0_0 to airport l1_0 in city c1. Is the action: in city c1, truck is driven from airports l0_0 to l1_0 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "49bfbf74-e9e6-4005-9ad0-d3da5799f5eb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b6eaeceb-694d-4d59-acbb-7eea23ca8e86", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_1, package p2 is loaded in truck t1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "package p2 is loaded in truck t1 at airport l1_1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "27503dbb-a584-475f-9ed7-7c19da14ed52", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "airplane a0 flies from airports l1_0 to l0_0, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, airplane a1 flies from airports l1_0 to l0_0, from truck t1 package p0 is unloaded at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_0, in city c0, truck is driven from airports l0_2 to l0_0, truck t2 is driven from airport l0_1 to airport l0_0 in city c0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_1 in city c0 and truck t2 is driven from airport l0_1 to airport l0_2 in city c0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "31a63390-1b40-4b83-878b-b9e7bcc8ee13", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "truck t2 is driven from airport l1_2 to airport l0_1 in city c0, at airport l1_2, package p1 is unloaded from truck t1, at airport l0_1, package p3 is unloaded from airplane a1, at airport l1_2, package p0 is loaded in truck t1, at airport l1_0, package p3 is loaded in airplane a0, package p0 is loaded into airplane a0 at airport l0_1, package p3 is unloaded from truck t0 at airport l0_2, package p0 is loaded into airplane a1 at airport l1_1, at airport l1_2, package p1 is unloaded from airplane a0, package p0 is unloaded from truck t0 at airport l0_1, package p2 is loaded in truck t2 at airport l1_0, package p0 is loaded in truck t0 at airport l1_1, in city c0, truck is driven from airports l1_1 to l0_2, from airplane a0 package p1 is unloaded at airport l1_1, in city c0, truck is driven from airports l0_1 to l0_2, truck t1 is driven to airport l0_0 from airport l1_0 in city c0, airplane a1 is loaded with package p3 at airport l0_2, package p1 is loaded into airplane a1 at airport l1_1, from airplane a0 package p2 is unloaded at airport l1_2, in city c1, truck is driven from airports l1_2 to l0_0, at airport l0_1, package p0 is unloaded from airplane a0, package p2 is unloaded from airplane a0 at airport l1_1, in city c0, truck is driven from airports l1_0 to l0_0, truck t0 is driven from airport l0_2 to airport l1_2 in city c1, at airport l1_1, package p3 is unloaded from truck t1, truck t0 is driven from airport l0_2 to airport l1_1 in city c0, truck t1 is driven from airport l0_2 to airport l0_1 in city c0, at airport l0_2, package p3 is loaded in airplane a0, package p2 is unloaded from airplane a1 at airport l1_1, airplane a1 is loaded with package p0 at airport l0_0, at airport l0_0, package p0 is loaded in airplane a0, truck t2 is loaded with package p2 at airport l1_1, in city c0, truck is driven from airports l1_0 to l0_1, truck t0 is loaded with package p2 at airport l0_0, at airport l0_2, package p2 is loaded in airplane a0, package p0 is loaded in truck t1 at airport l0_1, package p2 is unloaded from airplane a0 at airport l0_0, at airport l1_2, package p3 is loaded in truck t2, in city c1, truck is driven from airports l1_0 to l1_2, at airport l1_0, package p0 is unloaded from truck t0, at airport l1_0, package p3 is loaded in truck t0, at airport l0_2, package p0 is loaded in truck t0, in city c1, truck is driven from airports l1_1 to l0_2, in city c0, truck is driven from airports l1_2 to l1_1, at airport l0_0, package p2 is unloaded from airplane a1, package p0 is loaded in truck t2 at airport l1_0, in city c1, truck is driven from airports l0_0 to l1_2, at airport l1_0, package p3 is loaded in airplane a1, in city c0, truck is driven from airports l1_1 to l1_2, from airplane a0 package p3 is unloaded at airport l1_0, truck t2 is driven to airport l0_2 from airport l1_2 in city c0, truck t0 is driven from airport l1_1 to airport l0_1 in city c0, truck t2 is driven from airport l0_2 to airport l0_1 in city c1, package p2 is loaded in truck t1 at airport l1_1, from truck t2 package p0 is unloaded at airport l1_2, package p3 is unloaded from airplane a0 at airport l1_1, from truck t0 package p3 is unloaded at airport l0_0, package p1 is unloaded from truck t0 at airport l1_0, from truck t1 package p0 is unloaded at airport l0_1, package p3 is loaded into airplane a0 at airport l1_1, at airport l0_1, package p1 is unloaded from truck t2, package p3 is loaded in truck t1 at airport l0_0, package p1 is unloaded from truck t1 at airport l0_0, at airport l1_2, package p2 is loaded in truck t2, package p2 is loaded in truck t2 at airport l0_1, from airplane a0 package p3 is unloaded at airport l0_0, from truck t0 package p2 is unloaded at airport l1_0, truck t0 is driven to airport l1_2 from airport l0_0 in city c0, package p3 is unloaded from truck t0 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_2 in city c1, at airport l1_1, package p1 is loaded in airplane a0, truck t1 is driven to airport l0_2 from airport l1_0 in city c1, at airport l0_1, package p2 is unloaded from airplane a1, truck t0 is driven to airport l1_0 from airport l0_2 in city c0, in city c1, truck is driven from airports l1_0 to l1_1, package p0 is unloaded from truck t2 at airport l0_0, from truck t1 package p3 is unloaded at airport l0_0, in city c0, truck is driven from airports l0_1 to l0_2, truck t0 is loaded with package p3 at airport l1_1, at airport l0_2, package p2 is unloaded from truck t2, truck t1 is driven to airport l1_2 from airport l0_1 in city c0, truck t2 is driven from airport l0_0 to airport l1_0 in city c0, in city c0, truck is driven from airports l0_1 to l1_2, in city c1, truck is driven from airports l0_1 to l0_0, truck t2 is loaded with package p3 at airport l0_2, in city c1, truck is driven from airports l0_1 to l0_2, truck t2 is driven to airport l1_0 from airport l0_2 in city c1, package p1 is loaded in truck t0 at airport l0_1, truck t1 is driven from airport l0_1 to airport l1_2 in city c1, at airport l1_2, package p1 is loaded in truck t2, truck t2 is driven to airport l0_1 from airport l1_1 in city c0, truck t0 is driven to airport l0_1 from airport l1_0 in city c1, package p2 is unloaded from truck t0 at airport l0_2, truck t1 is driven from airport l0_1 to airport l0_0 in city c0, package p3 is loaded into airplane a1 at airport l0_1, package p1 is loaded in truck t0 at airport l0_0, package p3 is loaded in truck t2 at airport l1_0, in city c1, truck is driven from airports l1_0 to l0_0, in city c0, truck is driven from airports l1_1 to l0_0, from airplane a0 package p1 is unloaded at airport l0_0, package p2 is loaded into airplane a1 at airport l0_1, at airport l0_1, package p1 is unloaded from truck t0, truck t0 is driven from airport l0_0 to airport l0_1 in city c0, at airport l0_2, package p0 is loaded in airplane a1, from airplane a0 package p3 is unloaded at airport l1_2, at airport l0_1, package p2 is unloaded from truck t2, at airport l0_0, package p1 is unloaded from airplane a1, at airport l1_1, package p0 is unloaded from airplane a0, at airport l1_2, package p2 is loaded in truck t1, in city c0, truck is driven from airports l0_1 to l1_1, package p3 is unloaded from airplane a1 at airport l0_0, from truck t2 package p3 is unloaded at airport l1_2, package p0 is unloaded from airplane a0 at airport l1_2, from airplane a0 package p0 is unloaded at airport l1_0, package p0 is loaded in truck t0 at airport l1_2, package p3 is unloaded from airplane a0 at airport l0_2, at airport l0_0, package p2 is loaded in airplane a1, truck t0 is driven from airport l1_0 to airport l0_2 in city c0, truck t1 is driven from airport l0_0 to airport l1_1 in city c1, truck t0 is driven from airport l1_2 to airport l0_1 in city c0, at airport l1_0, package p0 is unloaded from truck t2, package p3 is loaded in truck t1 at airport l1_0, from truck t1 package p2 is unloaded at airport l0_2, at airport l1_2, package p0 is loaded in truck t2, airplane a1 is loaded with package p2 at airport l1_2, at airport l1_0, package p3 is unloaded from airplane a1, at airport l0_2, package p1 is loaded in truck t2, truck t1 is driven to airport l1_2 from airport l0_0 in city c0, in city c0, truck is driven from airports l0_1 to l1_0, in city c0, truck is driven from airports l0_0 to l1_1, package p0 is unloaded from airplane a0 at airport l0_2, truck t2 is driven from airport l0_0 to airport l1_1 in city c1, in city c1, truck is driven from airports l0_0 to l1_0, truck t1 is driven from airport l1_2 to airport l0_0 in city c0, at airport l0_0, package p0 is unloaded from truck t0, truck t1 is driven from airport l1_2 to airport l0_1 in city c0, in city c1, truck is driven from airports l1_2 to l0_0, truck t2 is driven from airport l0_2 to airport l1_1 in city c0, at airport l1_0, package p1 is loaded in truck t2, at airport l1_0, package p2 is loaded in truck t1, truck t2 is driven to airport l1_0 from airport l0_2 in city c0, truck t2 is driven to airport l1_1 from airport l0_1 in city c1, from airplane a1 package p3 is unloaded at airport l1_1, package p2 is unloaded from airplane a0 at airport l1_0, truck t2 is driven to airport l1_1 from airport l0_1 in city c0, in city c1, truck is driven from airports l0_1 to l1_0, in city c1, truck is driven from airports l1_1 to l1_0, truck t0 is driven from airport l0_2 to airport l1_0 in city c1, at airport l0_0, package p1 is loaded in airplane a1, at airport l0_1, package p1 is loaded in airplane a0, truck t2 is driven to airport l0_2 from airport l1_2 in city c1, from truck t2 package p2 is unloaded at airport l1_2, package p2 is loaded in truck t0 at airport l1_0, at airport l0_0, package p3 is loaded in airplane a1, in city c0, truck is driven from airports l0_1 to l1_2, in city c1, truck is driven from airports l0_2 to l1_0, in city c1, truck is driven from airports l0_2 to l1_2, truck t2 is driven to airport l0_0 from airport l1_0 in city c0, package p2 is unloaded from truck t0 at airport l0_1, truck t2 is loaded with package p0 at airport l0_1, airplane a0 is loaded with package p0 at airport l1_0, at airport l1_0, package p0 is unloaded from airplane a1, package p3 is loaded into airplane a0 at airport l0_0, in city c1, truck is driven from airports l1_0 to l0_2, truck t1 is driven to airport l1_1 from airport l0_2 in city c1, in city c0, truck is driven from airports l1_0 to l0_2, truck t0 is loaded with package p2 at airport l0_1, package p1 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l0_1 from airport l1_0 in city c1, package p3 is unloaded from truck t2 at airport l0_0, truck t1 is loaded with package p1 at airport l0_1, in city c0, truck is driven from airports l1_1 to l0_2, truck t1 is driven from airport l0_2 to airport l0_0 in city c0, package p1 is unloaded from truck t2 at airport l0_0, package p0 is loaded into airplane a1 at airport l1_2, at airport l1_2, package p3 is unloaded from truck t0, package p0 is unloaded from truck t2 at airport l0_2, truck t1 is driven to airport l0_1 from airport l0_0 in city c1, from airplane a1 package p2 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t1 at airport l1_2, package p0 is loaded in truck t1 at airport l1_1, from airplane a0 package p1 is unloaded at airport l1_0, truck t2 is driven from airport l1_2 to airport l0_1 in city c1, at airport l0_2, package p1 is loaded in airplane a1, in city c1, truck is driven from airports l0_1 to l1_2, package p3 is loaded in truck t0 at airport l0_0, package p2 is loaded into airplane a0 at airport l0_0, in city c1, truck is driven from airports l1_0 to l0_2, at airport l1_0, package p1 is loaded in airplane a1, in city c0, truck is driven from airports l1_0 to l1_1, in city c1, truck is driven from airports l1_0 to l1_1, at airport l0_2, package p1 is unloaded from airplane a0, package p0 is unloaded from truck t0 at airport l1_1, truck t2 is driven from airport l1_1 to airport l1_2 in city c0, truck t0 is driven from airport l1_1 to airport l0_2 in city c1, at airport l1_1, package p3 is unloaded from truck t2, from airplane a1 package p0 is unloaded at airport l1_2, at airport l1_0, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_0 to l0_0, from truck t1 package p2 is unloaded at airport l0_1, in city c0, truck is driven from airports l1_0 to l1_2, at airport l1_2, package p3 is unloaded from airplane a1, package p1 is loaded into airplane a0 at airport l0_0, from truck t0 package p0 is unloaded at airport l1_2, in city c1, truck is driven from airports l0_2 to l1_1, truck t2 is driven to airport l1_0 from airport l1_1 in city c0, in city c1, truck is driven from airports l0_2 to l0_0, at airport l1_2, package p1 is loaded in airplane a0, truck t1 is driven to airport l0_1 from airport l1_1 in city c0, truck t0 is driven to airport l0_0 from airport l0_1 in city c0, truck t2 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is driven to airport l0_2 from airport l1_2 in city c0, package p0 is loaded into airplane a1 at airport l1_0, truck t2 is driven to airport l1_0 from airport l1_2 in city c1, in city c1, truck is driven from airports l0_1 to l0_2, truck t1 is loaded with package p2 at airport l0_2, truck t2 is driven from airport l0_2 to airport l0_0 in city c1, package p3 is unloaded from truck t2 at airport l0_2, truck t1 is driven from airport l0_1 to airport l1_0 in city c1, from airplane a0 package p3 is unloaded at airport l0_1, truck t2 is driven from airport l1_1 to airport l0_1 in city c1, at airport l0_2, package p2 is loaded in airplane a1, package p1 is loaded in truck t2 at airport l0_0, truck t0 is driven from airport l0_0 to airport l0_2 in city c1, package p0 is loaded in truck t1 at airport l0_2, in city c1, truck is driven from airports l0_0 to l0_1, airplane a0 is flown from airport l0_0 to airport l1_0, package p1 is unloaded from airplane a1 at airport l1_1, from truck t2 package p2 is unloaded at airport l1_1, package p3 is loaded in truck t2 at airport l1_1, truck t0 is driven from airport l0_1 to airport l1_1 in city c0, package p1 is loaded in truck t1 at airport l0_2, in city c0, truck is driven from airports l0_0 to l1_1, in city c0, truck is driven from airports l1_2 to l1_0, truck t1 is driven from airport l0_0 to airport l0_2 in city c1, truck t1 is driven from airport l0_0 to airport l1_2 in city c1, truck t0 is loaded with package p2 at airport l1_2, truck t0 is driven from airport l1_2 to airport l0_0 in city c0, package p1 is loaded in truck t1 at airport l1_1, at airport l0_0, package p0 is unloaded from airplane a1, in city c1, truck is driven from airports l0_0 to l0_2, truck t0 is driven from airport l1_2 to airport l0_2 in city c1, truck t0 is loaded with package p3 at airport l0_1, at airport l0_2, package p1 is unloaded from truck t0, truck t0 is driven from airport l0_2 to airport l1_2 in city c0, truck t1 is driven to airport l0_0 from airport l1_1 in city c0, at airport l0_1, package p3 is unloaded from truck t0, package p2 is unloaded from airplane a0 at airport l0_2, package p3 is unloaded from truck t2 at airport l1_0, at airport l0_0, package p3 is loaded in truck t2, at airport l0_1, package p1 is unloaded from truck t1, at airport l0_2, package p0 is loaded in truck t2, truck t2 is driven to airport l1_0 from airport l1_1 in city c1, truck t1 is driven to airport l1_2 from airport l0_2 in city c0, package p2 is loaded into airplane a1 at airport l1_0, in city c0, truck is driven from airports l0_0 to l1_2, truck t1 is loaded with package p2 at airport l0_0, at airport l1_1, package p0 is unloaded from truck t1, package p0 is loaded in truck t1 at airport l0_0, truck t1 is driven from airport l1_1 to airport l0_1 in city c1, at airport l0_2, package p1 is loaded in truck t0, truck t1 is driven to airport l1_1 from airport l1_2 in city c0, in city c1, truck is driven from airports l0_2 to l0_1, from truck t1 package p1 is unloaded at airport l0_2, truck t1 is driven from airport l1_0 to airport l1_2 in city c1, from truck t2 package p1 is unloaded at airport l0_2, truck t1 is loaded with package p1 at airport l0_0, truck t1 is loaded with package p2 at airport l0_1, at airport l1_1, package p0 is unloaded from truck t2, at airport l1_2, package p1 is loaded in airplane a1, from truck t1 package p3 is unloaded at airport l1_2, at airport l1_1, package p2 is unloaded from truck t0, truck t1 is driven to airport l1_0 from airport l0_2 in city c0, package p3 is loaded in truck t2 at airport l0_1, at airport l0_0, package p0 is loaded in truck t2, package p1 is loaded in truck t0 at airport l1_0, truck t1 is driven to airport l0_0 from airport l0_1 in city c1, package p3 is unloaded from truck t2 at airport l0_1, at airport l0_1, package p0 is loaded in airplane a1, at airport l1_2, package p3 is loaded in airplane a1, package p3 is loaded in truck t0 at airport l1_2, truck t0 is driven from airport l0_1 to airport l1_1 in city c1, in city c1, truck is driven from airports l0_1 to l0_0, at airport l0_2, package p0 is unloaded from airplane a1, truck t0 is driven from airport l0_1 to airport l1_0 in city c0, package p2 is loaded in truck t0 at airport l1_1, truck t2 is loaded with package p2 at airport l0_0, in city c1, truck is driven from airports l0_0 to l1_2, truck t1 is driven to airport l0_1 from airport l1_2 in city c1, at airport l1_1, package p1 is unloaded from truck t0, truck t1 is driven from airport l0_0 to airport l0_1 in city c0, truck t0 is loaded with package p1 at airport l1_1, at airport l1_0, package p0 is loaded in truck t0, truck t0 is driven to airport l0_1 from airport l1_2 in city c1, truck t2 is driven to airport l0_0 from airport l1_1 in city c0, package p1 is loaded in truck t2 at airport l1_1, truck t2 is driven to airport l1_2 from airport l1_1 in city c1, package p1 is unloaded from truck t2 at airport l1_1, at airport l0_2, package p0 is unloaded from truck t0, in city c1, truck is driven from airports l0_1 to l1_0, at airport l1_1, package p0 is loaded in truck t2, in city c0, truck is driven from airports l1_0 to l1_1, in city c1, truck is driven from airports l1_1 to l0_0, truck t0 is driven from airport l1_0 to airport l1_2 in city c1, in city c0, truck is driven from airports l1_2 to l0_0, truck t1 is driven to airport l1_0 from airport l1_1 in city c0, from airplane a1 package p0 is unloaded at airport l1_1, airplane a0 is loaded with package p1 at airport l0_2, truck t0 is loaded with package p0 at airport l0_1, truck t1 is loaded with package p3 at airport l0_1, at airport l0_2, package p3 is unloaded from truck t1, package p1 is unloaded from truck t0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l0_2 in city c1, at airport l0_2, package p1 is unloaded from airplane a1, package p3 is unloaded from airplane a1 at airport l0_2, in city c0, truck is driven from airports l1_0 to l1_1, airplane a0 is loaded with package p2 at airport l1_2, from truck t1 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in truck t1, truck t0 is driven to airport l1_1 from airport l0_0 in city c1, airplane a1 is flown to airport l1_0 from airport l0_0, package p1 is unloaded from truck t0 at airport l0_0, truck t2 is driven to airport l0_1 from airport l0_0 in city c1, from truck t2 package p0 is unloaded at airport l0_1, at airport l1_0, package p1 is loaded in airplane a0, truck t0 is driven from airport l0_0 to airport l1_1 in city c0, truck t2 is driven to airport l0_1 from airport l1_0 in city c0, package p0 is loaded in truck t0 at airport l0_0, in city c1, truck is driven from airports l1_1 to l1_0, truck t0 is driven from airport l1_1 to airport l0_0 in city c1, in city c1, truck is driven from airports l1_0 to l1_1, at airport l0_1, package p2 is loaded in airplane a0, package p1 is unloaded from airplane a1 at airport l1_0, from truck t1 package p1 is unloaded at airport l1_1, from airplane a1 package p0 is unloaded at airport l0_1, truck t1 is driven from airport l1_2 to airport l1_0 in city c0, truck t0 is driven to airport l1_2 from airport l1_0 in city c0, from airplane a1 package p1 is unloaded at airport l0_1, package p3 is loaded into airplane a0 at airport l1_2, truck t2 is driven to airport l0_0 from airport l1_1 in city c1, airplane a0 is loaded with package p0 at airport l1_2, at airport l0_0, package p2 is unloaded from truck t0, in city c1, truck is driven from airports l0_0 to l1_0, truck t2 is loaded with package p2 at airport l0_2, package p2 is unloaded from airplane a0 at airport l0_1, package p2 is unloaded from airplane a1 at airport l1_2, package p1 is loaded in truck t0 at airport l1_2, truck t0 is driven from airport l0_2 to airport l1_1 in city c1, from airplane a1 package p2 is unloaded at airport l1_0, airplane a0 is loaded with package p2 at airport l1_1, in city c1, truck is driven from airports l1_1 to l0_2, at airport l0_0, package p0 is unloaded from airplane a0, truck t1 is driven to airport l0_2 from airport l0_0 in city c0, truck t0 is driven from airport l0_0 to airport l0_2 in city c0, at airport l0_1, package p1 is unloaded from airplane a0, from truck t0 package p3 is unloaded at airport l1_0, package p3 is loaded in truck t1 at airport l0_2, airplane a0 is loaded with package p2 at airport l1_0, at airport l1_2, package p3 is loaded in truck t1, at airport l1_2, package p2 is unloaded from truck t0, at airport l0_0, package p0 is unloaded from truck t1, package p1 is loaded into airplane a1 at airport l0_1, from truck t2 package p2 is unloaded at airport l1_0, truck t0 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is driven from airport l0_2 to airport l0_1 in city c1, at airport l1_1, package p3 is loaded in truck t1, truck t1 is driven from airport l0_0 to airport l1_0 in city c1, at airport l1_2, package p1 is unloaded from truck t2, in city c1, truck is driven from airports l0_2 to l1_2, truck t2 is driven from airport l0_0 to airport l0_1 in city c0, package p2 is unloaded from truck t1 at airport l1_0, truck t2 is driven from airport l1_2 to airport l1_1 in city c0, in city c1, truck is driven from airports l1_0 to l0_0, truck t1 is driven from airport l0_1 to airport l1_0 in city c0, at airport l1_1, package p2 is loaded in airplane a1, at airport l1_1, package p3 is loaded in airplane a1, in city c1, truck is driven from airports l0_1 to l0_2, in city c1, truck is driven from airports l0_1 to l1_1, truck t2 is driven from airport l1_0 to airport l0_2 in city c0, truck t0 is driven from airport l1_1 to airport l1_2 in city c0, at airport l0_1, package p3 is loaded in airplane a0, from truck t1 package p3 is unloaded at airport l1_0, at airport l0_2, package p0 is unloaded from truck t1, in city c0, truck is driven from airports l1_2 to l1_0, at airport l1_0, package p1 is unloaded from truck t2, truck t2 is driven to airport l1_2 from airport l1_0 in city c0, truck t0 is driven from airport l1_1 to airport l0_1 in city c1, truck t2 is driven from airport l0_2 to airport l1_2 in city c0, truck t0 is driven to airport l1_0 from airport l1_2 in city c1, truck t2 is driven from airport l0_2 to airport l0_0 in city c0, truck t2 is driven to airport l0_2 from airport l0_0 in city c0, truck t0 is driven to airport l0_0 from airport l1_2 in city c1, truck t0 is driven from airport l0_0 to airport l1_0 in city c0, truck t1 is driven to airport l1_1 from airport l0_2 in city c0, at airport l1_1, package p2 is unloaded from truck t1, truck t0 is driven from airport l1_2 to airport l0_2 in city c0, in city c0, truck is driven from airports l1_1 to l1_0, truck t0 is driven to airport l1_2 from airport l0_1 in city c1, truck t2 is driven from airport l1_0 to airport l0_1 in city c1, package p1 is unloaded from airplane a1 at airport l1_2, truck t2 is driven to airport l0_1 from airport l0_2 in city c0, from truck t1 package p0 is unloaded at airport l1_0, truck t1 is driven to airport l1_0 from airport l0_0 in city c0, from truck t1 package p3 is unloaded at airport l0_1, truck t2 is loaded with package p1 at airport l0_1, in city c1, truck is driven from airports l1_1 to l1_2, package p0 is loaded into airplane a0 at airport l0_2, from truck t1 package p1 is unloaded at airport l1_0, truck t0 is driven from airport l1_0 to airport l0_1 in city c0, package p2 is unloaded from truck t2 at airport l0_0, truck t2 is driven to airport l0_2 from airport l1_1 in city c0 and package p0 is loaded into airplane a0 at airport l1_1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "db3d0e6a-f378-4b29-8ce4-f331466c1eb2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_1, package p1 is loaded in truck t1, at airport l1_2, package p0 is loaded in truck t1, from truck t1 package p1 is unloaded at airport l1_0, in city c1, truck is driven from airports l1_2 to l1_1 and truck t1 is driven from airport l1_1 to airport l1_0 in city c1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "75704253-f922-4634-9bbf-2a2b30811a7e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_0, package p1 is unloaded from truck t1, at airport l1_1, package p0 is loaded in airplane a1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p0 at airport l1_2 and truck t1 is loaded with package p1 at airport l1_1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a61d55c8-310a-42ac-a756-a42c7d78c626", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0. Is the action: package p0 is loaded in truck t1 at airport l1_2 executable at step 1, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "94e134f1-3c89-4ea8-9a71-7a40d987ac99", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and package p0 is unloaded from airplane a0 at airport l1_0. Is the action: package p0 is unloaded from airplane a0 at airport l1_0 executable at step 5, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e7e2350f-3df2-4104-a8fa-ace339cff053", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ba77c3dd-aac4-440a-a49c-5db2afafc9c1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and truck t1 is driven from airport l1_2 to airport l1_1 in city c0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "truck t1 is driven from airport l1_2 to airport l1_1 in city c0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "8cb50d67-44cf-46bb-a755-a29d741110db", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "airplane a0 flies from airports l1_0 to l0_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p1 at airport l1_0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, truck t1 is driven from airport l1_0 to airport l1_2 in city c1, truck t2 is driven from airport l0_1 to airport l0_0 in city c0, package p1 is loaded in truck t1 at airport l1_0, at airport l1_0, package p1 is loaded in airplane a0, truck t1 is driven to airport l1_1 from airport l1_0 in city c1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_1, in city c0, truck is driven from airports l0_1 to l0_2 and at airport l1_0, package p0 is unloaded from truck t1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9fd2ac40-b829-46f5-8d89-407ea1ca0ec6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "truck t2 is driven to airport l0_1 from airport l1_2 in city c0, at airport l1_2, package p1 is unloaded from truck t1, from airplane a1 package p3 is unloaded at airport l0_1, package p0 is loaded in truck t1 at airport l1_2, package p3 is loaded into airplane a0 at airport l1_0, airplane a0 is loaded with package p0 at airport l0_1, from truck t0 package p3 is unloaded at airport l0_2, at airport l1_1, package p0 is loaded in airplane a1, at airport l1_2, package p1 is unloaded from airplane a0, package p0 is unloaded from truck t0 at airport l0_1, at airport l1_0, package p2 is loaded in truck t2, truck t0 is loaded with package p0 at airport l1_1, truck t1 is driven from airport l1_1 to airport l0_2 in city c0, at airport l1_1, package p1 is unloaded from airplane a0, truck t1 is driven to airport l0_2 from airport l0_1 in city c0, truck t1 is driven from airport l1_0 to airport l0_0 in city c0, package p3 is loaded into airplane a1 at airport l0_2, package p1 is loaded into airplane a1 at airport l1_1, at airport l1_2, package p2 is unloaded from airplane a0, truck t2 is driven to airport l0_0 from airport l1_2 in city c1, at airport l0_1, package p0 is unloaded from airplane a0, from airplane a0 package p2 is unloaded at airport l1_1, truck t0 is driven from airport l1_0 to airport l0_0 in city c0, truck t0 is driven from airport l0_2 to airport l1_2 in city c1, from truck t1 package p3 is unloaded at airport l1_1, truck t0 is driven to airport l1_1 from airport l0_2 in city c0, in city c0, truck is driven from airports l0_2 to l0_1, package p3 is loaded into airplane a0 at airport l0_2, package p2 is unloaded from airplane a1 at airport l1_1, airplane a1 is loaded with package p0 at airport l0_0, airplane a0 is loaded with package p0 at airport l0_0, at airport l1_1, package p2 is loaded in truck t2, truck t1 is driven from airport l1_0 to airport l0_1 in city c0, truck t0 is loaded with package p2 at airport l0_0, airplane a0 is loaded with package p2 at airport l0_2, package p0 is loaded in truck t1 at airport l0_1, from airplane a0 package p2 is unloaded at airport l0_0, package p3 is loaded in truck t2 at airport l1_2, truck t2 is driven to airport l1_2 from airport l1_0 in city c1, package p0 is unloaded from truck t0 at airport l1_0, at airport l1_0, package p3 is loaded in truck t0, truck t0 is loaded with package p0 at airport l0_2, in city c1, truck is driven from airports l1_1 to l0_2, in city c0, truck is driven from airports l1_2 to l1_1, package p2 is unloaded from airplane a1 at airport l0_0, at airport l1_0, package p0 is loaded in truck t2, in city c1, truck is driven from airports l0_0 to l1_2, at airport l1_0, package p3 is loaded in airplane a1, truck t1 is driven from airport l1_1 to airport l1_2 in city c0, package p3 is unloaded from airplane a0 at airport l1_0, in city c0, truck is driven from airports l1_2 to l0_2, in city c0, truck is driven from airports l1_1 to l0_1, in city c1, truck is driven from airports l0_2 to l0_1, package p2 is loaded in truck t1 at airport l1_1, at airport l1_2, package p0 is unloaded from truck t2, from airplane a0 package p3 is unloaded at airport l1_1, from truck t0 package p3 is unloaded at airport l0_0, at airport l1_0, package p1 is unloaded from truck t0, at airport l0_1, package p0 is unloaded from truck t1, airplane a0 is loaded with package p3 at airport l1_1, from truck t2 package p1 is unloaded at airport l0_1, package p3 is loaded in truck t1 at airport l0_0, from truck t1 package p1 is unloaded at airport l0_0, package p2 is loaded in truck t2 at airport l1_2, at airport l0_1, package p2 is loaded in truck t2, at airport l0_0, package p3 is unloaded from airplane a0, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, from truck t0 package p2 is unloaded at airport l1_0, truck t0 is driven from airport l0_0 to airport l1_2 in city c0, from truck t0 package p3 is unloaded at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_2 in city c1, at airport l1_1, package p1 is loaded in airplane a0, truck t1 is driven from airport l1_0 to airport l0_2 in city c1, package p2 is unloaded from airplane a1 at airport l0_1, truck t0 is driven to airport l1_0 from airport l0_2 in city c0, in city c1, truck is driven from airports l1_0 to l1_1, package p0 is unloaded from truck t2 at airport l0_0, from truck t1 package p3 is unloaded at airport l0_0, in city c0, truck is driven from airports l0_1 to l0_2, truck t0 is loaded with package p3 at airport l1_1, at airport l0_2, package p2 is unloaded from truck t2, truck t1 is driven from airport l0_1 to airport l1_2 in city c0, truck t2 is driven from airport l0_0 to airport l1_0 in city c0, truck t2 is driven from airport l0_1 to airport l1_2 in city c0, truck t0 is driven from airport l0_1 to airport l0_0 in city c1, at airport l0_2, package p3 is loaded in truck t2, truck t2 is driven from airport l0_1 to airport l0_2 in city c1, in city c1, truck is driven from airports l0_2 to l1_0, at airport l0_1, package p1 is loaded in truck t0, truck t1 is driven from airport l0_1 to airport l1_2 in city c1, at airport l1_2, package p1 is loaded in truck t2, truck t2 is driven from airport l1_1 to airport l0_1 in city c0, in city c1, truck is driven from airports l1_0 to l0_1, at airport l0_2, package p2 is unloaded from truck t0, truck t1 is driven from airport l0_1 to airport l0_0 in city c0, at airport l0_1, package p3 is loaded in airplane a1, at airport l0_0, package p1 is loaded in truck t0, truck t2 is loaded with package p3 at airport l1_0, truck t0 is driven to airport l0_0 from airport l1_0 in city c1, truck t0 is driven to airport l0_0 from airport l1_1 in city c0, package p1 is unloaded from airplane a0 at airport l0_0, at airport l0_1, package p2 is loaded in airplane a1, at airport l0_1, package p1 is unloaded from truck t0, truck t0 is driven to airport l0_1 from airport l0_0 in city c0, airplane a1 is loaded with package p0 at airport l0_2, at airport l1_2, package p3 is unloaded from airplane a0, from truck t2 package p2 is unloaded at airport l0_1, package p1 is unloaded from airplane a1 at airport l0_0, from airplane a0 package p0 is unloaded at airport l1_1, at airport l1_2, package p2 is loaded in truck t1, in city c0, truck is driven from airports l0_1 to l1_1, at airport l0_0, package p3 is unloaded from airplane a1, from truck t2 package p3 is unloaded at airport l1_2, at airport l1_2, package p0 is unloaded from airplane a0, at airport l1_0, package p0 is unloaded from airplane a0, package p0 is loaded in truck t0 at airport l1_2, package p3 is unloaded from airplane a0 at airport l0_2, at airport l0_0, package p2 is loaded in airplane a1, in city c0, truck is driven from airports l1_0 to l0_2, truck t1 is driven from airport l0_0 to airport l1_1 in city c1, in city c0, truck is driven from airports l1_2 to l0_1, package p0 is unloaded from truck t2 at airport l1_0, at airport l1_0, package p3 is loaded in truck t1, from truck t1 package p2 is unloaded at airport l0_2, truck t2 is loaded with package p0 at airport l1_2, airplane a1 is loaded with package p2 at airport l1_2, at airport l1_2, package p0 is unloaded from truck t1, from airplane a1 package p3 is unloaded at airport l1_0, truck t2 is loaded with package p1 at airport l0_2, truck t1 is driven to airport l1_2 from airport l0_0 in city c0, truck t2 is driven to airport l1_0 from airport l0_1 in city c0, truck t1 is driven to airport l1_1 from airport l0_0 in city c0, from airplane a0 package p0 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_0 to l1_1, in city c1, truck is driven from airports l0_0 to l1_0, truck t1 is driven to airport l0_0 from airport l1_2 in city c0, from truck t0 package p0 is unloaded at airport l0_0, truck t1 is driven to airport l0_1 from airport l1_2 in city c0, in city c1, truck is driven from airports l1_2 to l0_0, truck t2 is driven to airport l1_1 from airport l0_2 in city c0, truck t2 is loaded with package p1 at airport l1_0, at airport l1_0, package p2 is loaded in truck t1, truck t2 is driven from airport l0_2 to airport l1_0 in city c0, truck t2 is driven to airport l1_1 from airport l0_1 in city c1, at airport l1_1, package p3 is unloaded from airplane a1, at airport l1_0, package p2 is unloaded from airplane a0, truck t2 is driven from airport l0_1 to airport l1_1 in city c0, truck t2 is driven to airport l1_0 from airport l0_1 in city c1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, truck t0 is driven from airport l0_2 to airport l1_0 in city c1, package p1 is loaded into airplane a1 at airport l0_0, airplane a0 is loaded with package p1 at airport l0_1, truck t2 is driven from airport l1_2 to airport l0_2 in city c1, at airport l1_2, package p2 is unloaded from truck t2, truck t0 is loaded with package p2 at airport l1_0, airplane a1 is loaded with package p3 at airport l0_0, truck t0 is driven from airport l0_1 to airport l1_2 in city c0, in city c1, truck is driven from airports l0_2 to l1_0, truck t2 is driven from airport l0_2 to airport l1_2 in city c1, in city c0, truck is driven from airports l1_0 to l0_0, from truck t0 package p2 is unloaded at airport l0_1, package p0 is loaded in truck t2 at airport l0_1, at airport l1_0, package p0 is loaded in airplane a0, at airport l1_0, package p0 is unloaded from airplane a1, package p3 is loaded into airplane a0 at airport l0_0, in city c1, truck is driven from airports l1_0 to l0_2, truck t1 is driven from airport l0_2 to airport l1_1 in city c1, truck t1 is driven to airport l0_2 from airport l1_0 in city c0, truck t0 is loaded with package p2 at airport l0_1, package p1 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l0_1 from airport l1_0 in city c1, at airport l0_0, package p3 is unloaded from truck t2, truck t1 is loaded with package p1 at airport l0_1, truck t0 is driven to airport l0_2 from airport l1_1 in city c0, truck t1 is driven from airport l0_2 to airport l0_0 in city c0, package p1 is unloaded from truck t2 at airport l0_0, package p0 is loaded into airplane a1 at airport l1_2, at airport l1_2, package p3 is unloaded from truck t0, at airport l0_2, package p0 is unloaded from truck t2, truck t1 is driven from airport l0_0 to airport l0_1 in city c1, from airplane a1 package p2 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_2 to l0_0, from truck t1 package p2 is unloaded at airport l1_2, at airport l1_1, package p0 is loaded in truck t1, package p1 is unloaded from airplane a0 at airport l1_0, in city c1, truck is driven from airports l1_2 to l0_1, airplane a1 is loaded with package p1 at airport l0_2, truck t2 is driven from airport l0_1 to airport l1_2 in city c1, truck t0 is loaded with package p3 at airport l0_0, package p2 is loaded into airplane a0 at airport l0_0, truck t0 is driven to airport l0_2 from airport l1_0 in city c1, truck t1 is driven to airport l1_0 from airport l1_2 in city c1, truck t0 is driven from airport l1_0 to airport l1_1 in city c0, truck t0 is driven to airport l1_1 from airport l1_0 in city c1, from airplane a0 package p1 is unloaded at airport l0_2, from truck t0 package p0 is unloaded at airport l1_1, in city c0, truck is driven from airports l1_1 to l1_2, truck t0 is driven from airport l1_1 to airport l0_2 in city c1, package p3 is unloaded from truck t2 at airport l1_1, from airplane a1 package p0 is unloaded at airport l1_2, at airport l1_0, package p0 is loaded in truck t1, truck t1 is driven to airport l0_0 from airport l1_0 in city c1, from truck t1 package p2 is unloaded at airport l0_1, in city c0, truck is driven from airports l1_0 to l1_2, package p3 is unloaded from airplane a1 at airport l1_2, airplane a0 is loaded with package p1 at airport l0_0, at airport l1_2, package p0 is unloaded from truck t0, truck t2 is driven from airport l0_2 to airport l1_1 in city c1, in city c0, truck is driven from airports l1_1 to l1_0, in city c1, truck is driven from airports l0_2 to l0_0, airplane a0 is loaded with package p1 at airport l1_2, truck t1 is driven to airport l0_1 from airport l1_1 in city c0, truck t0 is driven to airport l0_0 from airport l0_1 in city c0, truck t2 is driven to airport l1_1 from airport l1_2 in city c1, in city c0, truck is driven from airports l1_2 to l0_2, at airport l1_0, package p0 is loaded in airplane a1, in city c1, truck is driven from airports l1_2 to l1_0, truck t0 is driven from airport l0_1 to airport l0_2 in city c1, truck t1 is loaded with package p2 at airport l0_2, truck t2 is driven from airport l0_2 to airport l0_0 in city c1, from truck t2 package p3 is unloaded at airport l0_2, truck t1 is driven from airport l0_1 to airport l1_0 in city c1, from airplane a0 package p3 is unloaded at airport l0_1, in city c1, truck is driven from airports l1_1 to l0_1, at airport l0_2, package p2 is loaded in airplane a1, truck t2 is loaded with package p1 at airport l0_0, truck t0 is driven from airport l0_0 to airport l0_2 in city c1, truck t1 is loaded with package p0 at airport l0_2, in city c1, truck is driven from airports l0_0 to l0_1, airplane a0 is flown from airport l0_0 to airport l1_0, at airport l1_1, package p1 is unloaded from airplane a1, from truck t2 package p2 is unloaded at airport l1_1, truck t2 is loaded with package p3 at airport l1_1, truck t0 is driven from airport l0_1 to airport l1_1 in city c0, at airport l0_2, package p1 is loaded in truck t1, truck t2 is driven from airport l0_0 to airport l1_1 in city c0, truck t2 is driven to airport l1_0 from airport l1_2 in city c0, truck t1 is driven from airport l0_0 to airport l0_2 in city c1, in city c1, truck is driven from airports l0_0 to l1_2, package p2 is loaded in truck t0 at airport l1_2, truck t0 is driven from airport l1_2 to airport l0_0 in city c0, truck t1 is loaded with package p1 at airport l1_1, package p0 is unloaded from airplane a1 at airport l0_0, truck t2 is driven to airport l0_2 from airport l0_0 in city c1, truck t0 is driven from airport l1_2 to airport l0_2 in city c1, at airport l0_1, package p3 is loaded in truck t0, from truck t0 package p1 is unloaded at airport l0_2, in city c0, truck is driven from airports l0_2 to l1_2, truck t1 is driven from airport l1_1 to airport l0_0 in city c0, at airport l0_1, package p3 is unloaded from truck t0, package p2 is unloaded from airplane a0 at airport l0_2, at airport l1_0, package p3 is unloaded from truck t2, at airport l0_0, package p3 is loaded in truck t2, from truck t1 package p1 is unloaded at airport l0_1, truck t2 is loaded with package p0 at airport l0_2, truck t2 is driven to airport l1_0 from airport l1_1 in city c1, truck t1 is driven from airport l0_2 to airport l1_2 in city c0, airplane a1 is loaded with package p2 at airport l1_0, in city c0, truck is driven from airports l0_0 to l1_2, truck t1 is loaded with package p2 at airport l0_0, from truck t1 package p0 is unloaded at airport l1_1, at airport l0_0, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l0_1, package p1 is loaded in truck t0 at airport l0_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c0, truck t0 is driven from airport l0_2 to airport l0_1 in city c1, package p1 is unloaded from truck t1 at airport l0_2, package p1 is unloaded from truck t2 at airport l0_2, truck t1 is loaded with package p1 at airport l0_0, truck t1 is loaded with package p2 at airport l0_1, at airport l1_1, package p0 is unloaded from truck t2, at airport l1_2, package p1 is loaded in airplane a1, at airport l1_2, package p3 is unloaded from truck t1, from truck t0 package p2 is unloaded at airport l1_1, truck t1 is driven to airport l1_0 from airport l0_2 in city c0, package p3 is loaded in truck t2 at airport l0_1, package p0 is loaded in truck t2 at airport l0_0, at airport l1_0, package p1 is loaded in truck t0, truck t1 is driven from airport l0_1 to airport l0_0 in city c1, package p3 is unloaded from truck t2 at airport l0_1, package p0 is loaded into airplane a1 at airport l0_1, package p3 is loaded into airplane a1 at airport l1_2, at airport l1_2, package p3 is loaded in truck t0, in city c1, truck is driven from airports l0_1 to l1_1, truck t2 is driven from airport l0_1 to airport l0_0 in city c1, at airport l0_2, package p0 is unloaded from airplane a1, truck t0 is driven to airport l1_0 from airport l0_1 in city c0, package p2 is loaded in truck t0 at airport l1_1, package p2 is loaded in truck t2 at airport l0_0, in city c1, truck is driven from airports l0_0 to l1_2, truck t1 is driven to airport l0_1 from airport l1_2 in city c1, from truck t0 package p1 is unloaded at airport l1_1, in city c0, truck is driven from airports l0_0 to l0_1, at airport l1_1, package p1 is loaded in truck t0, at airport l1_0, package p0 is loaded in truck t0, in city c1, truck is driven from airports l1_2 to l0_1, truck t2 is driven to airport l0_0 from airport l1_1 in city c0, truck t2 is loaded with package p1 at airport l1_1, truck t2 is driven from airport l1_1 to airport l1_2 in city c1, package p1 is unloaded from truck t2 at airport l1_1, from truck t0 package p0 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_1 to l1_0, truck t2 is loaded with package p0 at airport l1_1, in city c0, truck is driven from airports l1_0 to l1_1, truck t1 is driven from airport l1_1 to airport l0_0 in city c1, in city c1, truck is driven from airports l1_0 to l1_2, truck t2 is driven to airport l0_0 from airport l1_2 in city c0, truck t1 is driven to airport l1_0 from airport l1_1 in city c0, package p0 is unloaded from airplane a1 at airport l1_1, package p1 is loaded into airplane a0 at airport l0_2, package p0 is loaded in truck t0 at airport l0_1, truck t1 is loaded with package p3 at airport l0_1, package p3 is unloaded from truck t1 at airport l0_2, from truck t0 package p1 is unloaded at airport l1_2, in city c1, truck is driven from airports l1_2 to l0_2, at airport l0_2, package p1 is unloaded from airplane a1, from airplane a1 package p3 is unloaded at airport l0_2, in city c0, truck is driven from airports l1_0 to l1_1, at airport l1_2, package p2 is loaded in airplane a0, package p2 is unloaded from truck t1 at airport l0_0, truck t0 is driven to airport l1_1 from airport l0_0 in city c1, airplane a1 flies from airports l0_0 to l1_0, at airport l0_0, package p1 is unloaded from truck t0, truck t2 is driven to airport l0_1 from airport l0_0 in city c1, at airport l0_1, package p0 is unloaded from truck t2, truck t0 is driven from airport l0_0 to airport l1_1 in city c0, truck t2 is driven from airport l1_0 to airport l0_1 in city c0, package p0 is loaded in truck t0 at airport l0_0, truck t0 is driven from airport l1_1 to airport l1_0 in city c1, in city c1, truck is driven from airports l1_1 to l0_0, airplane a0 is loaded with package p2 at airport l0_1, from airplane a1 package p1 is unloaded at airport l1_0, at airport l1_1, package p1 is unloaded from truck t1, from airplane a1 package p0 is unloaded at airport l0_1, in city c0, truck is driven from airports l1_2 to l1_0, truck t0 is driven from airport l1_0 to airport l1_2 in city c0, package p1 is unloaded from airplane a1 at airport l0_1, package p3 is loaded into airplane a0 at airport l1_2, truck t2 is driven to airport l0_0 from airport l1_1 in city c1, at airport l1_2, package p0 is loaded in airplane a0, at airport l0_0, package p2 is unloaded from truck t0, in city c1, truck is driven from airports l0_0 to l1_0, at airport l0_2, package p2 is loaded in truck t2, at airport l0_1, package p2 is unloaded from airplane a0, from airplane a1 package p2 is unloaded at airport l1_2, at airport l1_2, package p1 is loaded in truck t0, truck t0 is driven to airport l1_1 from airport l0_2 in city c1, at airport l1_0, package p2 is unloaded from airplane a1, package p2 is loaded into airplane a0 at airport l1_1, in city c1, truck is driven from airports l1_1 to l0_2, package p0 is unloaded from airplane a0 at airport l0_0, truck t1 is driven from airport l0_0 to airport l0_2 in city c0, truck t0 is driven to airport l0_2 from airport l0_0 in city c0, from airplane a0 package p1 is unloaded at airport l0_1, at airport l1_0, package p3 is unloaded from truck t0, truck t1 is loaded with package p3 at airport l0_2, package p2 is loaded into airplane a0 at airport l1_0, truck t1 is loaded with package p3 at airport l1_2, from truck t0 package p2 is unloaded at airport l1_2, at airport l0_0, package p0 is unloaded from truck t1, package p1 is loaded into airplane a1 at airport l0_1, from truck t2 package p2 is unloaded at airport l1_0, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is driven to airport l0_1 from airport l0_2 in city c1, truck t1 is loaded with package p3 at airport l1_1, truck t1 is driven from airport l0_0 to airport l1_0 in city c1, from truck t2 package p1 is unloaded at airport l1_2, truck t1 is driven from airport l0_2 to airport l1_2 in city c1, truck t2 is driven to airport l0_1 from airport l0_0 in city c0, from truck t1 package p2 is unloaded at airport l1_0, in city c0, truck is driven from airports l1_2 to l1_1, truck t2 is driven from airport l1_0 to airport l0_0 in city c1, truck t1 is driven from airport l0_1 to airport l1_0 in city c0, at airport l1_1, package p2 is loaded in airplane a1, at airport l1_1, package p3 is loaded in airplane a1, truck t1 is driven to airport l0_2 from airport l0_1 in city c1, truck t1 is driven to airport l1_1 from airport l0_1 in city c1, in city c0, truck is driven from airports l1_0 to l0_2, truck t0 is driven to airport l1_2 from airport l1_1 in city c0, airplane a0 is loaded with package p3 at airport l0_1, at airport l1_0, package p3 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l0_2, in city c0, truck is driven from airports l1_2 to l1_0, from truck t2 package p1 is unloaded at airport l1_0, truck t2 is driven from airport l1_0 to airport l1_2 in city c0, truck t0 is driven from airport l1_1 to airport l0_1 in city c1, truck t2 is driven from airport l0_2 to airport l1_2 in city c0, truck t0 is driven to airport l1_0 from airport l1_2 in city c1, in city c0, truck is driven from airports l0_2 to l0_0, truck t2 is driven to airport l0_2 from airport l0_0 in city c0, truck t0 is driven to airport l0_0 from airport l1_2 in city c1, truck t0 is driven to airport l1_0 from airport l0_0 in city c0, truck t1 is driven from airport l0_2 to airport l1_1 in city c0, package p2 is unloaded from truck t1 at airport l1_1, truck t0 is driven to airport l0_2 from airport l1_2 in city c0, truck t0 is driven to airport l1_0 from airport l1_1 in city c0, in city c1, truck is driven from airports l0_1 to l1_2, truck t2 is driven from airport l1_0 to airport l0_1 in city c1, from airplane a1 package p1 is unloaded at airport l1_2, truck t2 is driven to airport l0_1 from airport l0_2 in city c0, truck t1 is driven from airport l0_0 to airport l1_0 in city c0, from truck t1 package p3 is unloaded at airport l0_1, package p1 is loaded in truck t2 at airport l0_1, in city c1, truck is driven from airports l1_1 to l1_2, airplane a0 is loaded with package p0 at airport l0_2, package p1 is unloaded from truck t1 at airport l1_0, truck t0 is driven to airport l0_1 from airport l1_0 in city c0, at airport l0_0, package p2 is unloaded from truck t2, truck t2 is driven from airport l1_1 to airport l0_2 in city c0 and airplane a0 is loaded with package p0 at airport l1_1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1deb46e1-9890-4f9d-8ded-405ba766fd83", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_0, package p0 is unloaded from truck t1, from truck t0 package p2 is unloaded at airport l0_0, from truck t1 package p1 is unloaded at airport l1_0, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p3 at airport l0_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, truck t1 is loaded with package p0 at airport l1_2 and truck t1 is loaded with package p1 at airport l1_1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b6a91826-8952-47dd-88e5-b95a2e68f9da", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l0_0, package p2 is unloaded from truck t0, from truck t1 package p0 is unloaded at airport l1_0, from truck t1 package p1 is unloaded at airport l1_0, in city c0, truck is driven from airports l0_2 to l0_0, package p1 is loaded in truck t2 at airport l0_1, package p2 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p3 at airport l0_2, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1 and truck t1 is loaded with package p0 at airport l1_2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6533553b-2e99-47eb-94fd-a6ee07b0d56c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0. Is the action: in city c1, truck is driven from airports l1_1 to l1_0 executable at step 4, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d8f5f84f-cdad-42aa-bc64-9bb28a270ebb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t2 is loaded with package p2 at airport l0_1, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0. Is the action: truck t2 is loaded with package p2 at airport l0_1 executable at step 7, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f230f26d-25bf-462d-8106-76baad9768a4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "208fe09a-95ef-460b-a203-eaae959ac002", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t1 is driven from airport l0_2 to airport l0_1 in city c1, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "truck t1 is driven to airport l0_1 from airport l0_2 in city c1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "36e7655d-8e3d-4922-8355-5dc1af9b0a60", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "truck t0 is loaded with package p2 at airport l0_0, airplane a0 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p3 is unloaded from truck t0, airplane a1 is flown from airport l1_0 to airport l0_0, truck t0 is driven from airport l0_0 to airport l0_1 in city c0, airplane a0 is loaded with package p0 at airport l1_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded in truck t1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, truck t1 is driven to airport l1_2 from airport l1_0 in city c1, truck t2 is driven to airport l0_0 from airport l0_1 in city c0, at airport l1_0, package p1 is loaded in truck t1, package p1 is loaded into airplane a0 at airport l1_0, in city c1, truck is driven from airports l1_0 to l1_1, in city c0, truck is driven from airports l0_0 to l0_2 and truck t2 is driven to airport l0_2 from airport l0_1 in city c0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "78fd1d8a-42dd-423a-8fe6-6c4e1df4546d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "truck t2 is driven from airport l1_2 to airport l0_1 in city c0, from truck t1 package p1 is unloaded at airport l1_2, package p3 is unloaded from airplane a1 at airport l0_1, truck t1 is loaded with package p0 at airport l1_2, package p3 is loaded into airplane a0 at airport l1_0, at airport l0_1, package p0 is loaded in airplane a0, package p3 is unloaded from truck t0 at airport l0_2, package p0 is loaded into airplane a1 at airport l1_1, from airplane a0 package p1 is unloaded at airport l1_2, from truck t0 package p0 is unloaded at airport l0_1, at airport l1_0, package p2 is loaded in truck t2, at airport l1_1, package p0 is loaded in truck t0, in city c0, truck is driven from airports l1_1 to l0_2, from airplane a0 package p1 is unloaded at airport l1_1, truck t1 is driven from airport l0_1 to airport l0_2 in city c0, in city c0, truck is driven from airports l1_0 to l0_0, package p3 is loaded into airplane a1 at airport l0_2, at airport l1_1, package p1 is loaded in airplane a1, at airport l1_2, package p2 is unloaded from airplane a0, truck t2 is driven to airport l0_0 from airport l1_2 in city c1, from airplane a0 package p0 is unloaded at airport l0_1, package p2 is unloaded from airplane a0 at airport l1_1, truck t0 is driven from airport l1_0 to airport l0_0 in city c0, in city c1, truck is driven from airports l0_2 to l1_2, at airport l1_1, package p3 is unloaded from truck t1, truck t0 is driven from airport l0_2 to airport l1_1 in city c0, truck t1 is driven from airport l0_2 to airport l0_1 in city c0, package p3 is loaded into airplane a0 at airport l0_2, from airplane a1 package p2 is unloaded at airport l1_1, airplane a1 is loaded with package p0 at airport l0_0, package p0 is loaded into airplane a0 at airport l0_0, at airport l1_1, package p2 is loaded in truck t2, truck t1 is driven to airport l0_1 from airport l1_0 in city c0, at airport l0_2, package p2 is loaded in airplane a0, at airport l0_1, package p0 is loaded in truck t1, at airport l0_0, package p2 is unloaded from airplane a0, truck t2 is loaded with package p3 at airport l1_2, truck t2 is driven from airport l1_0 to airport l1_2 in city c1, package p0 is unloaded from truck t0 at airport l1_0, at airport l1_0, package p3 is loaded in truck t0, package p0 is loaded in truck t0 at airport l0_2, in city c1, truck is driven from airports l1_1 to l0_2, in city c0, truck is driven from airports l1_2 to l1_1, from airplane a1 package p2 is unloaded at airport l0_0, at airport l1_0, package p0 is loaded in truck t2, in city c1, truck is driven from airports l0_0 to l1_2, at airport l1_0, package p3 is loaded in airplane a1, in city c0, truck is driven from airports l1_1 to l1_2, package p3 is unloaded from airplane a0 at airport l1_0, in city c0, truck is driven from airports l1_2 to l0_2, in city c0, truck is driven from airports l1_1 to l0_1, truck t2 is driven to airport l0_1 from airport l0_2 in city c1, truck t1 is loaded with package p2 at airport l1_1, package p0 is unloaded from truck t2 at airport l1_2, package p3 is unloaded from airplane a0 at airport l1_1, package p1 is unloaded from truck t0 at airport l1_0, package p0 is unloaded from truck t1 at airport l0_1, package p3 is loaded into airplane a0 at airport l1_1, at airport l0_1, package p1 is unloaded from truck t2, at airport l0_0, package p3 is loaded in truck t1, at airport l0_0, package p1 is unloaded from truck t1, truck t2 is loaded with package p2 at airport l1_2, truck t2 is loaded with package p2 at airport l0_1, package p3 is unloaded from airplane a0 at airport l0_0, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, from truck t0 package p2 is unloaded at airport l1_0, in city c0, truck is driven from airports l0_0 to l1_2, package p3 is unloaded from truck t0 at airport l1_1, truck t1 is driven to airport l1_2 from airport l1_1 in city c1, at airport l1_1, package p1 is loaded in airplane a0, truck t1 is driven to airport l0_2 from airport l1_0 in city c1, at airport l0_1, package p2 is unloaded from airplane a1, truck t0 is driven to airport l1_0 from airport l0_2 in city c0, in city c1, truck is driven from airports l1_0 to l1_1, at airport l0_0, package p0 is unloaded from truck t2, from truck t1 package p3 is unloaded at airport l0_0, truck t0 is driven to airport l0_2 from airport l0_1 in city c0, package p3 is loaded in truck t0 at airport l1_1, from truck t2 package p2 is unloaded at airport l0_2, in city c0, truck is driven from airports l0_1 to l1_2, in city c0, truck is driven from airports l0_0 to l1_0, truck t2 is driven from airport l0_1 to airport l1_2 in city c0, truck t0 is driven to airport l0_0 from airport l0_1 in city c1, package p3 is loaded in truck t2 at airport l0_2, truck t2 is driven from airport l0_1 to airport l0_2 in city c1, in city c1, truck is driven from airports l0_2 to l1_0, package p1 is loaded in truck t0 at airport l0_1, truck t1 is driven to airport l1_2 from airport l0_1 in city c1, truck t2 is loaded with package p1 at airport l1_2, in city c0, truck is driven from airports l1_1 to l0_1, truck t0 is driven from airport l1_0 to airport l0_1 in city c1, at airport l0_2, package p2 is unloaded from truck t0, in city c0, truck is driven from airports l0_1 to l0_0, at airport l0_1, package p3 is loaded in airplane a1, package p1 is loaded in truck t0 at airport l0_0, truck t2 is loaded with package p3 at airport l1_0, truck t0 is driven to airport l0_0 from airport l1_0 in city c1, truck t0 is driven from airport l1_1 to airport l0_0 in city c0, package p1 is unloaded from airplane a0 at airport l0_0, airplane a1 is loaded with package p2 at airport l0_1, at airport l0_1, package p1 is unloaded from truck t0, package p0 is loaded into airplane a1 at airport l0_2, at airport l1_2, package p3 is unloaded from airplane a0, from truck t2 package p2 is unloaded at airport l0_1, at airport l0_0, package p1 is unloaded from airplane a1, from airplane a0 package p0 is unloaded at airport l1_1, package p2 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l0_1 in city c0, package p3 is unloaded from airplane a1 at airport l0_0, from truck t2 package p3 is unloaded at airport l1_2, at airport l1_2, package p0 is unloaded from airplane a0, at airport l1_0, package p0 is unloaded from airplane a0, package p0 is loaded in truck t0 at airport l1_2, at airport l0_2, package p3 is unloaded from airplane a0, airplane a1 is loaded with package p2 at airport l0_0, truck t0 is driven to airport l0_2 from airport l1_0 in city c0, truck t1 is driven to airport l1_1 from airport l0_0 in city c1, in city c0, truck is driven from airports l1_2 to l0_1, at airport l1_0, package p0 is unloaded from truck t2, package p3 is loaded in truck t1 at airport l1_0, at airport l0_2, package p2 is unloaded from truck t1, package p0 is loaded in truck t2 at airport l1_2, airplane a1 is loaded with package p2 at airport l1_2, at airport l1_2, package p0 is unloaded from truck t1, package p3 is unloaded from airplane a1 at airport l1_0, at airport l0_2, package p1 is loaded in truck t2, truck t1 is driven to airport l1_2 from airport l0_0 in city c0, truck t2 is driven to airport l1_0 from airport l0_1 in city c0, in city c0, truck is driven from airports l0_0 to l1_1, package p0 is unloaded from airplane a0 at airport l0_2, truck t2 is driven from airport l0_0 to airport l1_1 in city c1, in city c1, truck is driven from airports l0_0 to l1_0, truck t1 is driven to airport l0_0 from airport l1_2 in city c0, from truck t0 package p0 is unloaded at airport l0_0, truck t1 is driven from airport l1_2 to airport l0_1 in city c0, truck t1 is driven to airport l0_0 from airport l1_2 in city c1, truck t2 is driven from airport l0_2 to airport l1_1 in city c0, package p1 is loaded in truck t2 at airport l1_0, at airport l1_0, package p2 is loaded in truck t1, truck t2 is driven to airport l1_0 from airport l0_2 in city c0, truck t2 is driven to airport l1_1 from airport l0_1 in city c1, at airport l1_1, package p3 is unloaded from airplane a1, at airport l1_0, package p2 is unloaded from airplane a0, truck t2 is driven from airport l0_1 to airport l1_1 in city c0, truck t2 is driven to airport l1_0 from airport l0_1 in city c1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, in city c1, truck is driven from airports l0_2 to l1_0, package p1 is loaded into airplane a1 at airport l0_0, airplane a0 is loaded with package p1 at airport l0_1, in city c1, truck is driven from airports l1_2 to l0_2, package p2 is unloaded from truck t2 at airport l1_2, at airport l1_0, package p2 is loaded in truck t0, at airport l0_0, package p3 is loaded in airplane a1, truck t0 is driven from airport l0_1 to airport l1_2 in city c0, truck t1 is driven to airport l1_0 from airport l0_2 in city c1, truck t2 is driven to airport l1_2 from airport l0_2 in city c1, in city c0, truck is driven from airports l1_0 to l0_0, from truck t0 package p2 is unloaded at airport l0_1, package p0 is loaded in truck t2 at airport l0_1, package p0 is unloaded from airplane a1 at airport l1_0, package p3 is loaded into airplane a0 at airport l0_0, in city c1, truck is driven from airports l1_0 to l0_2, truck t1 is driven to airport l1_1 from airport l0_2 in city c1, truck t1 is driven to airport l0_2 from airport l1_0 in city c0, at airport l0_1, package p2 is loaded in truck t0, package p1 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_0 to l0_1, at airport l0_0, package p3 is unloaded from truck t2, truck t1 is loaded with package p1 at airport l0_1, in city c0, truck is driven from airports l1_1 to l0_2, truck t1 is driven to airport l0_0 from airport l0_2 in city c0, package p1 is unloaded from truck t2 at airport l0_0, airplane a1 is loaded with package p0 at airport l1_2, at airport l1_2, package p3 is unloaded from truck t0, from truck t2 package p0 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_0 to l0_1, from airplane a1 package p2 is unloaded at airport l0_2, truck t1 is driven to airport l0_0 from airport l0_2 in city c1, package p2 is unloaded from truck t1 at airport l1_2, truck t1 is loaded with package p0 at airport l1_1, package p1 is unloaded from airplane a0 at airport l1_0, truck t2 is driven from airport l1_2 to airport l0_1 in city c1, package p1 is loaded into airplane a1 at airport l0_2, in city c1, truck is driven from airports l0_1 to l1_2, at airport l0_0, package p3 is loaded in truck t0, at airport l0_0, package p2 is loaded in airplane a0, truck t0 is driven to airport l0_2 from airport l1_0 in city c1, truck t1 is driven to airport l1_0 from airport l1_2 in city c1, in city c0, truck is driven from airports l1_0 to l1_1, truck t0 is driven from airport l1_0 to airport l1_1 in city c1, package p1 is unloaded from airplane a0 at airport l0_2, from truck t0 package p0 is unloaded at airport l1_1, truck t2 is driven to airport l1_2 from airport l1_1 in city c0, truck t0 is driven to airport l0_2 from airport l1_1 in city c1, at airport l1_1, package p3 is unloaded from truck t2, from airplane a1 package p0 is unloaded at airport l1_2, truck t1 is driven to airport l0_0 from airport l1_0 in city c1, at airport l0_1, package p2 is unloaded from truck t1, truck t1 is driven from airport l1_0 to airport l1_2 in city c0, package p3 is unloaded from airplane a1 at airport l1_2, package p1 is loaded into airplane a0 at airport l0_0, at airport l1_2, package p0 is unloaded from truck t0, truck t2 is driven from airport l0_2 to airport l1_1 in city c1, in city c0, truck is driven from airports l1_1 to l1_0, truck t0 is driven from airport l0_2 to airport l0_0 in city c1, package p1 is loaded into airplane a0 at airport l1_2, truck t1 is driven from airport l1_1 to airport l0_1 in city c0, truck t0 is driven to airport l0_0 from airport l0_1 in city c0, truck t2 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is driven from airport l1_2 to airport l0_2 in city c0, truck t2 is driven from airport l1_2 to airport l1_0 in city c1, truck t0 is driven from airport l0_1 to airport l0_2 in city c1, package p2 is loaded in truck t1 at airport l0_2, in city c1, truck is driven from airports l0_2 to l0_0, package p3 is unloaded from truck t2 at airport l0_2, in city c1, truck is driven from airports l0_1 to l1_0, from airplane a0 package p3 is unloaded at airport l0_1, truck t2 is driven from airport l1_1 to airport l0_1 in city c1, airplane a1 is loaded with package p2 at airport l0_2, at airport l0_0, package p1 is loaded in truck t2, truck t0 is driven to airport l0_2 from airport l0_0 in city c1, at airport l0_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l0_0 to l0_1, airplane a0 flies from airports l0_0 to l1_0, at airport l1_1, package p1 is unloaded from airplane a1, at airport l1_1, package p2 is unloaded from truck t2, at airport l1_1, package p3 is loaded in truck t2, in city c0, truck is driven from airports l0_1 to l1_1, truck t1 is loaded with package p1 at airport l0_2, in city c0, truck is driven from airports l0_0 to l1_1, truck t2 is driven from airport l1_2 to airport l1_0 in city c0, truck t1 is driven to airport l0_2 from airport l0_0 in city c1, truck t1 is driven from airport l0_0 to airport l1_2 in city c1, package p2 is loaded in truck t0 at airport l1_2, truck t0 is driven from airport l1_2 to airport l0_0 in city c0, truck t1 is loaded with package p1 at airport l1_1, from airplane a1 package p0 is unloaded at airport l0_0, truck t2 is driven to airport l0_2 from airport l0_0 in city c1, truck t0 is driven from airport l1_2 to airport l0_2 in city c1, at airport l0_1, package p3 is loaded in truck t0, package p1 is unloaded from truck t0 at airport l0_2, truck t0 is driven to airport l1_2 from airport l0_2 in city c0, in city c0, truck is driven from airports l1_1 to l0_0, package p3 is unloaded from truck t0 at airport l0_1, from airplane a0 package p2 is unloaded at airport l0_2, from truck t2 package p3 is unloaded at airport l1_0, package p3 is loaded in truck t2 at airport l0_0, at airport l0_1, package p1 is unloaded from truck t1, truck t2 is loaded with package p0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, in city c1, truck is driven from airports l1_1 to l1_0, truck t1 is driven from airport l0_2 to airport l1_2 in city c0, airplane a1 is loaded with package p2 at airport l1_0, truck t2 is driven from airport l0_0 to airport l1_2 in city c0, package p2 is loaded in truck t1 at airport l0_0, at airport l1_1, package p0 is unloaded from truck t1, package p0 is loaded in truck t1 at airport l0_0, truck t1 is driven from airport l1_1 to airport l0_1 in city c1, truck t0 is loaded with package p1 at airport l0_2, in city c0, truck is driven from airports l1_2 to l1_1, truck t0 is driven from airport l0_2 to airport l0_1 in city c1, from truck t1 package p1 is unloaded at airport l0_2, at airport l0_2, package p1 is unloaded from truck t2, package p1 is loaded in truck t1 at airport l0_0, truck t1 is loaded with package p2 at airport l0_1, from truck t2 package p0 is unloaded at airport l1_1, at airport l1_2, package p1 is loaded in airplane a1, package p3 is unloaded from truck t1 at airport l1_2, from truck t0 package p2 is unloaded at airport l1_1, truck t1 is driven to airport l1_0 from airport l0_2 in city c0, truck t2 is loaded with package p3 at airport l0_1, truck t2 is loaded with package p0 at airport l0_0, package p1 is loaded in truck t0 at airport l1_0, truck t1 is driven from airport l0_1 to airport l0_0 in city c1, from truck t2 package p3 is unloaded at airport l0_1, at airport l0_1, package p0 is loaded in airplane a1, at airport l1_2, package p3 is loaded in airplane a1, at airport l1_2, package p3 is loaded in truck t0, truck t0 is driven from airport l0_1 to airport l1_1 in city c1, truck t2 is driven to airport l0_0 from airport l0_1 in city c1, at airport l0_2, package p0 is unloaded from airplane a1, truck t0 is driven to airport l1_0 from airport l0_1 in city c0, truck t0 is loaded with package p2 at airport l1_1, truck t2 is loaded with package p2 at airport l0_0, truck t2 is driven to airport l1_2 from airport l0_0 in city c1, truck t1 is driven from airport l1_2 to airport l0_1 in city c1, package p1 is unloaded from truck t0 at airport l1_1, truck t1 is driven to airport l0_1 from airport l0_0 in city c0, at airport l1_1, package p1 is loaded in truck t0, package p0 is loaded in truck t0 at airport l1_0, in city c1, truck is driven from airports l1_2 to l0_1, in city c0, truck is driven from airports l1_1 to l0_0, package p1 is loaded in truck t2 at airport l1_1, truck t2 is driven to airport l1_2 from airport l1_1 in city c1, from truck t2 package p1 is unloaded at airport l1_1, package p0 is unloaded from truck t0 at airport l0_2, in city c1, truck is driven from airports l0_1 to l1_0, at airport l1_1, package p0 is loaded in truck t2, truck t1 is driven to airport l1_1 from airport l1_0 in city c0, in city c1, truck is driven from airports l1_1 to l0_0, in city c1, truck is driven from airports l1_0 to l1_2, truck t2 is driven to airport l0_0 from airport l1_2 in city c0, in city c0, truck is driven from airports l1_1 to l1_0, package p0 is unloaded from airplane a1 at airport l1_1, airplane a0 is loaded with package p1 at airport l0_2, at airport l0_1, package p0 is loaded in truck t0, at airport l0_1, package p3 is loaded in truck t1, package p3 is unloaded from truck t1 at airport l0_2, at airport l1_2, package p1 is unloaded from truck t0, truck t1 is driven from airport l1_2 to airport l0_2 in city c1, package p1 is unloaded from airplane a1 at airport l0_2, at airport l0_2, package p3 is unloaded from airplane a1, in city c0, truck is driven from airports l1_0 to l1_1, at airport l1_2, package p2 is loaded in airplane a0, from truck t1 package p2 is unloaded at airport l0_0, truck t0 is driven from airport l0_0 to airport l1_1 in city c1, airplane a1 is flown from airport l0_0 to airport l1_0, at airport l0_0, package p1 is unloaded from truck t0, truck t2 is driven from airport l0_0 to airport l0_1 in city c1, from truck t2 package p0 is unloaded at airport l0_1, truck t0 is driven from airport l0_0 to airport l1_1 in city c0, truck t2 is driven to airport l0_1 from airport l1_0 in city c0, truck t0 is loaded with package p0 at airport l0_0, in city c1, truck is driven from airports l1_1 to l1_0, in city c1, truck is driven from airports l1_1 to l0_0, at airport l0_1, package p2 is loaded in airplane a0, at airport l1_0, package p1 is unloaded from airplane a1, at airport l1_1, package p1 is unloaded from truck t1, at airport l0_1, package p0 is unloaded from airplane a1, truck t1 is driven to airport l1_0 from airport l1_2 in city c0, truck t0 is driven to airport l1_2 from airport l1_0 in city c0, at airport l0_1, package p1 is unloaded from airplane a1, package p3 is loaded into airplane a0 at airport l1_2, truck t2 is driven to airport l0_0 from airport l1_1 in city c1, at airport l1_2, package p0 is loaded in airplane a0, package p2 is unloaded from truck t0 at airport l0_0, truck t2 is driven to airport l1_0 from airport l0_0 in city c1, truck t2 is loaded with package p2 at airport l0_2, package p2 is unloaded from airplane a0 at airport l0_1, package p2 is unloaded from airplane a1 at airport l1_2, truck t0 is loaded with package p1 at airport l1_2, truck t0 is driven to airport l1_1 from airport l0_2 in city c1, from airplane a1 package p2 is unloaded at airport l1_0, at airport l1_1, package p2 is loaded in airplane a0, truck t2 is driven from airport l1_1 to airport l0_2 in city c1, from airplane a0 package p0 is unloaded at airport l0_0, in city c0, truck is driven from airports l0_0 to l0_2, from airplane a0 package p1 is unloaded at airport l0_1, from truck t0 package p3 is unloaded at airport l1_0, package p3 is loaded in truck t1 at airport l0_2, at airport l1_0, package p2 is loaded in airplane a0, package p3 is loaded in truck t1 at airport l1_2, package p2 is unloaded from truck t0 at airport l1_2, at airport l0_0, package p0 is unloaded from truck t1, package p1 is loaded into airplane a1 at airport l0_1, at airport l1_0, package p2 is unloaded from truck t2, truck t0 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is driven from airport l0_2 to airport l0_1 in city c1, truck t1 is loaded with package p3 at airport l1_1, package p3 is loaded in truck t0 at airport l0_2, truck t1 is driven to airport l1_0 from airport l0_0 in city c1, from truck t2 package p1 is unloaded at airport l1_2, in city c1, truck is driven from airports l0_2 to l1_2, truck t2 is driven from airport l0_0 to airport l0_1 in city c0, from truck t1 package p2 is unloaded at airport l1_0, in city c0, truck is driven from airports l1_2 to l1_1, truck t2 is driven to airport l0_0 from airport l1_0 in city c1, truck t1 is driven from airport l0_1 to airport l1_0 in city c0, at airport l1_1, package p2 is loaded in airplane a1, airplane a1 is loaded with package p3 at airport l1_1, truck t1 is driven from airport l0_1 to airport l0_2 in city c1, in city c1, truck is driven from airports l0_1 to l1_1, truck t2 is driven to airport l0_2 from airport l1_0 in city c0, truck t0 is driven from airport l1_1 to airport l1_2 in city c0, package p3 is loaded into airplane a0 at airport l0_1, truck t0 is loaded with package p2 at airport l0_2, package p3 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l0_2, truck t0 is driven to airport l1_0 from airport l1_2 in city c0, at airport l1_0, package p1 is unloaded from truck t2, truck t2 is driven from airport l1_0 to airport l1_2 in city c0, in city c0, truck is driven from airports l0_2 to l0_1, truck t0 is driven to airport l0_1 from airport l1_1 in city c1, truck t2 is driven from airport l0_2 to airport l1_2 in city c0, in city c1, truck is driven from airports l1_2 to l1_0, in city c0, truck is driven from airports l0_2 to l0_0, in city c0, truck is driven from airports l0_0 to l0_2, in city c1, truck is driven from airports l1_2 to l0_0, truck t0 is driven to airport l1_0 from airport l0_0 in city c0, truck t1 is driven to airport l1_1 from airport l0_2 in city c0, package p2 is unloaded from truck t1 at airport l1_1, in city c0, truck is driven from airports l1_2 to l0_2, truck t0 is driven to airport l1_0 from airport l1_1 in city c0, in city c1, truck is driven from airports l0_1 to l1_2, truck t2 is driven to airport l0_1 from airport l1_0 in city c1, from airplane a1 package p1 is unloaded at airport l1_2, in city c0, truck is driven from airports l0_2 to l0_1, package p0 is unloaded from truck t1 at airport l1_0, truck t1 is driven to airport l1_0 from airport l0_0 in city c0, package p3 is unloaded from truck t1 at airport l0_1, truck t2 is loaded with package p1 at airport l0_1, in city c1, truck is driven from airports l1_1 to l1_2, at airport l0_2, package p0 is loaded in airplane a0, at airport l1_0, package p1 is unloaded from truck t1, truck t0 is driven from airport l1_0 to airport l0_1 in city c0, from truck t2 package p2 is unloaded at airport l0_0, truck t2 is driven from airport l1_1 to airport l0_2 in city c0 and package p0 is loaded into airplane a0 at airport l1_1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a321f1b0-95f9-451f-802a-34a05120d56d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_2, package p2 is loaded in truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p1 is unloaded from truck t1, from truck t0 package p2 is unloaded at airport l0_0, from truck t1 package p0 is unloaded at airport l1_0, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, package p1 is unloaded from airplane a1 at airport l0_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and truck t1 is loaded with package p0 at airport l1_2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "20c37ed8-2bdc-43ad-a81f-384db2b5aa70", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_2, package p2 is loaded in truck t0, at airport l0_2, package p3 is loaded in truck t0, at airport l1_0, package p0 is loaded in airplane a1, at airport l1_0, package p0 is unloaded from truck t1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_1, package p1 is loaded in truck t1, from truck t0 package p2 is unloaded at airport l0_0, package p0 is loaded in truck t1 at airport l1_2, package p1 is loaded into airplane a1 at airport l1_1, package p1 is unloaded from airplane a1 at airport l0_0, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and truck t1 is driven to airport l1_1 from airport l1_2 in city c1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5508d7d5-b329-4640-9ab8-4c0fc8d816f7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0. Is the action: truck t0 is loaded with package p2 at airport l0_2 executable at step 8, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ffd20e84-7f65-4964-99f8-2a9347cbea0e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l1_0, package p0 is unloaded from truck t1 and from airplane a1 package p1 is unloaded at airport l0_0. Is the action: from truck t1 package p0 is unloaded at airport l1_0 executable at step 14, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e24db48e-9a65-49a6-9d84-66ee5cfca26e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f27ac6c6-1884-47a3-a3e2-1687f76a21a3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_1, package p1 is unloaded from truck t2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "at airport l0_1, package p1 is unloaded from truck t2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "41cb2da5-f639-4b29-8ea5-8a0994af9885", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "from airplane a1 package p2 is unloaded at airport l0_0, airplane a0 flies from airports l1_0 to l0_0, from truck t0 package p3 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, truck t0 is driven to airport l0_1 from airport l0_0 in city c0, airplane a1 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t1 is driven from airport l1_0 to airport l1_2 in city c1, truck t2 is driven to airport l0_0 from airport l0_1 in city c0, airplane a1 is flown from airport l0_0 to airport l1_0, truck t1 is driven to airport l1_1 from airport l1_0 in city c1, truck t0 is driven from airport l0_0 to airport l0_2 in city c0 and truck t2 is driven to airport l0_2 from airport l0_1 in city c0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6edf9e93-a2f3-47f4-8a82-386678b014c6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "truck t2 is driven from airport l1_2 to airport l0_1 in city c0, from truck t1 package p1 is unloaded at airport l1_2, at airport l0_1, package p3 is unloaded from airplane a1, at airport l1_2, package p0 is loaded in truck t1, airplane a0 is loaded with package p3 at airport l1_0, airplane a0 is loaded with package p0 at airport l0_1, from truck t0 package p3 is unloaded at airport l0_2, package p0 is loaded into airplane a1 at airport l1_1, at airport l1_2, package p1 is unloaded from airplane a0, at airport l0_1, package p0 is unloaded from truck t0, package p2 is loaded in truck t2 at airport l1_0, truck t0 is loaded with package p0 at airport l1_1, in city c0, truck is driven from airports l1_1 to l0_2, at airport l1_1, package p1 is unloaded from airplane a0, truck t1 is driven to airport l0_2 from airport l0_1 in city c0, truck t1 is driven from airport l1_0 to airport l0_0 in city c0, airplane a1 is loaded with package p3 at airport l0_2, package p1 is loaded into airplane a1 at airport l1_1, package p2 is unloaded from airplane a0 at airport l1_2, truck t2 is driven to airport l0_0 from airport l1_2 in city c1, from airplane a0 package p0 is unloaded at airport l0_1, package p2 is unloaded from airplane a0 at airport l1_1, truck t0 is driven to airport l0_0 from airport l1_0 in city c0, truck t0 is driven to airport l1_2 from airport l0_2 in city c1, from truck t1 package p3 is unloaded at airport l1_1, truck t0 is driven from airport l0_2 to airport l1_1 in city c0, truck t1 is driven from airport l0_2 to airport l0_1 in city c0, at airport l0_2, package p3 is loaded in airplane a0, at airport l1_1, package p2 is unloaded from airplane a1, package p0 is loaded into airplane a1 at airport l0_0, package p0 is loaded into airplane a0 at airport l0_0, at airport l1_1, package p2 is loaded in truck t2, in city c0, truck is driven from airports l1_0 to l0_1, truck t0 is loaded with package p2 at airport l0_0, airplane a0 is loaded with package p2 at airport l0_2, at airport l0_1, package p0 is loaded in truck t1, package p2 is unloaded from airplane a0 at airport l0_0, truck t2 is loaded with package p3 at airport l1_2, truck t2 is driven to airport l1_2 from airport l1_0 in city c1, at airport l1_0, package p0 is unloaded from truck t0, package p3 is loaded in truck t0 at airport l1_0, package p0 is loaded in truck t0 at airport l0_2, truck t1 is driven to airport l0_2 from airport l1_1 in city c1, truck t0 is driven to airport l1_1 from airport l1_2 in city c0, package p0 is loaded in truck t2 at airport l1_0, in city c1, truck is driven from airports l0_0 to l1_2, airplane a1 is loaded with package p3 at airport l1_0, truck t1 is driven to airport l1_2 from airport l1_1 in city c0, package p3 is unloaded from airplane a0 at airport l1_0, in city c0, truck is driven from airports l1_2 to l0_2, truck t0 is driven from airport l1_1 to airport l0_1 in city c0, in city c1, truck is driven from airports l0_2 to l0_1, at airport l1_1, package p2 is loaded in truck t1, package p0 is unloaded from truck t2 at airport l1_2, package p3 is unloaded from airplane a0 at airport l1_1, package p1 is unloaded from truck t0 at airport l1_0, package p0 is unloaded from truck t1 at airport l0_1, at airport l1_1, package p3 is loaded in airplane a0, package p1 is unloaded from truck t2 at airport l0_1, at airport l0_0, package p3 is loaded in truck t1, at airport l0_0, package p1 is unloaded from truck t1, truck t2 is loaded with package p2 at airport l1_2, package p2 is loaded in truck t2 at airport l0_1, from airplane a0 package p3 is unloaded at airport l0_0, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p2 is unloaded from truck t0 at airport l1_0, truck t0 is driven from airport l0_0 to airport l1_2 in city c0, from truck t0 package p3 is unloaded at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_2 in city c1, at airport l1_1, package p1 is loaded in airplane a0, truck t1 is driven to airport l0_2 from airport l1_0 in city c1, at airport l0_1, package p2 is unloaded from airplane a1, truck t0 is driven from airport l0_2 to airport l1_0 in city c0, truck t2 is driven to airport l1_1 from airport l1_0 in city c1, package p0 is unloaded from truck t2 at airport l0_0, package p3 is unloaded from truck t1 at airport l0_0, truck t0 is driven to airport l0_2 from airport l0_1 in city c0, truck t0 is loaded with package p3 at airport l1_1, airplane a1 is flown to airport l0_0 from airport l1_0, from truck t2 package p2 is unloaded at airport l0_2, truck t1 is driven from airport l0_1 to airport l1_2 in city c0, in city c0, truck is driven from airports l0_0 to l1_0, truck t2 is driven from airport l0_1 to airport l1_2 in city c0, truck t0 is driven to airport l0_0 from airport l0_1 in city c1, at airport l0_2, package p3 is loaded in truck t2, truck t2 is driven from airport l0_1 to airport l0_2 in city c1, truck t2 is driven from airport l0_2 to airport l1_0 in city c1, at airport l0_1, package p1 is loaded in truck t0, in city c1, truck is driven from airports l0_1 to l1_2, at airport l1_2, package p1 is loaded in truck t2, truck t2 is driven from airport l1_1 to airport l0_1 in city c0, in city c1, truck is driven from airports l1_0 to l0_1, at airport l0_2, package p2 is unloaded from truck t0, truck t1 is driven to airport l0_0 from airport l0_1 in city c0, package p3 is loaded into airplane a1 at airport l0_1, truck t2 is loaded with package p3 at airport l1_0, truck t0 is driven from airport l1_0 to airport l0_0 in city c1, truck t0 is driven from airport l1_1 to airport l0_0 in city c0, package p1 is unloaded from airplane a0 at airport l0_0, at airport l0_1, package p2 is loaded in airplane a1, package p1 is unloaded from truck t0 at airport l0_1, airplane a1 is loaded with package p0 at airport l0_2, at airport l1_2, package p3 is unloaded from airplane a0, at airport l0_1, package p2 is unloaded from truck t2, from airplane a1 package p1 is unloaded at airport l0_0, from airplane a0 package p0 is unloaded at airport l1_1, truck t1 is loaded with package p2 at airport l1_2, truck t1 is driven from airport l0_1 to airport l1_1 in city c0, from airplane a1 package p3 is unloaded at airport l0_0, package p3 is unloaded from truck t2 at airport l1_2, package p0 is unloaded from airplane a0 at airport l1_2, at airport l1_0, package p0 is unloaded from airplane a0, truck t0 is loaded with package p0 at airport l1_2, package p3 is unloaded from airplane a0 at airport l0_2, package p2 is loaded into airplane a1 at airport l0_0, truck t0 is driven to airport l0_2 from airport l1_0 in city c0, in city c1, truck is driven from airports l0_0 to l1_1, truck t0 is driven from airport l1_2 to airport l0_1 in city c0, at airport l1_0, package p0 is unloaded from truck t2, at airport l1_0, package p3 is loaded in truck t1, package p2 is unloaded from truck t1 at airport l0_2, package p0 is loaded in truck t2 at airport l1_2, airplane a1 is loaded with package p2 at airport l1_2, package p0 is unloaded from truck t1 at airport l1_2, package p3 is unloaded from airplane a1 at airport l1_0, package p1 is loaded in truck t2 at airport l0_2, truck t1 is driven to airport l1_2 from airport l0_0 in city c0, truck t2 is driven from airport l0_1 to airport l1_0 in city c0, truck t1 is driven to airport l1_1 from airport l0_0 in city c0, at airport l0_2, package p0 is unloaded from airplane a0, in city c1, truck is driven from airports l0_0 to l1_1, in city c1, truck is driven from airports l0_0 to l1_0, truck t1 is driven from airport l1_2 to airport l0_0 in city c0, package p0 is unloaded from truck t0 at airport l0_0, in city c0, truck is driven from airports l1_2 to l0_1, in city c1, truck is driven from airports l1_2 to l0_0, in city c0, truck is driven from airports l0_2 to l1_1, truck t2 is loaded with package p1 at airport l1_0, truck t1 is loaded with package p2 at airport l1_0, in city c0, truck is driven from airports l0_2 to l1_0, truck t2 is driven from airport l0_1 to airport l1_1 in city c1, at airport l1_1, package p3 is unloaded from airplane a1, from airplane a0 package p2 is unloaded at airport l1_0, truck t2 is driven from airport l0_1 to airport l1_1 in city c0, truck t2 is driven from airport l0_1 to airport l1_0 in city c1, in city c1, truck is driven from airports l1_1 to l1_0, truck t0 is driven to airport l1_0 from airport l0_2 in city c1, at airport l0_1, package p1 is loaded in airplane a0, truck t2 is driven to airport l0_2 from airport l1_2 in city c1, from truck t2 package p2 is unloaded at airport l1_2, package p2 is loaded in truck t0 at airport l1_0, at airport l0_0, package p3 is loaded in airplane a1, truck t0 is driven from airport l0_1 to airport l1_2 in city c0, truck t1 is driven to airport l1_0 from airport l0_2 in city c1, truck t2 is driven to airport l1_2 from airport l0_2 in city c1, in city c0, truck is driven from airports l1_0 to l0_0, package p2 is unloaded from truck t0 at airport l0_1, package p0 is loaded in truck t2 at airport l0_1, package p0 is loaded into airplane a0 at airport l1_0, at airport l1_0, package p0 is unloaded from airplane a1, package p3 is loaded into airplane a0 at airport l0_0, truck t2 is driven to airport l0_2 from airport l1_0 in city c1, truck t1 is driven to airport l1_1 from airport l0_2 in city c1, truck t1 is driven to airport l0_2 from airport l1_0 in city c0, package p2 is loaded in truck t0 at airport l0_1, package p1 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_0 to l0_1, at airport l0_0, package p3 is unloaded from truck t2, package p1 is loaded in truck t1 at airport l0_1, in city c0, truck is driven from airports l1_1 to l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p1 is unloaded from truck t2, at airport l1_2, package p0 is loaded in airplane a1, from truck t0 package p3 is unloaded at airport l1_2, at airport l0_2, package p0 is unloaded from truck t2, truck t1 is driven to airport l0_1 from airport l0_0 in city c1, from airplane a1 package p2 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t1 at airport l1_2, at airport l1_1, package p0 is loaded in truck t1, from airplane a0 package p1 is unloaded at airport l1_0, in city c1, truck is driven from airports l1_2 to l0_1, at airport l0_2, package p1 is loaded in airplane a1, truck t2 is driven from airport l0_1 to airport l1_2 in city c1, package p3 is loaded in truck t0 at airport l0_0, package p2 is loaded into airplane a0 at airport l0_0, in city c1, truck is driven from airports l1_0 to l0_2, truck t1 is driven from airport l1_2 to airport l1_0 in city c1, package p1 is loaded into airplane a1 at airport l1_0, truck t0 is driven to airport l1_1 from airport l1_0 in city c0, truck t0 is driven from airport l1_0 to airport l1_1 in city c1, at airport l0_2, package p1 is unloaded from airplane a0, at airport l1_1, package p0 is unloaded from truck t0, truck t2 is driven to airport l1_2 from airport l1_1 in city c0, in city c1, truck is driven from airports l1_1 to l0_2, package p3 is unloaded from truck t2 at airport l1_1, from airplane a1 package p0 is unloaded at airport l1_2, at airport l1_0, package p0 is loaded in truck t1, truck t1 is driven to airport l0_0 from airport l1_0 in city c1, from truck t1 package p2 is unloaded at airport l0_1, truck t1 is driven from airport l1_0 to airport l1_2 in city c0, from airplane a1 package p3 is unloaded at airport l1_2, package p1 is loaded into airplane a0 at airport l0_0, from truck t0 package p0 is unloaded at airport l1_2, truck t2 is driven from airport l0_2 to airport l1_1 in city c1, in city c0, truck is driven from airports l1_1 to l1_0, truck t0 is driven from airport l0_2 to airport l0_0 in city c1, at airport l1_2, package p1 is loaded in airplane a0, in city c0, truck is driven from airports l1_1 to l0_1, truck t0 is driven to airport l0_0 from airport l0_1 in city c0, in city c1, truck is driven from airports l1_2 to l1_1, in city c0, truck is driven from airports l1_2 to l0_2, at airport l1_0, package p0 is loaded in airplane a1, truck t2 is driven from airport l1_2 to airport l1_0 in city c1, truck t0 is driven from airport l0_1 to airport l0_2 in city c1, at airport l0_2, package p2 is loaded in truck t1, truck t2 is driven from airport l0_2 to airport l0_0 in city c1, at airport l0_2, package p3 is unloaded from truck t2, truck t1 is driven from airport l0_1 to airport l1_0 in city c1, from airplane a0 package p3 is unloaded at airport l0_1, truck t2 is driven to airport l0_1 from airport l1_1 in city c1, package p2 is loaded into airplane a1 at airport l0_2, truck t2 is loaded with package p1 at airport l0_0, truck t0 is driven from airport l0_0 to airport l0_2 in city c1, package p0 is loaded in truck t1 at airport l0_2, in city c1, truck is driven from airports l0_0 to l0_1, airplane a0 is flown from airport l0_0 to airport l1_0, package p1 is unloaded from airplane a1 at airport l1_1, package p2 is unloaded from truck t2 at airport l1_1, package p3 is loaded in truck t2 at airport l1_1, in city c0, truck is driven from airports l0_1 to l1_1, package p1 is loaded in truck t1 at airport l0_2, truck t2 is driven from airport l0_0 to airport l1_1 in city c0, truck t2 is driven from airport l1_2 to airport l1_0 in city c0, in city c1, truck is driven from airports l0_0 to l0_2, truck t1 is driven from airport l0_0 to airport l1_2 in city c1, truck t0 is loaded with package p2 at airport l1_2, in city c0, truck is driven from airports l1_2 to l0_0, package p1 is loaded in truck t1 at airport l1_1, truck t2 is driven to airport l0_2 from airport l0_0 in city c1, truck t0 is driven to airport l0_2 from airport l1_2 in city c1, package p3 is loaded in truck t0 at airport l0_1, at airport l0_2, package p1 is unloaded from truck t0, in city c0, truck is driven from airports l0_2 to l1_2, truck t1 is driven from airport l1_1 to airport l0_0 in city c0, from truck t0 package p3 is unloaded at airport l0_1, at airport l0_2, package p2 is unloaded from airplane a0, from truck t2 package p3 is unloaded at airport l1_0, truck t2 is loaded with package p3 at airport l0_0, from truck t1 package p1 is unloaded at airport l0_1, truck t2 is loaded with package p0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, in city c1, truck is driven from airports l1_1 to l1_0, truck t1 is driven to airport l1_2 from airport l0_2 in city c0, package p2 is loaded into airplane a1 at airport l1_0, truck t2 is driven to airport l1_2 from airport l0_0 in city c0, package p2 is loaded in truck t1 at airport l0_0, from truck t1 package p0 is unloaded at airport l1_1, truck t1 is loaded with package p0 at airport l0_0, truck t1 is driven to airport l0_1 from airport l1_1 in city c1, at airport l0_2, package p1 is loaded in truck t0, truck t1 is driven to airport l1_1 from airport l1_2 in city c0, truck t0 is driven to airport l0_1 from airport l0_2 in city c1, at airport l0_2, package p1 is unloaded from truck t1, at airport l0_2, package p1 is unloaded from truck t2, truck t1 is loaded with package p1 at airport l0_0, package p2 is loaded in truck t1 at airport l0_1, from truck t2 package p0 is unloaded at airport l1_1, package p1 is loaded into airplane a1 at airport l1_2, from truck t1 package p3 is unloaded at airport l1_2, from truck t0 package p2 is unloaded at airport l1_1, in city c0, truck is driven from airports l0_2 to l1_0, package p3 is loaded in truck t2 at airport l0_1, at airport l0_0, package p0 is loaded in truck t2, truck t0 is loaded with package p1 at airport l1_0, truck t1 is driven to airport l0_0 from airport l0_1 in city c1, package p3 is unloaded from truck t2 at airport l0_1, package p0 is loaded into airplane a1 at airport l0_1, airplane a1 is loaded with package p3 at airport l1_2, at airport l1_2, package p3 is loaded in truck t0, in city c1, truck is driven from airports l0_1 to l1_1, truck t2 is driven to airport l0_0 from airport l0_1 in city c1, from airplane a1 package p0 is unloaded at airport l0_2, truck t0 is driven from airport l0_1 to airport l1_0 in city c0, at airport l1_1, package p2 is loaded in truck t0, package p2 is loaded in truck t2 at airport l0_0, in city c1, truck is driven from airports l0_0 to l1_2, in city c1, truck is driven from airports l1_2 to l0_1, package p1 is unloaded from truck t0 at airport l1_1, truck t1 is driven to airport l0_1 from airport l0_0 in city c0, truck t0 is loaded with package p1 at airport l1_1, package p0 is loaded in truck t0 at airport l1_0, truck t0 is driven from airport l1_2 to airport l0_1 in city c1, truck t2 is driven to airport l0_0 from airport l1_1 in city c0, truck t2 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_2, from truck t2 package p1 is unloaded at airport l1_1, package p0 is unloaded from truck t0 at airport l0_2, truck t0 is driven from airport l0_1 to airport l1_0 in city c1, truck t2 is loaded with package p0 at airport l1_1, truck t1 is driven to airport l1_1 from airport l1_0 in city c0, truck t1 is driven from airport l1_1 to airport l0_0 in city c1, truck t0 is driven to airport l1_2 from airport l1_0 in city c1, truck t2 is driven to airport l0_0 from airport l1_2 in city c0, in city c0, truck is driven from airports l1_1 to l1_0, from airplane a1 package p0 is unloaded at airport l1_1, package p1 is loaded into airplane a0 at airport l0_2, truck t0 is loaded with package p0 at airport l0_1, truck t1 is loaded with package p3 at airport l0_1, from truck t1 package p3 is unloaded at airport l0_2, from truck t0 package p1 is unloaded at airport l1_2, truck t1 is driven from airport l1_2 to airport l0_2 in city c1, package p1 is unloaded from airplane a1 at airport l0_2, at airport l0_2, package p3 is unloaded from airplane a1, in city c0, truck is driven from airports l1_0 to l1_1, package p2 is loaded into airplane a0 at airport l1_2, package p2 is unloaded from truck t1 at airport l0_0, truck t1 is loaded with package p1 at airport l1_0, truck t0 is driven from airport l0_0 to airport l1_1 in city c1, package p1 is unloaded from truck t0 at airport l0_0, truck t2 is driven to airport l0_1 from airport l0_0 in city c1, at airport l0_1, package p0 is unloaded from truck t2, package p1 is loaded into airplane a0 at airport l1_0, truck t0 is driven from airport l0_0 to airport l1_1 in city c0, truck t2 is driven to airport l0_1 from airport l1_0 in city c0, package p0 is loaded in truck t0 at airport l0_0, in city c1, truck is driven from airports l1_1 to l1_0, in city c1, truck is driven from airports l1_1 to l0_0, airplane a0 is loaded with package p2 at airport l0_1, from airplane a1 package p1 is unloaded at airport l1_0, at airport l1_1, package p1 is unloaded from truck t1, package p0 is unloaded from airplane a1 at airport l0_1, truck t1 is driven to airport l1_0 from airport l1_2 in city c0, in city c0, truck is driven from airports l1_0 to l1_2, package p1 is unloaded from airplane a1 at airport l0_1, airplane a0 is loaded with package p3 at airport l1_2, in city c1, truck is driven from airports l1_1 to l0_0, airplane a0 is loaded with package p0 at airport l1_2, at airport l0_0, package p2 is unloaded from truck t0, truck t2 is driven to airport l1_0 from airport l0_0 in city c1, at airport l0_2, package p2 is loaded in truck t2, from airplane a0 package p2 is unloaded at airport l0_1, from airplane a1 package p2 is unloaded at airport l1_2, at airport l1_2, package p1 is loaded in truck t0, truck t0 is driven to airport l1_1 from airport l0_2 in city c1, from airplane a1 package p2 is unloaded at airport l1_0, package p2 is loaded into airplane a0 at airport l1_1, in city c1, truck is driven from airports l1_1 to l0_2, package p0 is unloaded from airplane a0 at airport l0_0, truck t1 is driven from airport l0_0 to airport l0_2 in city c0, from airplane a0 package p1 is unloaded at airport l0_1, from truck t0 package p3 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t1, package p2 is loaded into airplane a0 at airport l1_0, package p3 is loaded in truck t1 at airport l1_2, package p2 is unloaded from truck t0 at airport l1_2, package p0 is unloaded from truck t1 at airport l0_0, airplane a1 is loaded with package p1 at airport l0_1, at airport l1_0, package p2 is unloaded from truck t2, truck t0 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is driven from airport l0_2 to airport l0_1 in city c1, truck t1 is loaded with package p3 at airport l1_1, package p3 is loaded in truck t0 at airport l0_2, in city c1, truck is driven from airports l0_0 to l1_0, from truck t2 package p1 is unloaded at airport l1_2, truck t1 is driven to airport l1_2 from airport l0_2 in city c1, truck t2 is driven from airport l0_0 to airport l0_1 in city c0, from truck t1 package p2 is unloaded at airport l1_0, truck t2 is driven to airport l1_1 from airport l1_2 in city c0, truck t2 is driven from airport l1_0 to airport l0_0 in city c1, in city c0, truck is driven from airports l0_1 to l1_0, package p2 is loaded into airplane a1 at airport l1_1, airplane a1 is loaded with package p3 at airport l1_1, in city c1, truck is driven from airports l0_1 to l0_2, in city c1, truck is driven from airports l0_1 to l1_1, truck t2 is driven from airport l1_0 to airport l0_2 in city c0, truck t0 is driven from airport l1_1 to airport l1_2 in city c0, package p3 is loaded into airplane a0 at airport l0_1, truck t0 is loaded with package p2 at airport l0_2, from truck t1 package p3 is unloaded at airport l1_0, at airport l0_2, package p0 is unloaded from truck t1, truck t0 is driven to airport l1_0 from airport l1_2 in city c0, at airport l1_0, package p1 is unloaded from truck t2, truck t2 is driven to airport l1_2 from airport l1_0 in city c0, in city c0, truck is driven from airports l0_2 to l0_1, truck t0 is driven to airport l0_1 from airport l1_1 in city c1, truck t2 is driven to airport l1_2 from airport l0_2 in city c0, truck t0 is driven to airport l1_0 from airport l1_2 in city c1, in city c0, truck is driven from airports l0_2 to l0_0, truck t2 is driven to airport l0_2 from airport l0_0 in city c0, truck t0 is driven to airport l0_0 from airport l1_2 in city c1, in city c0, truck is driven from airports l0_0 to l1_0, truck t1 is driven from airport l0_2 to airport l1_1 in city c0, from truck t1 package p2 is unloaded at airport l1_1, in city c0, truck is driven from airports l1_2 to l0_2, truck t0 is driven from airport l1_1 to airport l1_0 in city c0, in city c1, truck is driven from airports l0_1 to l1_2, truck t2 is driven to airport l0_1 from airport l1_0 in city c1, package p1 is unloaded from airplane a1 at airport l1_2, truck t2 is driven to airport l0_1 from airport l0_2 in city c0, at airport l1_0, package p0 is unloaded from truck t1, in city c0, truck is driven from airports l0_0 to l1_0, at airport l0_1, package p3 is unloaded from truck t1, truck t2 is loaded with package p1 at airport l0_1, truck t0 is driven from airport l1_1 to airport l1_2 in city c1, at airport l0_2, package p0 is loaded in airplane a0, package p1 is unloaded from truck t1 at airport l1_0, truck t0 is driven to airport l0_1 from airport l1_0 in city c0, package p2 is unloaded from truck t2 at airport l0_0, in city c0, truck is driven from airports l1_1 to l0_2 and package p0 is loaded into airplane a0 at airport l1_1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "877291c2-a4d3-4199-ad7a-3d7841dcec41", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p0 is loaded in airplane a1, at airport l1_0, package p0 is unloaded from truck t1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_2, package p0 is loaded in truck t1, package p1 is loaded in truck t1 at airport l1_1, package p1 is loaded into airplane a1 at airport l1_0, package p1 is unloaded from airplane a1 at airport l0_0, package p2 is loaded in truck t0 at airport l0_2, package p3 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, truck t0 is driven to airport l0_1 from airport l0_0 in city c0, truck t0 is loaded with package p0 at airport l0_0, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and truck t1 is driven to airport l1_1 from airport l1_2 in city c1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "18b0cf57-654c-4a05-8f7c-b8d9c984f2c5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_2, package p2 is loaded in truck t0, at airport l1_0, package p0 is loaded in airplane a1, at airport l1_0, package p1 is loaded in airplane a1, from airplane a1 package p0 is unloaded at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p0 is unloaded from truck t1 at airport l1_0, package p1 is loaded in truck t1 at airport l1_1, package p1 is unloaded from truck t1 at airport l1_0, package p2 is unloaded from truck t0 at airport l0_0, truck t0 is driven from airport l0_0 to airport l0_1 in city c0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, truck t0 is driven from airport l1_0 to airport l1_1 in city c1, truck t0 is loaded with package p0 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, truck t0 is loaded with package p3 at airport l0_2, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and truck t1 is driven to airport l1_1 from airport l1_2 in city c1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3bac9ea3-7a1d-44f5-b41a-321e548e4693", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0. Is the action: airplane a1 flies from airports l1_0 to l0_0 executable at step 13, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b94332fa-9d49-4b42-9fe6-21001e933d13", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, at airport l1_1, package p3 is loaded in truck t0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0. Is the action: at airport l1_1, package p3 is loaded in truck t0 executable at step 13, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6e78bab6-5e3a-4377-9f6c-285da4048283", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "96474d14-aaae-4bc8-acf1-85498dba9748", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, package p1 is unloaded from truck t0 at airport l0_2, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "package p1 is unloaded from truck t0 at airport l0_2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f78c8860-5b85-4f52-b71e-dfc9147c61e3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "package p0 is unloaded from truck t0 at airport l0_1, at airport l0_0, package p2 is unloaded from airplane a1, airplane a0 is flown to airport l0_0 from airport l1_0, in city c0, truck is driven from airports l0_1 to l0_2, from truck t0 package p1 is unloaded at airport l0_1, truck t0 is driven from airport l0_1 to airport l0_0 in city c0, at airport l0_1, package p3 is unloaded from truck t0, truck t1 is driven to airport l1_2 from airport l1_0 in city c1, in city c0, truck is driven from airports l0_1 to l0_0, airplane a1 flies from airports l0_0 to l1_0, truck t1 is driven from airport l1_0 to airport l1_1 in city c1 and truck t2 is driven from airport l0_1 to airport l0_2 in city c0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "60b00c2e-1280-48eb-82bd-39f2e6e57278", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "truck t2 is driven from airport l1_2 to airport l0_1 in city c0, at airport l1_2, package p1 is unloaded from truck t1, package p3 is unloaded from airplane a1 at airport l0_1, truck t1 is loaded with package p0 at airport l1_2, package p3 is loaded into airplane a0 at airport l1_0, package p0 is loaded into airplane a0 at airport l0_1, package p3 is unloaded from truck t0 at airport l0_2, airplane a1 is loaded with package p0 at airport l1_1, at airport l1_2, package p1 is unloaded from airplane a0, at airport l1_0, package p2 is loaded in truck t2, truck t0 is loaded with package p0 at airport l1_1, truck t1 is driven to airport l0_2 from airport l1_1 in city c0, from airplane a0 package p1 is unloaded at airport l1_1, truck t1 is driven to airport l0_2 from airport l0_1 in city c0, truck t1 is driven from airport l1_0 to airport l0_0 in city c0, at airport l0_2, package p3 is loaded in airplane a1, package p1 is loaded into airplane a1 at airport l1_1, from airplane a0 package p2 is unloaded at airport l1_2, truck t2 is driven from airport l1_2 to airport l0_0 in city c1, package p0 is unloaded from airplane a0 at airport l0_1, at airport l1_1, package p2 is unloaded from airplane a0, truck t0 is driven to airport l0_0 from airport l1_0 in city c0, truck t0 is driven to airport l1_2 from airport l0_2 in city c1, package p3 is unloaded from truck t1 at airport l1_1, truck t0 is driven to airport l1_1 from airport l0_2 in city c0, truck t1 is driven to airport l0_1 from airport l0_2 in city c0, airplane a0 is loaded with package p3 at airport l0_2, at airport l1_1, package p2 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in airplane a1, package p0 is loaded into airplane a0 at airport l0_0, at airport l1_1, package p2 is loaded in truck t2, truck t1 is driven to airport l0_1 from airport l1_0 in city c0, package p2 is loaded in truck t0 at airport l0_0, airplane a0 is loaded with package p2 at airport l0_2, truck t1 is loaded with package p0 at airport l0_1, package p2 is unloaded from airplane a0 at airport l0_0, at airport l1_2, package p3 is loaded in truck t2, in city c1, truck is driven from airports l1_0 to l1_2, from truck t0 package p0 is unloaded at airport l1_0, at airport l1_0, package p3 is loaded in truck t0, truck t0 is loaded with package p0 at airport l0_2, truck t1 is driven to airport l0_2 from airport l1_1 in city c1, truck t0 is driven from airport l1_2 to airport l1_1 in city c0, at airport l1_0, package p0 is loaded in truck t2, truck t0 is driven to airport l1_2 from airport l0_0 in city c1, at airport l1_0, package p3 is loaded in airplane a1, truck t1 is driven to airport l1_2 from airport l1_1 in city c0, at airport l1_0, package p3 is unloaded from airplane a0, truck t2 is driven from airport l1_2 to airport l0_2 in city c0, truck t0 is driven to airport l0_1 from airport l1_1 in city c0, truck t2 is driven to airport l0_1 from airport l0_2 in city c1, package p2 is loaded in truck t1 at airport l1_1, package p0 is unloaded from truck t2 at airport l1_2, package p3 is unloaded from airplane a0 at airport l1_1, from truck t0 package p3 is unloaded at airport l0_0, from truck t0 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l0_1, at airport l1_1, package p3 is loaded in airplane a0, package p1 is unloaded from truck t2 at airport l0_1, truck t1 is loaded with package p3 at airport l0_0, at airport l0_0, package p1 is unloaded from truck t1, truck t2 is loaded with package p2 at airport l1_2, package p2 is loaded in truck t2 at airport l0_1, from airplane a0 package p3 is unloaded at airport l0_0, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p2 is unloaded from truck t0 at airport l1_0, in city c0, truck is driven from airports l0_0 to l1_2, from truck t0 package p3 is unloaded at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_2 in city c1, package p1 is loaded into airplane a0 at airport l1_1, in city c1, truck is driven from airports l1_0 to l0_2, at airport l0_1, package p2 is unloaded from airplane a1, truck t0 is driven to airport l1_0 from airport l0_2 in city c0, truck t2 is driven to airport l1_1 from airport l1_0 in city c1, from truck t2 package p0 is unloaded at airport l0_0, package p3 is unloaded from truck t1 at airport l0_0, truck t0 is loaded with package p3 at airport l1_1, airplane a1 is flown from airport l1_0 to airport l0_0, from truck t2 package p2 is unloaded at airport l0_2, truck t1 is driven from airport l0_1 to airport l1_2 in city c0, in city c0, truck is driven from airports l0_0 to l1_0, in city c0, truck is driven from airports l0_1 to l1_2, in city c1, truck is driven from airports l0_1 to l0_0, truck t2 is loaded with package p3 at airport l0_2, in city c1, truck is driven from airports l0_1 to l0_2, truck t2 is driven to airport l1_0 from airport l0_2 in city c1, package p1 is loaded in truck t0 at airport l0_1, truck t1 is driven to airport l1_2 from airport l0_1 in city c1, truck t2 is loaded with package p1 at airport l1_2, truck t2 is driven to airport l0_1 from airport l1_1 in city c0, truck t0 is driven to airport l0_1 from airport l1_0 in city c1, package p2 is unloaded from truck t0 at airport l0_2, in city c0, truck is driven from airports l0_1 to l0_0, airplane a1 is loaded with package p3 at airport l0_1, truck t0 is loaded with package p1 at airport l0_0, package p3 is loaded in truck t2 at airport l1_0, truck t0 is driven to airport l0_0 from airport l1_0 in city c1, truck t0 is driven to airport l0_0 from airport l1_1 in city c0, package p1 is unloaded from airplane a0 at airport l0_0, airplane a1 is loaded with package p2 at airport l0_1, in city c0, truck is driven from airports l0_0 to l0_1, airplane a1 is loaded with package p0 at airport l0_2, package p3 is unloaded from airplane a0 at airport l1_2, at airport l0_1, package p2 is unloaded from truck t2, at airport l0_0, package p1 is unloaded from airplane a1, package p0 is unloaded from airplane a0 at airport l1_1, package p2 is loaded in truck t1 at airport l1_2, in city c0, truck is driven from airports l0_1 to l1_1, package p3 is unloaded from airplane a1 at airport l0_0, at airport l1_2, package p3 is unloaded from truck t2, package p0 is unloaded from airplane a0 at airport l1_2, at airport l1_0, package p0 is unloaded from airplane a0, truck t0 is loaded with package p0 at airport l1_2, package p3 is unloaded from airplane a0 at airport l0_2, at airport l0_0, package p2 is loaded in airplane a1, truck t0 is driven to airport l0_2 from airport l1_0 in city c0, truck t1 is driven from airport l0_0 to airport l1_1 in city c1, truck t0 is driven to airport l0_1 from airport l1_2 in city c0, from truck t2 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t1 at airport l1_0, at airport l0_2, package p2 is unloaded from truck t1, at airport l1_2, package p0 is loaded in truck t2, at airport l1_2, package p2 is loaded in airplane a1, from truck t1 package p0 is unloaded at airport l1_2, at airport l1_0, package p3 is unloaded from airplane a1, at airport l0_2, package p1 is loaded in truck t2, in city c0, truck is driven from airports l0_0 to l1_2, truck t2 is driven from airport l0_1 to airport l1_0 in city c0, in city c0, truck is driven from airports l0_0 to l1_1, from airplane a0 package p0 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_0 to l1_1, in city c1, truck is driven from airports l0_0 to l1_0, in city c0, truck is driven from airports l1_2 to l0_0, from truck t0 package p0 is unloaded at airport l0_0, truck t1 is driven to airport l0_1 from airport l1_2 in city c0, in city c1, truck is driven from airports l1_2 to l0_0, in city c0, truck is driven from airports l0_2 to l1_1, at airport l1_0, package p1 is loaded in truck t2, truck t1 is loaded with package p2 at airport l1_0, in city c0, truck is driven from airports l0_2 to l1_0, truck t2 is driven to airport l1_1 from airport l0_1 in city c1, from airplane a1 package p3 is unloaded at airport l1_1, package p2 is unloaded from airplane a0 at airport l1_0, truck t2 is driven from airport l0_1 to airport l1_1 in city c0, in city c1, truck is driven from airports l0_1 to l1_0, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, truck t0 is driven from airport l0_2 to airport l1_0 in city c1, airplane a1 is loaded with package p1 at airport l0_0, package p1 is loaded into airplane a0 at airport l0_1, in city c1, truck is driven from airports l1_2 to l0_2, at airport l1_2, package p2 is unloaded from truck t2, package p2 is loaded in truck t0 at airport l1_0, airplane a1 is loaded with package p3 at airport l0_0, truck t0 is driven to airport l1_2 from airport l0_1 in city c0, truck t1 is driven to airport l1_0 from airport l0_2 in city c1, truck t2 is driven from airport l0_2 to airport l1_2 in city c1, truck t2 is driven from airport l1_0 to airport l0_0 in city c0, at airport l0_1, package p2 is unloaded from truck t0, truck t2 is loaded with package p0 at airport l0_1, airplane a0 is loaded with package p0 at airport l1_0, at airport l1_0, package p0 is unloaded from airplane a1, airplane a0 is loaded with package p3 at airport l0_0, truck t2 is driven to airport l0_2 from airport l1_0 in city c1, in city c1, truck is driven from airports l0_2 to l1_1, truck t1 is driven to airport l0_2 from airport l1_0 in city c0, at airport l0_1, package p2 is loaded in truck t0, truck t1 is loaded with package p1 at airport l1_2, truck t1 is driven to airport l0_1 from airport l1_0 in city c1, from truck t2 package p3 is unloaded at airport l0_0, at airport l0_1, package p1 is loaded in truck t1, in city c0, truck is driven from airports l1_1 to l0_2, truck t1 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p1 is unloaded from truck t2, at airport l1_2, package p0 is loaded in airplane a1, package p3 is unloaded from truck t0 at airport l1_2, from truck t2 package p0 is unloaded at airport l0_2, in city c1, truck is driven from airports l0_0 to l0_1, package p2 is unloaded from airplane a1 at airport l0_2, in city c1, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t1 at airport l1_2, package p0 is loaded in truck t1 at airport l1_1, package p1 is unloaded from airplane a0 at airport l1_0, truck t2 is driven to airport l0_1 from airport l1_2 in city c1, airplane a1 is loaded with package p1 at airport l0_2, truck t2 is driven from airport l0_1 to airport l1_2 in city c1, package p3 is loaded in truck t0 at airport l0_0, package p2 is loaded into airplane a0 at airport l0_0, truck t0 is driven to airport l0_2 from airport l1_0 in city c1, in city c1, truck is driven from airports l1_2 to l1_0, package p1 is loaded into airplane a1 at airport l1_0, truck t0 is driven to airport l1_1 from airport l1_0 in city c0, truck t0 is driven to airport l1_1 from airport l1_0 in city c1, from airplane a0 package p1 is unloaded at airport l0_2, package p0 is unloaded from truck t0 at airport l1_1, truck t2 is driven from airport l1_1 to airport l1_2 in city c0, truck t0 is driven from airport l1_1 to airport l0_2 in city c1, from truck t2 package p3 is unloaded at airport l1_1, package p0 is unloaded from airplane a1 at airport l1_2, truck t1 is loaded with package p0 at airport l1_0, truck t1 is driven to airport l0_0 from airport l1_0 in city c1, at airport l0_1, package p2 is unloaded from truck t1, in city c0, truck is driven from airports l1_0 to l1_2, package p3 is unloaded from airplane a1 at airport l1_2, package p1 is loaded into airplane a0 at airport l0_0, package p0 is unloaded from truck t0 at airport l1_2, in city c1, truck is driven from airports l0_2 to l1_1, truck t2 is driven from airport l1_1 to airport l1_0 in city c0, truck t0 is driven from airport l0_2 to airport l0_0 in city c1, at airport l1_2, package p1 is loaded in airplane a0, truck t1 is driven to airport l0_1 from airport l1_1 in city c0, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is driven to airport l0_2 from airport l1_2 in city c0, at airport l1_0, package p0 is loaded in airplane a1, truck t2 is driven from airport l1_2 to airport l1_0 in city c1, truck t0 is driven to airport l0_2 from airport l0_1 in city c1, at airport l0_2, package p2 is loaded in truck t1, truck t2 is driven to airport l0_0 from airport l0_2 in city c1, package p3 is unloaded from truck t2 at airport l0_2, in city c1, truck is driven from airports l0_1 to l1_0, from airplane a0 package p3 is unloaded at airport l0_1, truck t2 is driven to airport l0_1 from airport l1_1 in city c1, package p2 is loaded into airplane a1 at airport l0_2, at airport l0_0, package p1 is loaded in truck t2, truck t0 is driven to airport l0_2 from airport l0_0 in city c1, package p0 is loaded in truck t1 at airport l0_2, truck t0 is driven to airport l0_1 from airport l0_0 in city c1, airplane a0 flies from airports l0_0 to l1_0, package p1 is unloaded from airplane a1 at airport l1_1, from truck t2 package p2 is unloaded at airport l1_1, at airport l1_1, package p3 is loaded in truck t2, truck t0 is driven to airport l1_1 from airport l0_1 in city c0, package p1 is loaded in truck t1 at airport l0_2, truck t2 is driven to airport l1_1 from airport l0_0 in city c0, in city c0, truck is driven from airports l1_2 to l1_0, truck t1 is driven from airport l0_0 to airport l0_2 in city c1, truck t1 is driven from airport l0_0 to airport l1_2 in city c1, package p2 is loaded in truck t0 at airport l1_2, in city c0, truck is driven from airports l1_2 to l0_0, at airport l1_1, package p1 is loaded in truck t1, package p0 is unloaded from airplane a1 at airport l0_0, in city c1, truck is driven from airports l0_0 to l0_2, in city c1, truck is driven from airports l1_2 to l0_2, at airport l0_1, package p3 is loaded in truck t0, package p1 is unloaded from truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l1_2, in city c0, truck is driven from airports l1_1 to l0_0, at airport l0_2, package p2 is unloaded from airplane a0, at airport l1_0, package p3 is unloaded from truck t2, truck t2 is loaded with package p3 at airport l0_0, from truck t1 package p1 is unloaded at airport l0_1, truck t2 is loaded with package p0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, truck t2 is driven to airport l1_0 from airport l1_1 in city c1, in city c0, truck is driven from airports l0_2 to l1_2, at airport l1_0, package p2 is loaded in airplane a1, truck t2 is driven from airport l0_0 to airport l1_2 in city c0, truck t1 is loaded with package p2 at airport l0_0, at airport l1_1, package p0 is unloaded from truck t1, truck t1 is loaded with package p0 at airport l0_0, in city c1, truck is driven from airports l1_1 to l0_1, at airport l0_2, package p1 is loaded in truck t0, truck t1 is driven to airport l1_1 from airport l1_2 in city c0, truck t0 is driven from airport l0_2 to airport l0_1 in city c1, from truck t1 package p1 is unloaded at airport l0_2, from truck t2 package p1 is unloaded at airport l0_2, at airport l0_0, package p1 is loaded in truck t1, at airport l0_1, package p2 is loaded in truck t1, package p0 is unloaded from truck t2 at airport l1_1, at airport l1_2, package p1 is loaded in airplane a1, package p3 is unloaded from truck t1 at airport l1_2, package p2 is unloaded from truck t0 at airport l1_1, in city c0, truck is driven from airports l0_2 to l1_0, at airport l0_1, package p3 is loaded in truck t2, at airport l0_0, package p0 is loaded in truck t2, truck t0 is loaded with package p1 at airport l1_0, in city c1, truck is driven from airports l0_1 to l0_0, at airport l0_1, package p3 is unloaded from truck t2, airplane a1 is loaded with package p0 at airport l0_1, airplane a1 is loaded with package p3 at airport l1_2, truck t0 is loaded with package p3 at airport l1_2, truck t0 is driven to airport l1_1 from airport l0_1 in city c1, in city c1, truck is driven from airports l0_1 to l0_0, at airport l0_2, package p0 is unloaded from airplane a1, truck t0 is driven from airport l0_1 to airport l1_0 in city c0, package p2 is loaded in truck t0 at airport l1_1, package p2 is loaded in truck t2 at airport l0_0, truck t2 is driven from airport l0_0 to airport l1_2 in city c1, truck t1 is driven to airport l0_1 from airport l1_2 in city c1, package p1 is unloaded from truck t0 at airport l1_1, truck t1 is driven from airport l0_0 to airport l0_1 in city c0, package p1 is loaded in truck t0 at airport l1_1, at airport l1_0, package p0 is loaded in truck t0, in city c1, truck is driven from airports l1_2 to l0_1, in city c0, truck is driven from airports l1_1 to l0_0, package p1 is loaded in truck t2 at airport l1_1, truck t2 is driven to airport l1_2 from airport l1_1 in city c1, from truck t2 package p1 is unloaded at airport l1_1, package p0 is unloaded from truck t0 at airport l0_2, truck t0 is driven from airport l0_1 to airport l1_0 in city c1, package p0 is loaded in truck t2 at airport l1_1, in city c0, truck is driven from airports l1_0 to l1_1, truck t1 is driven to airport l0_0 from airport l1_1 in city c1, truck t0 is driven to airport l1_2 from airport l1_0 in city c1, truck t2 is driven from airport l1_2 to airport l0_0 in city c0, in city c0, truck is driven from airports l1_1 to l1_0, at airport l1_1, package p0 is unloaded from airplane a1, airplane a0 is loaded with package p1 at airport l0_2, at airport l0_1, package p0 is loaded in truck t0, package p3 is loaded in truck t1 at airport l0_1, package p3 is unloaded from truck t1 at airport l0_2, package p1 is unloaded from truck t0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l0_2, at airport l0_2, package p1 is unloaded from airplane a1, package p3 is unloaded from airplane a1 at airport l0_2, truck t2 is driven to airport l1_1 from airport l1_0 in city c0, package p2 is loaded into airplane a0 at airport l1_2, from truck t1 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in truck t1, truck t0 is driven from airport l0_0 to airport l1_1 in city c1, at airport l0_0, package p1 is unloaded from truck t0, truck t2 is driven to airport l0_1 from airport l0_0 in city c1, at airport l0_1, package p0 is unloaded from truck t2, airplane a0 is loaded with package p1 at airport l1_0, truck t0 is driven to airport l1_1 from airport l0_0 in city c0, truck t2 is driven from airport l1_0 to airport l0_1 in city c0, at airport l0_0, package p0 is loaded in truck t0, truck t0 is driven to airport l1_0 from airport l1_1 in city c1, truck t0 is driven to airport l0_0 from airport l1_1 in city c1, at airport l0_1, package p2 is loaded in airplane a0, from airplane a1 package p1 is unloaded at airport l1_0, at airport l1_1, package p1 is unloaded from truck t1, package p0 is unloaded from airplane a1 at airport l0_1, in city c0, truck is driven from airports l1_2 to l1_0, truck t0 is driven from airport l1_0 to airport l1_2 in city c0, package p1 is unloaded from airplane a1 at airport l0_1, package p3 is loaded into airplane a0 at airport l1_2, in city c1, truck is driven from airports l1_1 to l0_0, package p0 is loaded into airplane a0 at airport l1_2, package p2 is unloaded from truck t0 at airport l0_0, truck t2 is driven to airport l1_0 from airport l0_0 in city c1, package p2 is loaded in truck t2 at airport l0_2, at airport l0_1, package p2 is unloaded from airplane a0, from airplane a1 package p2 is unloaded at airport l1_2, package p1 is loaded in truck t0 at airport l1_2, in city c1, truck is driven from airports l0_2 to l1_1, from airplane a1 package p2 is unloaded at airport l1_0, airplane a0 is loaded with package p2 at airport l1_1, in city c1, truck is driven from airports l1_1 to l0_2, at airport l0_0, package p0 is unloaded from airplane a0, in city c0, truck is driven from airports l0_0 to l0_2, in city c0, truck is driven from airports l0_0 to l0_2, package p1 is unloaded from airplane a0 at airport l0_1, from truck t0 package p3 is unloaded at airport l1_0, truck t1 is loaded with package p3 at airport l0_2, airplane a0 is loaded with package p2 at airport l1_0, truck t1 is loaded with package p3 at airport l1_2, package p2 is unloaded from truck t0 at airport l1_2, at airport l0_0, package p0 is unloaded from truck t1, package p1 is loaded into airplane a1 at airport l0_1, from truck t2 package p2 is unloaded at airport l1_0, truck t0 is driven to airport l1_1 from airport l1_2 in city c1, in city c1, truck is driven from airports l0_2 to l0_1, package p3 is loaded in truck t1 at airport l1_1, truck t0 is loaded with package p3 at airport l0_2, truck t1 is driven to airport l1_0 from airport l0_0 in city c1, from truck t2 package p1 is unloaded at airport l1_2, truck t1 is driven from airport l0_2 to airport l1_2 in city c1, truck t2 is driven to airport l0_1 from airport l0_0 in city c0, at airport l1_0, package p2 is unloaded from truck t1, in city c0, truck is driven from airports l1_2 to l1_1, in city c1, truck is driven from airports l1_0 to l0_0, in city c0, truck is driven from airports l0_1 to l1_0, package p2 is loaded into airplane a1 at airport l1_1, at airport l1_1, package p3 is loaded in airplane a1, truck t1 is driven to airport l0_2 from airport l0_1 in city c1, in city c1, truck is driven from airports l0_1 to l1_1, in city c0, truck is driven from airports l1_0 to l0_2, in city c0, truck is driven from airports l1_1 to l1_2, at airport l0_1, package p3 is loaded in airplane a0, at airport l0_2, package p2 is loaded in truck t0, at airport l1_0, package p3 is unloaded from truck t1, at airport l0_2, package p0 is unloaded from truck t1, truck t0 is driven from airport l1_2 to airport l1_0 in city c0, package p1 is unloaded from truck t2 at airport l1_0, truck t2 is driven to airport l1_2 from airport l1_0 in city c0, truck t0 is driven to airport l0_1 from airport l0_2 in city c0, truck t0 is driven to airport l0_1 from airport l1_1 in city c1, in city c0, truck is driven from airports l0_2 to l1_2, in city c1, truck is driven from airports l1_2 to l1_0, in city c0, truck is driven from airports l0_2 to l0_0, truck t2 is driven from airport l0_0 to airport l0_2 in city c0, truck t0 is driven to airport l0_0 from airport l1_2 in city c1, truck t0 is driven from airport l0_0 to airport l1_0 in city c0, in city c0, truck is driven from airports l0_2 to l1_1, package p2 is unloaded from truck t1 at airport l1_1, truck t0 is driven to airport l0_2 from airport l1_2 in city c0, truck t0 is driven to airport l1_0 from airport l1_1 in city c0, truck t0 is driven from airport l0_1 to airport l1_2 in city c1, in city c1, truck is driven from airports l1_0 to l0_1, from airplane a1 package p1 is unloaded at airport l1_2, in city c0, truck is driven from airports l0_2 to l0_1, at airport l1_0, package p0 is unloaded from truck t1, truck t1 is driven to airport l1_0 from airport l0_0 in city c0, package p3 is unloaded from truck t1 at airport l0_1, package p1 is loaded in truck t2 at airport l0_1, truck t0 is driven to airport l1_2 from airport l1_1 in city c1, at airport l0_2, package p0 is loaded in airplane a0, package p1 is unloaded from truck t1 at airport l1_0, truck t0 is driven from airport l1_0 to airport l0_1 in city c0, package p2 is unloaded from truck t2 at airport l0_0, in city c0, truck is driven from airports l1_1 to l0_2 and package p0 is loaded into airplane a0 at airport l1_1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object p0 is at airport l1_2, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e8a113ee-9f0b-4080-b878-79a9653ce53e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, if in city c1, truck is driven from airports l1_2 to l1_1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e75fe4da-d01e-49ff-aefc-1d4839f17ef8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if truck t1 is driven to airport l1_1 from airport l1_2 in city c1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "27753072-47e6-4280-9315-e34dc6f0aa61", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if in city c1, truck is driven from airports l1_2 to l1_1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fa8af7be-83c5-4626-b4bc-4f3cd29cafc8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "19324aa6-f6c0-4912-adae-5dedd1a0e44d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, is it True or False that object t1 is at airport l1_1 and object t1 is not located at airport l1_2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c22253d0-a360-4e98-9110-43c04b1b793a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, if in city c1, truck is driven from airports l1_2 to l1_1, is it True or False that at airport l1_1, object t1 is located and object t1 is located at airport l1_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f817de91-40b6-4668-b8a0-e3b5c540ea1b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, is it True or False that object t1 is located at airport l1_1 and object t1 is not located at airport l1_2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4acdbd4b-e14d-45e4-a4ee-ccd5848bbf83", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, if in city c1, truck is driven from airports l1_2 to l1_1, is it True or False that object a1 is located at airport l0_2 and object t0 is located at airport l1_2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "34faa943-9d4a-4aa1-8a66-d06307a1db9f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, if truck t1 is driven to airport l1_1 from airport l1_2 in city c1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f48583f7-ff93-443c-9e6c-fc809790e519", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if truck t1 is driven to airport l1_1 from airport l1_2 in city c1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "29e37a01-c466-488d-bebd-3900e8a28631", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "20426246-aab2-4ffa-90d7-790c81754c0b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "be9f9a71-2f25-40b3-8f17-808b592e8717", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, if in city c1, truck is driven from airports l1_2 to l1_1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_2, object p2 is located, at airport l0_2, object p3 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, object a0 is at airport l1_0, object a1 is at airport l1_0, object t0 is located at airport l0_2, object t1 is located at airport l1_1, object t2 is at airport l0_1 and package p0 is present in vehicle t1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "02417853-36a6-427a-ac60-69e122a70af0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, at airport l0_0, object a0 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p0 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 does not contain airport l0_2, object a0 is not at airport l0_1, object a0 is not located at airport l1_2, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not located at airport l0_0, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not located at airport l0_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_1, object p1 is not at airport l0_2, object p1 is not at airport l1_0, object p1 is not at airport l1_2, object p1 is not located at airport l0_0, object p1 is not located at airport l0_1, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l0_1, object p3 is not at airport l1_0, object p3 is not at airport l1_2, object p3 is not located at airport l0_0, object t0 is not located at airport l0_0, object t0 is not located at airport l0_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not located at airport l0_0, object t1 is not located at airport l1_0, object t1 is not located at airport l1_2, object t2 is not at airport l0_0, object t2 is not located at airport l1_2, package p0 is not in vehicle t0, package p0 is not present in vehicle a0, package p0 is not present in vehicle a1, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle t1, package p2 is not in vehicle t0, package p2 is not located in vehicle a1, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0, package p2 is not present in vehicle t1, package p3 is not in vehicle a1, package p3 is not in vehicle t2, package p3 is not located in vehicle a0, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "b40e9250-0b58-4459-9096-7a9bc907d913", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, if truck t1 is driven from airport l1_2 to airport l1_1 in city c1, what would be all of the properties of the state? Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is located in city c0, airport l0_2 is in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is located in city c1, at airport l0_0, object a1 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object t2 is located, at airport l0_2, object a0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p3 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, city c0 contains airport l0_0, city c0 does not contain airport l1_2, city c1 contains airport l1_0, city c1 does not contain airport l0_1, object a0 is at airport l1_0, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a0 is not located at airport l1_1, object a1 is located at airport l1_0, object a1 is not at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object p0 is not at airport l0_0, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_1, object p0 is not located at airport l1_2, object p1 is at airport l1_1, object p1 is not at airport l0_1, object p1 is not located at airport l1_2, object p2 is located at airport l0_2, object p2 is not located at airport l0_0, object p2 is not located at airport l1_0, object p2 is not located at airport l1_1, object p3 is at airport l0_2, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object t0 is located at airport l0_2, object t0 is not at airport l1_1, object t0 is not at airport l1_2, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t1 is located at airport l1_1, object t1 is not at airport l1_0, object t1 is not located at airport l0_0, object t1 is not located at airport l0_1, object t2 is not at airport l1_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, package p0 is located in vehicle t1, package p0 is not in vehicle a1, package p0 is not in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p1 is not located in vehicle t2, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not in vehicle a1, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not present in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle t1, package p3 is not located in vehicle a1, package p3 is not located in vehicle t0, package p3 is not located in vehicle t2 and package p3 is not present in vehicle a0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "767d0002-e5d2-4ffe-a379-881d4b386fc7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if package p0 is unloaded from truck t1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "af7cf2ab-bb64-4034-aa36-de764173c90d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4146d300-ca5b-4f8c-b8be-545f260b22e6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "45e22242-68db-4214-bc93-875f89d95522", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, if at airport l1_0, package p0 is unloaded from truck t1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b670da57-8f3b-4f41-a97f-16286d1d41a5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, if package p0 is unloaded from truck t1 at airport l1_0, is it True or False that at airport l1_0, object p0 is located and package p0 is not present in vehicle t1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c5bd6514-f779-4db5-8c8e-52bb00e40a7b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that object p0 is not at airport l1_0 and package p0 is not located in vehicle t1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c67000bd-219f-4b11-bfee-ecc10716ad81", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that object p0 is at airport l1_0 and package p0 is not present in vehicle t1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "8cbccc68-a14c-40ae-8d83-ceed36695faa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that object p1 is at airport l0_0 and package p3 is located in vehicle t1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1eaa3621-0f3f-480d-b564-eba26eb51f82", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4a6ba4c3-d951-4e29-8aee-a0ff65368901", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "96433d13-8bb4-4af4-8206-e441d9a1b199", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if at airport l1_0, package p0 is unloaded from truck t1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a7a00ac5-d66a-495b-b08a-72933babb78a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, if package p0 is unloaded from truck t1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3d15957f-474f-4db3-809a-b95c0c049353", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if package p0 is unloaded from truck t1 at airport l1_0, what would be all of the valid properties of the state? Write None if there are none.", "answer": "airport l0_0 is in city c0, airport l0_1 is in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l1_0, object t1 is located, object a0 is located at airport l1_0, object a1 is located at airport l1_0, object p0 is located at airport l1_0, object p1 is located at airport l1_0, object p2 is at airport l0_2, object p3 is located at airport l0_2, object t0 is located at airport l0_2 and object t2 is located at airport l0_1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "58299489-5c70-4e23-9a06-a2d176385516", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, if package p0 is unloaded from truck t1 at airport l1_0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a1 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_0, object t1 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_2, object a1 is not located, at airport l1_0, object p2 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p3 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c1 does not contain airport l0_1, object a0 is not at airport l0_0, object a0 is not at airport l0_1, object a0 is not at airport l1_1, object a0 is not located at airport l0_2, object a1 is not at airport l0_1, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not at airport l0_2, object p0 is not located at airport l1_2, object p1 is not at airport l0_2, object p2 is not at airport l0_0, object p2 is not at airport l1_1, object p2 is not located at airport l0_1, object p2 is not located at airport l1_2, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, object p3 is not located at airport l1_1, object t0 is not at airport l0_1, object t0 is not at airport l1_0, object t0 is not at airport l1_2, object t1 is not at airport l0_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_2, object t1 is not located at airport l1_1, object t2 is not located at airport l0_2, object t2 is not located at airport l1_0, object t2 is not located at airport l1_2, package p0 is not in vehicle a0, package p0 is not located in vehicle t0, package p0 is not present in vehicle a1, package p0 is not present in vehicle t1, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle t2, package p1 is not present in vehicle t1, package p2 is not in vehicle a0, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not present in vehicle a1, package p3 is not present in vehicle t0, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d2e70dd0-86a2-4fca-a05e-a74ea17e11f7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, if from truck t1 package p0 is unloaded at airport l1_0, what would be all of the properties of the state? Write None if there are none.", "answer": "airport l0_1 is in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is in city c0, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_2, object a1 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p1 is located, at airport l1_1, object a0 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p3 is not located, city c0 contains airport l0_0, city c0 does not contain airport l1_2, city c1 contains airport l1_0, city c1 contains airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_2, object a0 is not at airport l0_1, object a0 is not located at airport l0_2, object a1 is located at airport l1_0, object a1 is not at airport l1_2, object a1 is not located at airport l0_0, object p0 is located at airport l1_0, object p0 is not at airport l0_0, object p0 is not at airport l0_2, object p0 is not at airport l1_2, object p0 is not located at airport l0_1, object p1 is not at airport l0_0, object p1 is not at airport l1_2, object p1 is not located at airport l0_2, object p1 is not located at airport l1_1, object p2 is at airport l0_2, object p2 is not at airport l0_0, object p2 is not at airport l1_2, object p2 is not located at airport l1_0, object p2 is not located at airport l1_1, object p3 is located at airport l0_2, object p3 is not at airport l0_1, object p3 is not at airport l1_0, object p3 is not located at airport l0_0, object p3 is not located at airport l1_1, object t0 is at airport l0_2, object t0 is not at airport l0_0, object t0 is not at airport l1_2, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l1_1, object t1 is not located at airport l0_2, object t1 is not located at airport l1_2, object t2 is at airport l0_1, object t2 is not at airport l1_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_2, package p0 is not in vehicle a0, package p0 is not located in vehicle a1, package p0 is not located in vehicle t0, package p0 is not present in vehicle t1, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle t0, package p2 is not in vehicle a0, package p2 is not in vehicle t1, package p2 is not located in vehicle t0, package p2 is not present in vehicle a1, package p2 is not present in vehicle t2, package p3 is not in vehicle a1, package p3 is not in vehicle t0, package p3 is not present in vehicle a0, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "50fe7416-e976-48d1-84f1-cd4cefcb9efe", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, if at airport l1_0, package p1 is loaded in airplane a1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d2df8460-b0a4-47ab-beee-7418b9fb44b6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, if at airport l1_0, package p1 is loaded in airplane a1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "64420706-0f10-4e97-9b28-b3d5555ac7a8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, if airplane a1 is loaded with package p1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "370db54a-464a-4496-b801-ef6303d7389f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, if airplane a1 is loaded with package p1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ffee0bc3-8539-4bbc-acd2-bbf8944e2664", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, if at airport l1_0, package p1 is loaded in airplane a1, is it True or False that at airport l1_0, object p1 is not located and package p1 is in vehicle a1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4d58cf4f-08e4-42c9-9482-866f6090318e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, is it True or False that object p1 is located at airport l1_0 and package p1 is located in vehicle a1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ba7fa7ff-a022-409a-b407-05d43bf142ed", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, if at airport l1_0, package p1 is loaded in airplane a1, is it True or False that at airport l1_0, object p1 is not located and package p1 is present in vehicle a1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "8a2a69a9-3489-4c37-a6e0-59dfc113f9d3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, if airplane a1 is loaded with package p1 at airport l1_0, is it True or False that at airport l1_0, object p0 is not located and object t0 is located at airport l0_0?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6b80d794-bac1-4fe7-a0b3-fc4203676f6f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0efca50e-0042-450b-89c8-bee36f56b1f0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4fc8aef9-c69c-4ae4-ba7a-b4c80dec9f56", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d8e197e5-98d7-4855-b276-17c5e2f6671e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ef88e01f-ce19-4fd6-89bb-b4354b612c5f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, if at airport l1_0, package p1 is loaded in airplane a1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, at airport l0_0, object p2 is located, at airport l0_1, object t2 is located, at airport l1_0, object p0 is located, city c1 contains airport l1_2, object a0 is located at airport l1_0, object a1 is at airport l1_0, object t0 is at airport l0_0, object t1 is located at airport l1_0, package p1 is in vehicle a1 and package p3 is located in vehicle t0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "69b1aa26-a906-45b2-a8cd-56752a47ac09", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a1 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t0 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t0 is not located, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a0 is not located at airport l0_0, object a0 is not located at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p0 is not located at airport l1_2, object p1 is not at airport l1_0, object p1 is not at airport l1_1, object p1 is not located at airport l0_0, object p1 is not located at airport l1_2, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_2, object p2 is not located at airport l1_0, object p3 is not at airport l0_0, object p3 is not at airport l0_1, object p3 is not at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l1_0, object t0 is not at airport l0_1, object t0 is not at airport l1_0, object t0 is not located at airport l1_1, object t1 is not at airport l0_1, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t1 is not located at airport l1_2, object t2 is not at airport l0_0, object t2 is not located at airport l1_2, package p0 is not located in vehicle a0, package p0 is not located in vehicle a1, package p0 is not located in vehicle t0, package p0 is not located in vehicle t1, package p0 is not located in vehicle t2, package p1 is not present in vehicle a0, package p1 is not present in vehicle t0, package p1 is not present in vehicle t1, package p1 is not present in vehicle t2, package p2 is not in vehicle a0, package p2 is not in vehicle a1, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "243b169f-c0fd-43d8-bbbe-6068085db80b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, if package p1 is loaded into airplane a1 at airport l1_0, what would be all of the properties of the state? Write None if there are none.", "answer": "airport l0_0 is in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_2 is located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object p0 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t1 is located, at airport l1_1, object p0 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t1 is not located, city c0 does not contain airport l1_1, city c1 contains airport l1_1, object a0 is at airport l1_0, object a0 is not at airport l0_0, object a0 is not at airport l0_1, object a0 is not at airport l1_1, object a0 is not at airport l1_2, object a1 is located at airport l1_0, object a1 is not at airport l0_0, object a1 is not at airport l1_1, object a1 is not located at airport l0_1, object p0 is at airport l1_0, object p0 is not at airport l0_1, object p0 is not at airport l1_2, object p0 is not located at airport l0_2, object p1 is not located at airport l0_0, object p1 is not located at airport l1_1, object p2 is located at airport l0_0, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_2, object p3 is not at airport l0_1, object p3 is not at airport l0_2, object p3 is not located at airport l0_0, object p3 is not located at airport l1_0, object t0 is located at airport l0_0, object t0 is not at airport l0_1, object t0 is not at airport l0_2, object t0 is not located at airport l1_0, object t1 is not at airport l0_2, object t1 is not located at airport l1_1, object t2 is located at airport l0_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_0, package p0 is not in vehicle a1, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle t0, package p0 is not located in vehicle t1, package p1 is in vehicle a1, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle t1, package p1 is not present in vehicle t0, package p2 is not in vehicle t0, package p2 is not located in vehicle t1, package p2 is not located in vehicle t2, package p2 is not present in vehicle a0, package p2 is not present in vehicle a1, package p3 is not in vehicle a0, package p3 is not in vehicle t1, package p3 is not located in vehicle t2, package p3 is not present in vehicle a1 and package p3 is present in vehicle t0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6b1790b4-1735-4fba-abb1-cba180fb5bef", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d516c51d-b0e7-4f18-9797-08207931719c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if package p1 is loaded in truck t0 at airport l0_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ecdcb3a0-0fd6-4f34-b07b-190e748caeb9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, if at airport l0_0, package p1 is loaded in truck t0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c7110190-9a29-45de-83cf-b12ace23ecf2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, if package p1 is loaded in truck t0 at airport l0_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7fb4c9e5-3e4d-456f-95ea-8288f6c27960", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if package p1 is loaded in truck t0 at airport l0_0, is it True or False that object p1 is not located at airport l0_0 and package p1 is present in vehicle t0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7aff0b9c-f684-42f4-b2ef-e20ff07cf721", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, if at airport l0_0, package p1 is loaded in truck t0, is it True or False that object p1 is at airport l0_0 and package p1 is present in vehicle t0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "53b3a92f-c3f1-4c22-9a57-1d695a566cdc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, is it True or False that object p1 is not located at airport l0_0 and package p1 is present in vehicle t0?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5495404c-b838-48a3-8cfe-5a8dca750648", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, is it True or False that object p2 is located at airport l1_2 and package p0 is present in vehicle t0?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3f7ee5e8-bde5-4dce-b996-1f580ec4ecdc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if package p1 is loaded in truck t0 at airport l0_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "dc568a1e-517f-4dfc-80bc-65e41af09f7b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3432073a-4c8b-4389-8d13-fb2767771569", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "297be34c-c7c3-443e-aa7e-49b8387b630f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, if at airport l0_0, package p1 is loaded in truck t0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a170fb30-90e6-42b8-81ca-d73969e28096", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, what would be all of the valid properties of the state? Write None if there are none.", "answer": "airport l0_0 is located in city c0, airport l0_1 is in city c0, airport l1_0 is in city c1, airport l1_1 is located in city c1, airport l1_2 is in city c1, at airport l0_0, object a1 is located, at airport l1_0, object t1 is located, city c0 contains airport l0_2, object a0 is located at airport l1_0, object t0 is at airport l0_0, object t2 is at airport l0_1, package p0 is in vehicle a1, package p1 is present in vehicle t0, package p2 is in vehicle a1 and package p3 is in vehicle t0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ea7e72a7-a4f4-4bfb-bc4c-526150ac5d95", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object p0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p2 is not located, at airport l0_2, object t0 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c1 does not contain airport l0_0, object a0 is not at airport l0_1, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a0 is not located at airport l0_0, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not at airport l1_1, object a1 is not located at airport l1_2, object p0 is not located at airport l0_2, object p1 is not at airport l0_2, object p1 is not at airport l1_0, object p1 is not at airport l1_1, object p1 is not at airport l1_2, object p2 is not at airport l0_0, object p2 is not at airport l0_2, object p2 is not located at airport l1_0, object p2 is not located at airport l1_2, object p3 is not at airport l0_1, object p3 is not at airport l1_1, object p3 is not located at airport l0_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_0, object p3 is not located at airport l1_2, object t0 is not at airport l0_1, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t2 is not located at airport l0_0, object t2 is not located at airport l0_2, object t2 is not located at airport l1_0, object t2 is not located at airport l1_1, package p0 is not in vehicle a0, package p0 is not located in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle t1, package p1 is not in vehicle a0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t2, package p1 is not present in vehicle t1, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle t2, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d6233c65-bc9b-404f-a745-fd5cc3e13101", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, if truck t0 is loaded with package p1 at airport l0_0, what would be all of the properties of the state? Write None if there are none.", "answer": "airport l0_0 is located in city c0, airport l0_2 is located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a1 is located, at airport l0_0, object p2 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t0 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t1 is located, at airport l1_0, object t2 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p3 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p2 is not located, city c0 contains airport l0_1, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c1 contains airport l1_1, city c1 contains airport l1_2, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1, object a0 is at airport l1_0, object a0 is not at airport l1_1, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a1 is not at airport l0_1, object a1 is not at airport l1_2, object a1 is not located at airport l1_0, object a1 is not located at airport l1_1, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p0 is not at airport l1_2, object p0 is not located at airport l0_0, object p0 is not located at airport l0_2, object p1 is not at airport l0_0, object p1 is not at airport l0_2, object p1 is not at airport l1_0, object p1 is not at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l1_1, object p3 is not at airport l1_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_2, object t0 is at airport l0_0, object t0 is not at airport l0_2, object t0 is not at airport l1_2, object t1 is not at airport l0_0, object t1 is not at airport l1_2, object t2 is located at airport l0_1, object t2 is not at airport l0_2, object t2 is not at airport l1_2, object t2 is not located at airport l1_1, package p0 is located in vehicle a1, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p0 is not present in vehicle t0, package p0 is not present in vehicle t1, package p1 is located in vehicle t0, package p1 is not located in vehicle a0, package p1 is not located in vehicle t1, package p1 is not present in vehicle a1, package p1 is not present in vehicle t2, package p2 is not in vehicle t1, package p2 is not located in vehicle t0, package p2 is not present in vehicle a0, package p2 is not present in vehicle t2, package p2 is present in vehicle a1, package p3 is not in vehicle a0, package p3 is not in vehicle t1, package p3 is not present in vehicle a1, package p3 is not present in vehicle t2 and package p3 is present in vehicle t0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "70d1009f-918e-4394-9469-99cc17574f70", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, if package p3 is unloaded from truck t0 at airport l0_1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "320e6f84-da27-42b2-bcb8-d004f228bd48", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if at airport l0_1, package p3 is unloaded from truck t0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d50b5c60-f2c3-490b-9e9e-5b79dac03a08", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if from truck t0 package p3 is unloaded at airport l0_1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "97526d36-0341-48df-9d2f-9e4ba9707e5b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, if at airport l0_1, package p3 is unloaded from truck t0, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9ddc3ca3-0e87-4ad0-b31b-3d5ee09202db", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if at airport l0_1, package p3 is unloaded from truck t0, is it True or False that object p3 is at airport l0_1 and package p3 is not in vehicle t0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c227b873-9761-45b1-a6f4-7fc140eedf4f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, if at airport l0_1, package p3 is unloaded from truck t0, is it True or False that at airport l0_1, object p3 is located and package p3 is present in vehicle t0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "408444af-02a2-4489-9ef1-17f55b65c241", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, if from truck t0 package p3 is unloaded at airport l0_1, is it True or False that at airport l0_1, object p3 is located and package p3 is not located in vehicle t0?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ab507b5a-ce9d-4289-8d54-0a7739d497f9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if from truck t0 package p3 is unloaded at airport l0_1, is it True or False that at airport l0_0, object t0 is located and package p0 is located in vehicle a0?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "2ce390be-65e9-4eb7-9678-3338597a5c34", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, if package p3 is unloaded from truck t0 at airport l0_1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3525786c-6ec3-4494-8996-f3dcda6c2721", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_14", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, if from truck t0 package p3 is unloaded at airport l0_1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "17bb1385-197e-4930-a0d6-5d17162395bc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if package p3 is unloaded from truck t0 at airport l0_1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "76e0595e-e6e6-4ccf-9941-21a56d7f9339", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_1_question_16", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, if at airport l0_1, package p3 is unloaded from truck t0, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7e4b3b67-29fa-4e8f-97b2-13993e4c5e55", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, if at airport l0_1, package p3 is unloaded from truck t0, what would be all of the valid properties of the state? Write None if there are none.", "answer": "airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_2 is located in city c1, at airport l0_1, object p3 is located, at airport l1_0, object t1 is located, city c0 contains airport l0_0, city c1 contains airport l1_1, object a0 is located at airport l1_0, object a1 is at airport l0_0, object t0 is located at airport l0_1, object t2 is located at airport l0_1, package p0 is located in vehicle t0, package p1 is in vehicle t0 and package p2 is present in vehicle a1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "60066154-8ce0-464a-9fe7-6aa7c0e94b15", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if from truck t0 package p3 is unloaded at airport l0_1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, at airport l0_0, object t0 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object t0 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, object a0 is not at airport l0_0, object a0 is not at airport l0_2, object a0 is not located at airport l1_1, object a0 is not located at airport l1_2, object a1 is not at airport l0_2, object p0 is not at airport l0_0, object p0 is not at airport l1_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_1, object p0 is not located at airport l0_2, object p0 is not located at airport l1_2, object p1 is not at airport l0_0, object p1 is not at airport l1_1, object p1 is not at airport l1_2, object p1 is not located at airport l1_0, object p2 is not at airport l0_0, object p2 is not at airport l1_0, object p2 is not located at airport l0_1, object p2 is not located at airport l0_2, object p2 is not located at airport l1_2, object p3 is not at airport l0_0, object p3 is not at airport l1_1, object p3 is not located at airport l1_0, object t0 is not at airport l0_2, object t0 is not at airport l1_2, object t0 is not located at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l1_1, object t1 is not located at airport l0_2, object t2 is not located at airport l0_0, object t2 is not located at airport l1_0, package p0 is not in vehicle t1, package p0 is not in vehicle t2, package p0 is not present in vehicle a0, package p0 is not present in vehicle a1, package p1 is not in vehicle t1, package p1 is not present in vehicle a0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t2, package p2 is not located in vehicle a0, package p2 is not located in vehicle t0, package p2 is not present in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle t0, package p3 is not in vehicle t2, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "a2a556d6-20d6-4768-989c-21cae18f9c5d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, if package p3 is unloaded from truck t0 at airport l0_1, what would be all of the properties of the state? Write None if there are none.", "answer": "airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_0 is in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, airport l1_2 is located in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, at airport l0_0, object a0 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object t2 is located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object t1 is located, at airport l1_1, object p0 is not located, at airport l1_1, object p1 is not located, at airport l1_1, object p2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object t0 is not located, city c0 contains airport l0_0, city c0 contains airport l0_1, city c0 contains airport l0_2, city c1 contains airport l1_1, city c1 does not contain airport l0_2, object a0 is at airport l1_0, object a0 is not located at airport l0_1, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a1 is located at airport l0_0, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not located at airport l1_1, object p0 is not at airport l0_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_0, object p0 is not located at airport l1_2, object p1 is not at airport l0_2, object p1 is not located at airport l0_0, object p1 is not located at airport l0_1, object p1 is not located at airport l1_0, object p2 is not at airport l0_0, object p2 is not at airport l0_1, object p2 is not located at airport l0_2, object p2 is not located at airport l1_0, object p3 is at airport l0_1, object p3 is not at airport l0_0, object p3 is not at airport l0_2, object p3 is not located at airport l1_0, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is located at airport l0_1, object t0 is not at airport l0_0, object t0 is not at airport l1_1, object t0 is not located at airport l0_2, object t0 is not located at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t1 is not at airport l1_1, object t1 is not at airport l1_2, object t2 is not at airport l0_0, object t2 is not located at airport l1_0, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is in vehicle t0, package p0 is not in vehicle a0, package p0 is not in vehicle t1, package p0 is not located in vehicle a1, package p0 is not located in vehicle t2, package p1 is in vehicle t0, package p1 is not in vehicle a0, package p1 is not in vehicle a1, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p2 is in vehicle a1, package p2 is not in vehicle t1, package p2 is not present in vehicle a0, package p2 is not present in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle t1, package p3 is not located in vehicle a0, package p3 is not located in vehicle a1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l1_0, object a1 is located, city c1 contains airport l1_2, object a0 is at airport l1_0, object p0 is at airport l1_2, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2, object t1 is located at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7b98b381-bbb8-4d44-8acb-c17750ac1603", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e845e2d9-4ee8-4e78-bbbd-6defd9751ae7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "077a9fae-ba26-423d-bebd-212ecede30e6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "64be3f96-724b-41d9-9f70-a2297c09b6fb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5351d575-3bea-4684-9812-d99e18edb88a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is the number of inexecutable actions equal to 413? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ddb86ef5-f54e-49ab-858d-08ee2ae5cbdc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of inexecutable actions equal to 405? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "152f6055-e1ce-48bd-aef0-a487227c62b0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "49419c42-7118-4a69-a347-032de5e8a00b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of valid properties of the state equal to 13? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "488cf805-2c1a-4f6e-a5ac-6fe5c0c39ef5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 71? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "16bb5c09-a82d-40fb-a38b-fcabd5451a48", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 60? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ad4c69ee-7fc6-4767-a5f0-7c582b9f6624", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "272f55c5-4259-444e-b282-6678645ab071", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "27826fea-7ed3-4495-a13a-3ea95a14c436", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9f574f98-ab32-4361-8800-bf713693f9ab", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b810a8ce-536d-44ea-9fb7-d051c470efb1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "61df20a8-4ed9-4e75-b958-5ebd4c3ba62d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "af3cc3f3-293a-4418-96e9-e4a3996295bc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "cce82554-77f6-424c-b405-83197c44e86d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "058a8355-52b4-438e-8418-83cc23215c75", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a315dec6-f5f1-42f4-ba46-3a887ebeabdb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "11", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7be21fda-29b8-4303-8f12-fc682cba409b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "413", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9ed3ee97-192f-45cd-ad10-1b7e668abc38", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "05339115-3ffb-4eb7-8feb-83a906d0ac9e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "71", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5af498ef-d3b6-4378-9940-233703dd32c1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f08f8c90-f80c-4fa4-a4e1-b33a123e8e07", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a7d7f81f-3ce5-4f5b-b1a2-cda32d0b6ae1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "af4e9765-878d-41df-88a4-927b746810fa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "31a32af0-8c2f-44e2-b016-39a2acda32cf", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f90c75b9-747a-41c9-a8fc-eb408ab402d0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fbf5e80c-078a-4449-8822-29f9f3cd0d09", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p2 is loaded into airplane a0 at airport l1_1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "03c5bf29-93c4-4044-b9f8-ef127d0f90fc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4eb6b258-d988-47b2-8a45-6257d753989d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "64549b28-b56d-48a6-8e5e-8b58f5c3bcac", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of executable actions equal to 14? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "92fb6c14-7b95-45c1-a659-2bcd830d8baa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is the number of executable actions equal to 15? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "26ce6bd9-848e-4e18-abe9-acaca7995972", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is the number of inexecutable actions equal to 410? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6b50dc92-09bd-46e9-a4b5-6cf3b79be544", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is the number of inexecutable actions equal to 355? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "13f862f1-5bf3-4519-8f71-1761a377c1bc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0d81938b-02d0-487f-888b-a0985392e133", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is the number of valid properties of the state equal to 16? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9049446c-3f1a-42b8-8615-54ea4852945e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 71? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0e4af6b9-e8ea-4e12-8e92-017cd43cfd33", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 84? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "68461d40-8257-44a5-8521-7d2e0e90a2ef", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e8f540bd-402d-4db5-9960-168a9470746a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "daddeeaf-d20a-46d9-a72d-799d08d22f23", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6391eccf-02ab-4ae2-b896-43611fd69034", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "55b23b59-18e6-48d1-9848-f4bedc069e41", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d85b0536-94d6-4437-9bac-cf7f44d6a486", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "13c439ca-701b-4b11-9b74-3f7b78e29df5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "2eff2fe9-1e50-4697-9927-ea189438ddbe", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "acddd505-3db4-4d11-affd-d8f1d136ce0a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0075c3a7-7f82-44af-a0b8-60dcc7f6bd71", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "14", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a2cc5efa-30de-49a9-83b7-529d5fd29531", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "410", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "73ce0008-6bd0-4da7-b1d9-b52234bf2993", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "98b6aac7-5be6-4d4d-a859-70e8ed848776", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "71", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "94bb535d-23b2-41ce-acca-374b48e8f8db", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5c4ed3f0-591b-4521-b030-3b4a206516a8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "05c37b5d-219c-4f5e-ba14-1c0b760bbda6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c648abbd-344e-4e51-b6fb-088db1ca56e2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "53a62dde-c05e-4eec-b61c-6314bb2703a8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "cce1ec1d-cdb9-4105-b01f-842501c485fd", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4fc80073-a063-4088-8d39-0a9e6633243c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_1 to airport l0_0 in city c0, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c9090d89-91f4-4838-ab78-94b28fd1a229", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7491a72a-e3c0-405a-b6a1-71f17e8353f0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "adbe4385-5ff5-4d1c-96d5-46544e737aba", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is the number of executable actions equal to 16? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e16a0e2e-a963-4157-a45a-4d1c09ce9ce6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is the number of executable actions equal to 19? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6bfb63fa-d041-4aaf-b8b1-9e93689ae839", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is the number of inexecutable actions equal to 408? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "79a5be1d-9dd4-454d-81ed-51272a4457e6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is the number of inexecutable actions equal to 410? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5e5b2e47-e6d1-44b0-ba88-bb886c257036", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c81f305b-103f-4c59-bcc7-a584c7fc4361", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is the number of valid properties of the state equal to 11? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "66263c52-a7fe-4514-bc99-334133a48d49", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 71? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "133f5a1b-591b-439b-b54b-82e9b8fe44de", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 73? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "06667a6d-cac6-4bcb-91a2-d32ae1e199c9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "48302303-da81-41e4-b727-0c9908bbf7ee", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "06d6858f-bdbd-4097-860b-ff59ce0aa998", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6f9e1287-cdcb-4f04-88bd-efaf127728e2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b80f0474-5e87-4688-84ef-8027000fc0c4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5de2be2a-e142-4884-8b8c-9c331fd254df", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1871b9a9-007f-4d38-8f9e-a8fd5fff75bf", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9fe4801b-22b1-4427-b371-a679d54ac65a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "70aef149-5d3c-4eeb-9c17-1eabf9c6388a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f2e19648-3d67-46ab-af6e-9e3ab0c70930", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "16", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c9475eb6-4d97-4476-a21b-ae683cdec349", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "408", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3f448448-fbdf-40c8-948a-8d601f9bf166", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9160b24d-4e71-4b9d-8d26-64628a8551ce", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "71", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "cad75d6a-6a0a-4412-9179-67f47f0f1edb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d00b098c-121e-4df7-b1a1-9cbcc563d0c4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d32f1419-f3e1-499c-b340-e3df094bec80", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "55b175e6-99b5-4377-be01-2743766c9651", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9bda1a28-814e-453b-aaeb-f8b2e92ad5dc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "81435b54-1feb-4875-8949-d64c759d5c56", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d85298b4-a672-487f-a449-eeba3c5e5a4f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, in city c0, truck is driven from airports l0_2 to l1_1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "5", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "17d6c125-f509-4782-9665-5d7675f2a040", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5b00a3ed-6f70-4c7d-abec-d1925d2e3d4c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7542f163-4d87-470b-aec8-a8b2ea762084", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of executable actions equal to 13? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "db8fcdf9-80ba-46b4-9ae8-7c015eb24192", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5b92e63b-2978-4019-a5f9-68f1c307c58d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of inexecutable actions equal to 411? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ed270f3f-cbe3-4295-8e0d-866efb64a0fb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is the number of inexecutable actions equal to 397? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0a9d7249-5469-405f-ba91-ead165ff56d5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "74977b06-529e-4dad-843f-2e01abd49893", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of valid properties of the state equal to 19? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3e1024e9-51af-436f-b2f6-1c7529649578", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 71? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a6ed9fe1-428f-4b83-8b05-a265ffe4a9d1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 61? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e33f1a14-e06e-4b8f-87bd-1093ea0afe93", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "033ba2f4-77fe-4527-b237-a69ef35a0911", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5a19f159-7a72-4cf7-a00f-2896478b0e7f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "fc949821-3114-4279-9cba-ac742d0e5ac7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b97ff17d-f887-4775-8d72-0f10c0b76728", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e3f7e8d1-d70f-46b5-922b-26953ff8b9fd", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0c15724d-dd50-4f8a-8d8c-51e23253d262", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3ce58c00-a6d8-4357-b3df-33d90ca96cc2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "dfd4280c-547c-4975-a256-bd9b69e4ba59", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7867d1ff-c62f-4648-b829-e768f6de4370", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "13", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5c3ffdca-04e0-4828-ae00-3e55490ff490", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "411", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ec86a773-bada-4d9d-84a9-8ed54bb56cb0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "893df7bf-2778-44e1-9d9f-0c6769b5901a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "71", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a52e67b2-dd2b-4938-ab70-b5fe561b1c70", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "14f3a3f4-fc5b-4a34-b66f-885d7072b68c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ef835866-d432-4cd6-a32c-5a6092147f3f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "706b047f-6683-4cde-80c4-f5e43dc4e9ab", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b9ef642a-7c98-4cdd-9cb2-1a161eb32089", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "32ed9985-5ab8-4707-b833-e9dfe2526240", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "58ee35bb-d8c2-44de-b5a3-3311fbd5a900", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p0 is unloaded from truck t1 at airport l1_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "7", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "62bd54b6-77db-4e3b-95d0-660b771f40fb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9254dbab-7b03-424f-a9f5-cb2b04511d1c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of objects equal to 16? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1e688497-4a9d-4671-9386-b3ba4308bdde", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of executable actions equal to 12? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "50bbec77-e6b6-4e89-9385-82c6a4c9e003", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "38dc8001-7596-4cf7-bdf3-6451203c3786", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of inexecutable actions equal to 412? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3a53bfbd-758e-4e52-a388-58b0bc7291f8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of inexecutable actions equal to 346? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "99082d0b-7d21-4bc1-a3e6-18912a3f68c7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "718b3be1-780b-47b8-b1e6-c1abe871a701", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is the number of valid properties of the state equal to 17? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "bb9d8cfa-86fc-46ab-957b-71ceee4402d7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 71? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "dd9d9bb9-478d-4a52-a97d-c84bed8a0369", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 81? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "330799d1-cece-4d41-8aa5-00b9183515e2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "14a2a5b3-3d34-472e-b2d9-bd0a0fb59fcf", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f70a7e84-121d-4250-8514-d328a0eed100", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "34ad88fd-4e4a-4f53-b9d4-d67f13284cf7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ca92684f-df80-4f1f-ad7d-8acce7e558f2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9815e8dc-1c11-48df-9c52-ec073204efbc", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f08955b1-6fa4-48f0-bcc8-0a9857f20b83", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f7b89b50-ce7a-4927-98eb-19245d61f538", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a4c0256f-f4b4-454c-b3f8-a3509711f473", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6b760bfc-4f1d-4453-a91e-b9871b0f0783", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "12", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "cee8816c-85a2-447f-b661-6a1b7d542233", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "412", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "6f868eee-14fa-4608-beb3-496cf25f34b8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "08366ecc-2cde-447e-b2f6-24cb91b7d6a6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "71", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1e96a8b2-17e7-4652-980e-fef04a4920f4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d7dd361c-47d2-43e0-8161-d5e3870efdd3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "18ffc12a-73e3-4493-b67c-c5011ae98c77", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d3eb9ed8-a5d0-487a-8a55-7b2577297bab", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e60645c8-31ad-485e-b79c-f35a8f9c79df", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c3e31397-a23d-45c9-853c-8fef8756ded2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 23?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e7741a9f-0eda-47ec-b4bc-d2d255c1def2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is loaded with package p1 at airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "12", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is in city c0, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is located in city c1, airport l1_1 is in city c1, airport l1_2 is in city c1, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, object a1 is located at airport l1_0, object p0 is at airport l1_2, object p2 is located at airport l0_2, object p3 is located at airport l0_2 and object t1 is at airport l1_2.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "574cd94b-256b-4ada-a0a9-87fb81867a14", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some objects may or may not be defined. Is t2 part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c256e858-2ab9-406b-bf84-5450f8648823", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some objects may or may not be defined. Is l_1 part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4512d5f8-6c0e-4de7-add5-133a9527221f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some properties of the state may or may not be defined. Is object t1 is located at airport l1_2 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "541c53d3-f156-40eb-9058-5138d739e055", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c1 contains airport l1_0 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ee28b5f6-b50d-4e2a-b440-25a72a447e9b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some properties of the state may or may not be defined. Is package p0 exceeds the weight limit for vehicle t1 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "671f9c13-df53-49a7-a929-5b1876d8be92", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c0's capital is place l0_2 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ee9e931e-df62-4c41-8db6-7e13779ef170", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, is action, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "bad17263-188d-41c7-b991-840d1d60274e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is action, at location l1_2, package p0 in truck t1 is stuck, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7dc9bf3a-df12-44dd-9372-62ee05b45826", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is action, in city c0, truck is driven from airports l0_2 to l0_1, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "69173f31-2eef-47d3-8bfd-5c4071e6f038", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, is action, package p1 in truck t0 is inspected at location l1_0, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4ff62559-d475-493b-8d02-8a17b7a0f486", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a1, c0, l0_2, l1_0, l1_1, l1_2, p0, p1, p3, t0 and t1, is not part of the domain? Write None if all are defined.", "answer": "c0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "90ea0af2-76c8-46eb-b09e-d933d64e62c3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, l0_2, p3 and p4, is not part of the domain? Write None if all are defined.", "answer": "p4", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "bd08b6bf-1323-4f9f-be23-a451b40d5406", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l0_1, object t2 is located, at airport l0_2, object t0 is located, object a0 is located at airport l1_0, object p1 is located at airport l1_1, object p2 is located at airport l0_2, object p3 is at airport l0_2 and package p0 is in vehicle t1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "cb60d053-5d24-4632-b7af-4f0c3ce833ac", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, city c0 contains airport l0_2 and city c1 contains airport l1_1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "83043e0b-d418-4084-8c44-a4aac44858b4", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l0_1, object t2 is located, object a0 is at airport l1_0, object a1 is located at airport l1_0, object p1 is at airport l1_1, object p2 is located at airport l0_2, object p3 is located at airport l0_2, object t0 is scanned at place l0_2, object t1 is at airport l1_2 and package p0 is located in vehicle t1, is not defined? Write None if all are defined.", "answer": "object t0 is scanned at place l0_2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "50a129f4-dd58-45a0-981c-0de3db7f58c7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l1_1 is in city c1, city c0 contains airport l0_1 and city c1 contains airport l1_0, is not defined? Write None if all are defined.", "answer": "place l1_0 is the capital the city c1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "14fd2e59-a126-4ed2-adca-264448af237b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object p0 is not located and package p3 is not in vehicle a1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "92c75568-f1ff-422b-8dc5-c4fa54c79cde", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, city c0 does not contain airport l1_2, city c1 does not contain airport l0_0 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "96b6d2c1-39e6-4675-b914-c287432ec8e9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a1 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object t1 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object p2 is not located, object a0 is not at airport l0_1, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a1 is not located at airport l1_1, object p0 is not located at airport l1_2, object p1 is not located at airport l0_0, object p1 is not located at airport l0_1, object p2 is not at airport l0_0, object p2 is not at airport l0_1, object p3 is not located at airport l0_0, object p3 is not located at airport l1_1, object p3 is not located at airport l1_2, object t0 is not at airport l0_0, object t0 is not at airport l0_1, object t0 is not at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_1, object t1 is not located at airport l1_1, object t2 is not at airport l1_0, object t2 is not located at airport l0_0, object t2 is not located at airport l1_1, package p0 is not located in vehicle a1, package p0 is not present in vehicle a0, package p0 is not present in vehicle t2, package p1 is not in vehicle a1, package p1 is not in vehicle t1, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p2 is not in vehicle a0, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0, package p2 is not present in vehicle t1, package p3 is not in vehicle a1, package p3 is not located in vehicle a0, package p3 is not located in vehicle t1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t2, is not defined? Write None if all are defined.", "answer": "package p2 is not heavy for vehicle t1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9ad1f955-61d0-4102-8211-d34517e3e176", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, city c0 does not contain airport l1_0, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_1, is not defined? Write None if all are defined.", "answer": "city c0's capital is not place l1_0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "99a716cb-28dc-414d-adad-f9f6d696e7c5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object a1 is not located, at airport l0_0, object p2 is not located, at airport l0_0, object p3 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object a1 is located, at airport l1_0, object t0 is not located, at airport l1_0, object t1 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object p1 is located, at airport l1_1, object p2 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object t1 is located, at airport l1_2, object t2 is not located, object a0 is at airport l1_0, object a0 is not at airport l0_0, object a0 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_2, object p0 is not located at airport l0_1, object p1 is not located at airport l0_1, object p1 is not located at airport l1_2, object p2 is located at airport l0_2, object p2 is not at airport l1_2, object p2 is not located at airport l0_1, object p2 is not located at airport l1_0, object p3 is at airport l0_2, object p3 is not at airport l0_1, object p3 is not located at airport l1_0, object t0 is not at airport l0_0, object t0 is not at airport l0_1, object t0 is not located at airport l1_1, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not at airport l0_2, object t2 is at airport l0_1, object t2 is not at airport l0_0, object t2 is not located at airport l1_0, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p0 is not present in vehicle a1, package p0 is present in vehicle t1, package p1 is not in vehicle t2, package p1 is not present in vehicle a0, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t2, package p2 is not located in vehicle t1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4007532f-930d-4719-8803-28a952cc042d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l1_0 is in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0 and city c1 does not contain airport l0_0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "60a19bf2-a936-4248-80fe-f89115226200", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_1, object t2 is located, at airport l1_1, object p0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t0 is not located, object p1 is not at airport l0_2, object p1 is not scanned at place l1_0, object p2 is not located at airport l0_0, object t0 is located at airport l0_2, object t0 is not at airport l0_1, object t0 is not located at airport l1_1, object t2 is not at airport l1_1, package p0 is not located in vehicle t0, package p1 is not in vehicle a1, package p2 is not present in vehicle a1 and package p3 is not in vehicle t2, is not defined? Write None if all are defined.", "answer": "object p1 is not scanned at place l1_0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4be799ae-14e5-443f-8d8a-205646638ef6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_1 is located in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is located in city c0, place l1_0 is not the capital the city c0, airport l1_1 is located in city c1, city c0 contains airport l0_0, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 contains airport l1_0, city c1 contains airport l1_2, city c1 does not contain airport l0_0 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "place l1_0 is not the capital the city c0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a7c6c4c0-e42c-41a3-a542-3f6604b24a9d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3e1fb8a7-086b-4e45-bc27-f25f2cf8bb48", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed:  and inspection of package p0 takes place in truck t1 at location l1_2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "inspection of package p0 takes place in truck t1 at location l1_2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ff760d61-01be-43a9-9145-8ffc0ecd595b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, some objects may or may not be defined. Is l1_1 part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "006b1fba-60f8-4bd4-bb53-94fb7726da67", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some objects may or may not be defined. Is a2 part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9fce9134-f70a-4662-a609-8d549b6636be", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some properties of the state may or may not be defined. Is at airport l1_0, object p1 is located part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8e67b7b4-32bb-4d72-b243-dd35fcb406d0", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is airport l1_1 is located in city c1 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "7d69675c-5073-4c72-ac1c-f50455949733", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is at place l1_0, object a1 is scanned part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "41198d07-a046-451c-931f-39bc474c264b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c1's capital is place l1_0 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8f7efb94-7c74-4838-9114-846c5c72349f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, is action, truck t0 is loaded with package p3 at airport l0_2, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "56faa89e-fd4c-40c9-a03d-cdd43f4e1cae", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is action, in city c1, truck t1 is inspected at l1_0 and refueled at l1_2, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7a264a2b-e737-4bec-8ed3-380b66aedd08", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is action, truck t1 is driven from airport l1_0 to airport l1_1 in city c0, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e7246d0b-5d9a-4c40-b3ed-81b58b4ccdba", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, is action, in city c1, truck t1 is inspected at l0_2 and refueled at l0_1, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b5af198d-056f-424f-8587-487f38fe1931", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, l0_0, l0_2, p0, p2, p3, t1 and t2, is not part of the domain? Write None if all are defined.", "answer": "t2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "e858fb8f-b8e0-4543-8331-3db9aa90ca48", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a0, l0_0, l0_1, l1_0, p0, p1 and t3, is not part of the domain? Write None if all are defined.", "answer": "t3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9e633661-8e87-47b1-abb3-48963cbf3404", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, object a0 is at airport l1_0, object a1 is at airport l1_0 and object p1 is located at airport l1_0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ed3b07d3-94ba-4ee2-89eb-1f6e45933d61", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l0_1 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, city c0 contains airport l0_0 and city c1 contains airport l1_2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f9d34e88-29cc-4cf0-add8-29239273d352", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l1_0, object a1 is located, object p1 is located at airport l1_0, object p2 is located at airport l0_2, object p3 is at airport l0_2, object t0 is at airport l0_2 and package p0 is located in vehicle t1, is not defined? Write None if all are defined.", "answer": "package p0 is heavy for vehicle t1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "97277e93-2009-4c78-b8f6-40b15502d67a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l1_2 is located in city c1, city c0 contains airport l0_0 and city c1 contains airport l1_1, is not defined? Write None if all are defined.", "answer": "place l1_1 is the capital the city c1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "a664bf9e-42ec-4069-bf46-3d7d74ad7c04", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a1 is not located, at airport l0_1, object p1 is not located, at airport l1_0, object p2 is not located, at airport l1_1, object a1 is not located, at airport l1_2, object t0 is not located, object a0 is not at airport l0_0, object a0 is not at airport l0_2, object a0 is not located at airport l0_1, object a1 is not located at airport l0_2, object p0 is not located at airport l0_2, object p1 is not at airport l1_1, object p1 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l1_1, object p3 is not located at airport l1_1, object t0 is not located at airport l0_0, object t1 is not at airport l0_2, object t1 is not located at airport l0_1, object t2 is not at airport l1_0, object t2 is not located at airport l0_0, package p0 is not in vehicle t0, package p0 is not located in vehicle a1, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not in vehicle t2, package p2 is not present in vehicle a0, package p3 is not located in vehicle a0, package p3 is not present in vehicle a1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "76dbe627-9a65-4f18-ac5a-f0593d7ae040", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_1 is not in city c1airport l0_1 is not located in city c1, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d2f14946-a170-497a-acf7-83eb25b32e8a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a1 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object a1 is not located, at airport l0_1, object t1 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object t1 is not located, object a0 is not at airport l0_0, object a0 is not at airport l1_2, object a0 is not located at airport l1_1, object a1 is not located at airport l1_2, object p1 is not at airport l0_0, object p1 is not at airport l1_1, object p2 is not located at airport l0_1, object p3 is not located at airport l1_2, object t1 is not at airport l0_2, object t1 is not located at airport l1_1, object t2 is not at airport l1_2, package p0 is not present in vehicle t0, package p0 is not present in vehicle t2, package p1 is not in vehicle t0, package p2 is not present in vehicle a1 and package p3 is not in vehicle a0, is not defined? Write None if all are defined.", "answer": "package p3 does not exceed the weight limit for vehicle a0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "d8b8af25-13a1-4e5d-a0fe-94f2b8e5e88d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, place l1_2 is not the capital the city c0, city c0 does not contain airport l1_0 and city c1 does not contain airport l0_0, is not defined? Write None if all are defined.", "answer": "place l1_2 is not the capital the city c0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "da130796-759f-4a2c-b7e5-c55a3c7a025c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object t0 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p0 is not located, at airport l1_0, object p3 is not located, at airport l1_1, object t2 is not located, object a1 is not located at airport l0_0, object p0 is not at airport l0_1, object p1 is located at airport l1_0, object p3 is not located at airport l0_1, object t0 is not located at airport l0_1, package p0 is located in vehicle t1, package p1 is not located in vehicle t2, package p1 is not present in vehicle a1, package p3 is not in vehicle a0 and package p3 is not in vehicle a1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0fe6d9a6-a53b-49a2-8997-9501fbf33876", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and from truck t1 package p1 is unloaded at airport l1_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_0 is in city c0, airport l0_1 is in city c0, airport l1_0 is in city c1, airport l1_2 is in city c1, city c0 does not contain airport l1_1, city c0 does not contain airport l1_2, city c1 contains airport l1_1, city c1 does not contain airport l0_0, city c1 does not contain airport l0_1 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "f5e01e6c-cd80-4bb9-a5d7-67138aa8dc91", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and package p1 is unloaded from truck t1 at airport l1_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object t0 is not located, at airport l0_1, object a1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p0 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object p0 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, object a0 is not at airport l0_1, object a0 is not at airport l1_2, object a0 is not located at airport l0_0, object a0 is not located at airport l1_1, object a1 is not at airport l0_2, object a1 is not located at airport l0_0, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not located at airport l0_1, object p1 is located at airport l1_0, object p1 is not at airport l0_1, object p1 is not at airport l1_1, object p1 is not located at airport l1_2, object p2 is at airport l0_2, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p3 is located at airport l0_2, object p3 is not at airport l0_0, object p3 is not scanned at place l0_1, object t0 is not at airport l0_1, object t0 is not at airport l1_1, object t1 is at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l0_1, object t1 is not located at airport l0_2, object t2 is located at airport l0_1, object t2 is not located at airport l0_0, object t2 is not located at airport l1_1, package p0 is not in vehicle t0, package p0 is not located in vehicle t2, package p0 is not present in vehicle a0, package p0 is not present in vehicle a1, package p0 is present in vehicle t1, package p1 is not in vehicle a1, package p1 is not in vehicle t2, package p1 is not located in vehicle t0, package p1 is not present in vehicle t1, package p2 is not in vehicle t1, package p2 is not located in vehicle t0, package p2 is not present in vehicle a0, package p2 is not present in vehicle a1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle t2, package p3 is not present in vehicle a1, package p3 is not present in vehicle t0 and package p3 is not present in vehicle t1, is not defined? Write None if all are defined.", "answer": "object p3 is not scanned at place l0_1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a7290a93-0421-4064-becc-92010ac83eaa", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_0 is in city c0, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_1 is in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is located in city c1, airport l1_2 is in city c1, city c0 contains airport l0_2, city c0 does not contain airport l1_1 and city c0 does not contain airport l1_2, is not defined? Write None if all are defined.", "answer": "place l0_1 is the capital the city c0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "ddcbabee-8f2a-4c67-a169-a8cdc4e8cc45", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "39dd72b4-033f-42b8-adb6-a1ae540eb21f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: inspection of package p0 takes place in truck t1 at location l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0 and at airport l1_0, package p1 is unloaded from truck t1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "inspection of package p0 takes place in truck t1 at location l1_2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "049c85fc-472e-40b8-bca1-b5b3d14a6a2c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Is l0_2 part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3ecacc78-5be7-4ea2-964f-3fd7a2d3249c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Is a2 part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0069aa48-233b-4d1c-80f9-483617047c3c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is object a0 is located at airport l1_0 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "5ba3e6a3-23c5-4fed-b33e-8852c4eff11a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is airport l1_2 is located in city c1 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "41d65999-7ffe-40e4-ae99-cb8ce5bfd71b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is at place l1_0, object a1 is scanned part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "961d456b-e2ac-4ecf-a554-8f98921c0f1e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c0's capital is place l0_2 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "e5221b28-32b3-4aac-b595-92c4c999a7f2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, is action, truck t2 is driven to airport l0_0 from airport l0_1 in city c0, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "04f59964-242a-40ab-93d1-eceb6e0d82f8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is action, in city c0, truck t0 is inspected at l0_0 and refueled at l0_1, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "2e470381-7c7f-4dfe-8980-888f43ed3514", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is action, package p3 is unloaded from truck t1 at airport l0_0, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "56b0e713-3f8b-4571-ab50-fe9e0fb85589", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, is action, at location l0_2, package p0 is lost from airplane a1, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "85f7d029-ac00-4dea-8868-2e9fee505e8f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, c0 and l0_1, is not part of the domain? Write None if all are defined.", "answer": "c0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5519c8cf-3a75-4924-905d-d870a54e9e92", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a0, a1, c0, l0_0, l0_1, l1_0, l1_1, l1_2, p0, p1, p3, t0 and t3, is not part of the domain? Write None if all are defined.", "answer": "t3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4a483554-8298-4eed-a64c-e1ffb3b600be", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l1_0, object t1 is located, object a0 is located at airport l1_0, object p0 is at airport l1_0, object p2 is located at airport l0_0 and object t2 is at airport l0_1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "24c9eeb1-e399-4899-8800-58c09b3d16a9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l0_0 is in city c0, airport l0_2 is located in city c0, airport l1_1 is in city c1 and city c0 contains airport l0_1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "0aae2725-8937-45f9-9893-11bb6839f705", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l0_0, object p2 is located, at airport l1_0, object p1 is located and object p0 is located at airport l1_0, is not defined? Write None if all are defined.", "answer": "object p0 is scanned at place l1_0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "f8ddd4e5-1d46-467b-b44f-e5735202d564", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l1_1 is located in city c1 and city c0 contains airport l0_0, is not defined? Write None if all are defined.", "answer": "place l0_0 is the capital the city c0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "d9e7a5f5-54da-4b07-a3a0-658e2bc1c0a2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a0 is not located, at airport l0_0, object p1 is not located, at airport l0_0, object p3 is not located, at airport l0_1, object a0 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object t0 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object t0 is not located, at airport l0_2, object t2 is not located, at airport l1_1, object t0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p3 is not located, object a1 is not at airport l1_1, object a1 is not located at airport l0_0, object a1 is not located at airport l0_1, object a1 is not located at airport l0_2, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not at airport l0_1, object p0 is not at airport l0_2, object p0 is not at airport l1_2, object p0 is not located at airport l1_1, object p1 is not at airport l0_2, object p1 is not at airport l1_1, object p1 is not located at airport l0_1, object p2 is not located at airport l1_2, object p3 is not at airport l0_2, object p3 is not located at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_2, object t1 is not at airport l1_1, object t1 is not located at airport l0_0, object t2 is not at airport l0_0, object t2 is not at airport l1_0, package p0 is not in vehicle a0, package p0 is not in vehicle a1, package p0 is not in vehicle t1, package p0 is not located in vehicle t0, package p0 is not present in vehicle t2, package p1 is not located in vehicle a1, package p1 is not present in vehicle t0, package p2 is not in vehicle t0, package p2 is not in vehicle t2, package p2 is not located in vehicle a1, package p2 is not located in vehicle t1, package p2 is not present in vehicle a0 and package p3 is not located in vehicle a0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "c0976085-cb75-4ff7-b542-e6bef48fb993", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and at airport l0_0, package p2 is unloaded from truck t0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "866e1473-ca35-4695-a041-5433f0ffb07d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a0 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p1 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a1 is not located, at airport l1_1, object t1 is not located, at airport l1_2, object t1 is not located, object a0 is not at airport l0_1, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a1 is not at airport l0_1, object a1 is not located at airport l0_0, object a1 is not located at airport l0_2, object p1 is not at airport l0_2, object p1 is not located at airport l1_2, object p2 is not at airport l0_1, object p2 is not at airport l0_2, object p2 is not at airport l1_0, object p2 is not at airport l1_2, object p2 is not located at airport l1_1, object p3 is not at airport l0_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_0, object p3 is not located at airport l0_2, object p3 is not located at airport l1_0, object p3 is not located at airport l1_1, object t0 is not at airport l1_0, object t0 is not at airport l1_1, object t0 is not located at airport l0_2, object t0 is not located at airport l1_2, object t1 is not located at airport l0_1, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, package p0 is not in vehicle t2, package p0 is not located in vehicle a0, package p0 is not located in vehicle t1, package p0 is not present in vehicle t0, package p1 is not in vehicle t2, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not located in vehicle t2, package p2 is not present in vehicle a1, package p3 is not in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t1, is not defined? Write None if all are defined.", "answer": "object t2 is not scanned at place l1_1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "eb63048e-db10-4747-95df-354c54bd0415", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 does not contain airport l1_1, city c1's capital is not place l0_0, city c1 does not contain airport l0_1 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "city c1's capital is not place l0_0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9aa34636-a861-48d3-951b-7d53647615d9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_1, object p3 is not located, at airport l0_2, object p3 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object p2 is not located, at airport l1_2, object p3 is not located, object a1 is at airport l1_0, object a1 is not located at airport l0_1, object a1 is not located at airport l1_2, object p0 is not at airport l0_2, object p1 is not at airport l0_2, object p1 is not at airport l1_1, object p2 is not located at airport l0_1, object t0 is at airport l0_0, object t0 is not at airport l1_1, object t0 is not located at airport l0_1, object t1 is not at airport l1_2, object t1 is not located at airport l1_1, object t2 is not at airport l0_0, object t2 is not located at airport l1_0, object t2 is not located at airport l1_2, package p0 is not in vehicle a0, package p1 is not located in vehicle a0, package p1 is not located in vehicle a1, package p1 is not located in vehicle t2, package p1 is not present in vehicle t0, package p1 is not present in vehicle t1, package p2 is not located in vehicle a1, package p2 is not present in vehicle a0 and package p3 is not present in vehicle t1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "bcb41c9b-4117-40b3-a25f-3b64622436d3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_2 is located in city c0, city c0 does not contain airport l1_1 and city c1 does not contain airport l0_1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "5f3ccb3f-5648-4491-8e4a-31af38a654f9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object t0 is located, at airport l0_0, object t2 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p2 is not located, at airport l0_2, object p1 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p1 is located, at airport l1_0, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object t0 is not located, object a0 is not located at airport l0_1, object a1 is not at airport l0_1, object a1 is not located at airport l0_0, object a1 is not located at airport l0_2, object a1 is not located at airport l1_1, object a1 is not located at airport l1_2, object p0 is scanned at place l1_0, object p1 is not at airport l1_1, object p1 is not at airport l1_2, object p1 is not located at airport l0_0, object p2 is at airport l0_0, object p2 is not located at airport l1_1, object p2 is not located at airport l1_2, object p3 is not at airport l1_0, object p3 is not located at airport l0_0, object p3 is not located at airport l0_1, object p3 is not located at airport l0_2, object t0 is not located at airport l0_1, object t0 is not located at airport l1_0, object t0 is not located at airport l1_1, object t1 is at airport l1_0, object t1 is not at airport l0_1, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t2 is at airport l0_1, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is not in vehicle t0, package p0 is not in vehicle t1, package p0 is not in vehicle t2, package p0 is not located in vehicle a1, package p0 is not present in vehicle a0, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not located in vehicle t0, package p2 is not located in vehicle a0, package p2 is not located in vehicle a1, package p2 is not located in vehicle t0, package p2 is not located in vehicle t2, package p2 is not present in vehicle t1, package p3 is located in vehicle t0, package p3 is not in vehicle t1, package p3 is not located in vehicle t2 and package p3 is not present in vehicle a0, is not defined? Write None if all are defined.", "answer": "object p0 is scanned at place l1_0", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b2126f88-f6ef-4a7f-8a18-b59179e25333", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and from truck t0 package p2 is unloaded at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, place l0_2 is not the capital the city c1 and airport l1_0 is not in city c0airport l1_0 is not located in city c0, is not defined? Write None if all are defined.", "answer": "place l0_2 is not the capital the city c1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d016a01e-830b-4ed0-882e-aecbf3d35d58", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "cd831714-4e7c-4b1f-b3cb-2812156d21d7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, inspection of package p2 takes place in truck t0 at location l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0 and package p2 is unloaded from truck t0 at airport l0_0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "inspection of package p2 takes place in truck t0 at location l0_2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4d502691-0f1b-44c9-a03a-c3dbf252b32f", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Is l1_2 part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "24f71a73-ae40-4e79-a5f6-b842e26efe8a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Is t3 part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "51c7a48b-3407-49f2-a15a-1616c572f01d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is package p0 is located in vehicle a1 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "2a8b18c8-f23a-4839-9f8c-c6e617d6357d", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. Is airport l1_1 is in city c1 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "67cf2e78-5db6-496f-a06e-5f253b75dfe3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some properties of the state may or may not be defined. Is at place l1_0, object a0 is scanned part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "59d5ab08-7f93-453a-99b4-bd2adbbff946", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c1's capital is place l1_0 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "5fd9a172-87cd-4faf-9cbc-3e27f4ec3405", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is action, truck t0 is loaded with package p1 at airport l0_0, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0707e8cd-6a00-47b8-9c1f-1ed3dcd431da", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is action, at location l0_0, package p1 is inspected in truck t0, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1a8e1fc0-81b9-4fab-b4b4-c7b3da98f857", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, is action, truck t0 is driven from airport l1_0 to airport l0_2 in city c0, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "05a726d2-4d70-4391-8ee4-fa0ce4c637fb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, is action, at location l0_1, package p1 is inspected in truck t0, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3b0a405c-4076-46aa-afce-a0aaed6a95f5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a0, a1, c0, c1, l0_0, l1_0, l1_1, l1_2, p0, p1, p2, t0 and t2, is not part of the domain? Write None if all are defined.", "answer": "t2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "578fcf1c-91f1-40a0-b51d-d35ddf84f619", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a0, a1, c0, c1, l0_1, l0_2, l1_0, l1_1, p0, p1, p2, t0, t1 and t3, is not part of the domain? Write None if all are defined.", "answer": "t3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "dbd4e362-f48a-4e53-ae6c-4b9e4f178133", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l0_0, object t0 is located, object a0 is located at airport l1_0 and package p2 is located in vehicle a1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "62505f80-c9c5-4e69-ad20-ceb9ca976012", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, city c0 contains airport l0_1 and city c1 contains airport l1_0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "5afd2296-85b9-45e3-8b5a-e56be16c8efb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l0_0, object p1 is located, object a1 is at airport l0_0, object t0 is at airport l0_0, object t1 is at airport l1_0, object t2 is at airport l0_1, package p0 is present in vehicle a1, package p2 is present in vehicle a1 and package p3 is located in vehicle t0, is not defined? Write None if all are defined.", "answer": "at place l0_1, object t2 is scanned", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ab598597-0e64-427b-8ef0-e7dd7fdb3865", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l0_0 is located in city c0, airport l1_1 is located in city c1 and city c1 contains airport l1_2, is not defined? Write None if all are defined.", "answer": "place l1_2 is the capital the city c1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "2f80ebc6-eeb3-4e18-8d8f-d904ecaaad7a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a0 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object t0 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object t1 is not located, at airport l0_2, object t2 is not located, at airport l1_0, object p0 is not located, at airport l1_1, object t1 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object a1 is not located, at airport l1_2, object t2 is not located, object a0 is not at airport l0_1, object a1 is not located at airport l0_1, object a1 is not located at airport l1_0, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p1 is not at airport l0_1, object p1 is not at airport l1_2, object p1 is not located at airport l1_1, object p2 is not at airport l0_0, object p2 is not at airport l1_0, object p3 is not at airport l1_0, object t0 is not at airport l0_2, object t0 is not at airport l1_2, object t2 is not located at airport l1_0, package p0 is not in vehicle t1, package p0 is not present in vehicle a0, package p1 is not in vehicle t1, package p1 is not located in vehicle a1, package p1 is not present in vehicle a0, package p2 is not located in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not in vehicle a1, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "aac98800-25dc-4724-a327-89076b35b56b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_1 is not in city c1airport l0_1 is not located in city c1, airport l1_1 is not in city c0airport l1_1 is not located in city c0, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "f0433a17-53cf-462d-b113-4b8c90973c3a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_1, object a0 is not located, at airport l0_1, object p3 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p3 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p2 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object p1 is not located, object p1 is not scanned at place l1_2, at airport l1_2, object p3 is not located, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object p0 is not at airport l0_1, object p0 is not located at airport l0_0, object p1 is not located at airport l0_1, object p2 is not at airport l0_1, object p2 is not located at airport l0_2, object t0 is not located at airport l0_2, object t1 is not at airport l0_0, object t1 is not located at airport l1_1, object t2 is not located at airport l0_0, package p0 is not present in vehicle t2, package p1 is not located in vehicle t0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not located in vehicle t1, package p2 is not present in vehicle t2 and package p3 is not in vehicle a0, is not defined? Write None if all are defined.", "answer": "object p1 is not scanned at place l1_2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "6a66f455-1c93-483d-a042-fdb151ca0a64", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_0 is not in city c1airport l0_0 is not located in city c1, place l1_1 is not the capital the city c0 and city c0 does not contain airport l1_0, is not defined? Write None if all are defined.", "answer": "place l1_1 is not the capital the city c0", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "4034f0b2-4f94-418c-a9dc-ade8218471e1", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object p2 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object t2 is located, at airport l0_2, object p3 is not located, at airport l0_2, object t0 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object t1 is located, at airport l1_1, object a0 is not located, at airport l1_2, object p1 is not located, at airport l1_2, object p3 is not located, object a0 is located at airport l1_0, object a0 is not at airport l0_1, object a0 is not located at airport l0_0, object a0 is not located at airport l0_2, object a0 is not located at airport l1_2, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not at airport l1_1, object a1 is not located at airport l1_2, object p0 is not at airport l1_1, object p0 is not located at airport l0_2, object p0 is not located at airport l1_2, object p1 is located at airport l0_0, object p1 is not at airport l0_1, object p1 is not at airport l1_1, object p1 is not located at airport l0_2, object p2 is not at airport l0_2, object p2 is not at airport l1_0, object p2 is not at airport l1_1, object p2 is not located at airport l1_2, object p3 is not at airport l1_1, object p3 is not located at airport l0_0, object p3 is not located at airport l0_1, object p3 is not located at airport l1_0, object t0 is at airport l0_0, object t0 is not at airport l1_0, object t0 is not located at airport l0_1, object t0 is not located at airport l1_2, object t1 is not at airport l0_1, object t1 is not at airport l1_1, object t1 is not at airport l1_2, object t1 is not located at airport l0_0, object t1 is not located at airport l0_2, object t2 is not at airport l0_2, object t2 is not at airport l1_1, object t2 is not at airport l1_2, object t2 is not located at airport l0_0, object t2 is not located at airport l1_0, package p0 is located in vehicle a1, package p0 is not in vehicle a0, package p0 is not in vehicle t0, package p0 is not in vehicle t1, package p0 is not located in vehicle t2, package p1 is not in vehicle a1, package p1 is not in vehicle t0, package p1 is not present in vehicle a0, package p1 is not present in vehicle t1, package p1 is not present in vehicle t2, package p2 is in vehicle a1, package p2 is not in vehicle a0, package p2 is not located in vehicle t0, package p2 is not present in vehicle t2, package p3 is not located in vehicle a1, package p3 is not located in vehicle t2 and package p3 is not present in vehicle a0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0bd87647-526d-4a6a-a70a-26db031b32f9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_1 is located in city c0, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_2 is located in city c1, city c0 contains airport l0_0, city c0 does not contain airport l1_0, city c0 does not contain airport l1_1, city c1 contains airport l1_0 and city c1 does not contain airport l0_1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "13b8a8dc-3970-45eb-abfc-dc7cd934a1c9", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and from airplane a1 package p1 is unloaded at airport l0_0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object p0 is not located, at airport l0_1, object a0 is not located, at airport l0_2, object a0 is not located, at airport l1_0, object p2 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object t0 is not located, at airport l1_2, object t1 is not located, at airport l1_2, object t2 is not located, object a0 is not located at airport l0_0, object a0 is not located at airport l1_1, object a0 is not located at airport l1_2, object a1 is at airport l0_0, object a1 is not at airport l1_2, object a1 is not located at airport l0_1, object p0 is not located at airport l0_2, object p1 is at airport l0_0, object p1 is not at airport l1_0, object p2 is not at airport l0_2, object p3 is not located at airport l0_0, object t2 is not located at airport l0_0, package p1 is not in vehicle a0, package p1 is not located in vehicle a1, package p2 is not present in vehicle t0, package p3 is not located in vehicle a0, package p3 is not present in vehicle t2 and package p3 is present in vehicle t0, is not defined? Write None if all are defined.", "answer": "object p2 is not scanned at place l0_2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "1bd62b47-5b54-42dc-8e3a-2b1189cd0d6e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_0 is located in city c0, airport l0_1 is not in city c1airport l0_1 is not located in city c1, city c0's capital is place l0_2, airport l1_2 is in city c1, airport l1_2 is not in city c0airport l1_2 is not located in city c0, city c0 does not contain airport l1_1 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "city c0's capital is place l0_2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9b9fb0a8-dc69-42d0-9846-3ecb913f1e45", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0 and package p1 is unloaded from airplane a1 at airport l0_0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "147e34e0-6835-4ea7-b184-bd309e27bb4a", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is inspected at l1_1 and refueled at l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0 and at airport l0_0, package p1 is unloaded from airplane a1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "truck t1 is inspected at l1_1 and refueled at l1_0 in city c1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "7da15768-b9a6-4a0d-85b0-0c764e3c11e2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, some objects may or may not be defined. Is p3 part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9cebaf48-d0b9-4706-8d84-358058a2cb8c", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, some objects may or may not be defined. Is l_1 part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "0e383cff-badf-49d7-9e1d-de43d5791de7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. Is package p3 is located in vehicle t0 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "8aa40914-41f6-4daa-b1ee-dbcd7866b2d5", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c0 contains airport l0_0 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "1b3c6a98-7bc1-4e08-82ff-b1b367b12b99", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. Is package p2 exceeds the weight limit for vehicle a1 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "06febd3a-52a8-480c-85ac-467484d3bcd2", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_2_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. Is city c0's capital is place l0_1 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "6c0b031b-b2a7-452c-9ebe-794b843ecebb", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is action, package p2 is unloaded from airplane a1 at airport l0_0, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "c8213f8d-c0b3-45da-8594-a7c6a4639ef3", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is action, truck t0 is inspected at l0_1 and refueled at l0_0 in city c0, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "b787f353-b74d-4be5-82d3-f4cbab87bc78", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven to airport l1_0 from airport l1_1 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, is action, at airport l0_1, package p1 is unloaded from airplane a0, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "a53e23dd-b03d-4d9e-bc10-b0c515624137", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, is action, at location l0_1, package p1 in truck t2 is stuck, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "13e47210-9713-4fc2-a552-f532cd024aed", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a0, c0, c1, l0_0, l0_1, l0_2, l1_0, l1_1, l1_2, p0, p2, p3, t0 and t1, is not part of the domain? Write None if all are defined.", "answer": "l0_1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "9651d7c8-95d8-474c-8f98-589abae31b8b", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, a0, a2, c0, c1, l0_0, l0_1, l0_2, l1_0, l1_1, l1_2, p1, p2, t1 and t2, is not part of the domain? Write None if all are defined.", "answer": "a2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "4e6a7d48-74a5-4405-8862-6c5d7b526557", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, object a0 is located at airport l1_0, object t0 is located at airport l0_1 and package p1 is located in vehicle t0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "22a9da61-625b-4e64-b71c-89571be3b905", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l0_1 is located in city c0 and airport l0_2 is in city c0, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "ed3e6b2c-c9d7-4781-91d3-2fd4c8a100f8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, package p1 is loaded in truck t0 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, at airport l0_0, object a1 is located, object a0 is located at airport l1_0, object t0 is at airport l0_1, package p1 is in vehicle t0, package p2 is located in vehicle a1 and package p3 is in vehicle t0, is not defined? Write None if all are defined.", "answer": "at place l1_0, object a0 is scanned", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "38cd5918-eead-427e-87ad-87a0b9f58085", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, in city c1, truck is driven from airports l1_2 to l1_1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and in city c0, truck is driven from airports l0_0 to l0_1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, airport l0_1 is located in city c0, airport l0_2 is located in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, airport l1_2 is located in city c1 and city c0 contains airport l0_0, is not defined? Write None if all are defined.", "answer": "place l0_2 is the capital the city c0", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": true}
{"id": "2ca3b4ac-d83d-4ee6-b940-cebc7dd9de60", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object p3 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object t0 is not located, at airport l1_1, object a1 is not located, at airport l1_2, object p3 is not located, object a0 is not at airport l0_2, object a0 is not at airport l1_1, object a0 is not located at airport l0_0, object a1 is not at airport l0_1, object a1 is not at airport l0_2, object a1 is not located at airport l1_2, object p0 is not at airport l0_0, object p0 is not at airport l0_2, object p0 is not at airport l1_0, object p1 is not at airport l0_0, object p1 is not at airport l0_2, object p1 is not at airport l1_1, object p1 is not located at airport l0_1, object p2 is not at airport l0_2, object p2 is not at airport l1_0, object p2 is not located at airport l1_1, object p3 is not at airport l0_2, object p3 is not located at airport l1_0, object t0 is not at airport l1_2, object t0 is not located at airport l1_0, object t1 is not at airport l0_0, object t1 is not at airport l0_2, object t1 is not located at airport l1_1, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is not in vehicle a1, package p0 is not in vehicle t2, package p0 is not present in vehicle a0, package p1 is not in vehicle a0, package p2 is not in vehicle a0, package p2 is not present in vehicle t0, package p2 is not present in vehicle t2, package p3 is not in vehicle a0, package p3 is not located in vehicle t2 and package p3 is not present in vehicle a1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "8e873642-9032-4113-85fe-918b8f9b3580", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_12", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, truck t1 is loaded with package p1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_2 is not in city c1airport l0_2 is not located in city c1, city c0 does not contain airport l1_0, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "4405b0b3-1dcf-43e7-ad82-3c31f209c3e8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, from truck t0 package p2 is unloaded at airport l0_0, airplane a1 is loaded with package p1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, at airport l0_0, package p2 is loaded in airplane a1, at airport l0_0, package p1 is unloaded from airplane a1, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, at airport l0_0, object a0 is not located, at airport l0_0, object p3 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p1 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object t0 is not located, at airport l1_0, object p0 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object p2 is not located, at airport l1_1, object t2 is not located, at airport l1_2, object p1 is not located, object a0 is not located at airport l0_1, object a0 is not located at airport l0_2, object a0 is not located at airport l1_1, object a0 is not located at airport l1_2, object a1 is not at airport l1_2, object a1 is not located at airport l0_1, object a1 is not located at airport l1_1, object p0 is not at airport l0_1, object p0 is not at airport l1_1, object p0 is not located at airport l0_0, object p0 is not located at airport l0_2, object p1 is not at airport l1_1, object p1 is not located at airport l0_0, object p2 is not at airport l0_1, object p2 is not located at airport l0_0, object p2 is not located at airport l0_2, object p2 is not located at airport l1_2, object p3 is not at airport l1_0, object p3 is not at airport l1_1, object p3 is not at airport l1_2, object p3 is not located at airport l0_1, object p3 is not located at airport l0_2, object t0 is not at airport l0_0, object t0 is not at airport l1_1, object t0 is not located at airport l1_2, object t1 is not at airport l1_2, object t1 is not located at airport l0_2, object t1 is not located at airport l1_1, object t2 is not at airport l0_0, package p0 is not in vehicle a0, package p0 is not in vehicle a1, package p0 is not in vehicle t1, package p1 is not located in vehicle t1, package p1 is not located in vehicle t2, package p2 is not in vehicle a0, package p2 is not in vehicle t1, package p2 is not in vehicle t2, package p3 is not located in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t1, is not defined? Write None if all are defined.", "answer": "at place l0_1, object a1 is not scanned", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "cdca99fa-8c68-43ac-bcf0-743bddab2624", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_16", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, package p1 is loaded in truck t1 at airport l1_1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, from truck t1 package p1 is unloaded at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown to airport l0_0 from airport l1_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_2 is not in city c1airport l0_2 is not located in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_1 is not in city c0airport l1_1 is not located in city c0, city c0 does not contain airport l1_2 and city c1 does not contain airport l0_1, is not defined? Write None if all are defined.", "answer": "place l0_1 is not the capital the city c1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": false}
{"id": "9c68bc29-c6bb-47fa-b96d-0a57da13d8d8", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, truck t1 is loaded with package p1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, from truck t1 package p1 is unloaded at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, from truck t0 package p2 is unloaded at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 is flown to airport l0_0 from airport l1_0, at airport l0_0, package p2 is loaded in airplane a1, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, at airport l0_0, package p0 is unloaded from airplane a1, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object a1 is located, at airport l0_0, object p3 is not located, at airport l0_0, object t0 is not located, at airport l0_0, object t1 is not located, at airport l0_1, object p0 is not located, at airport l0_1, object p2 is not located, at airport l0_1, object p3 is not located, at airport l0_1, object t1 is not located, at airport l0_2, object a0 is not located, at airport l0_2, object p1 is not located, at airport l0_2, object p2 is not located, at airport l0_2, object p3 is not located, at airport l0_2, object t1 is not located, at airport l1_0, object a1 is not located, at airport l1_0, object p1 is not located, at airport l1_0, object p3 is not located, at airport l1_0, object t0 is not located, at airport l1_1, object p3 is not located, at airport l1_2, object a0 is not located, at airport l1_2, object p0 is not located, at airport l1_2, object p3 is not located, at airport l1_2, object t1 is not located, object a0 is located at airport l1_0, object a0 is not at airport l0_1, object a0 is not located at airport l0_0, object a0 is not located at airport l1_1, object a1 is not at airport l1_1, object a1 is not at airport l1_2, object a1 is not located at airport l0_2, object p0 is not at airport l1_0, object p0 is not located at airport l0_2, object p0 is not located at airport l1_1, object p1 is not at airport l0_1, object p1 is not at airport l1_1, object p1 is not located at airport l0_0, object p2 is not at airport l1_1, object p2 is not at airport l1_2, object p2 is not located at airport l0_0, object p2 is not located at airport l1_0, object t0 is at airport l0_1, object t0 is not at airport l1_2, object t0 is not located at airport l0_2, object t0 is not located at airport l1_1, object t1 is located at airport l1_0, object t1 is not located at airport l1_1, object t2 is located at airport l0_1, object t2 is not at airport l0_0, object t2 is not at airport l1_0, object t2 is not at airport l1_2, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, package p0 is in vehicle t0, package p0 is not in vehicle a0, package p0 is not in vehicle t1, package p0 is not located in vehicle t2, package p0 is not present in vehicle a1, package p1 is not in vehicle a0, package p1 is not in vehicle t2, package p1 is not located in vehicle a1, package p1 is not present in vehicle t1, package p2 is in vehicle a1, package p2 is not in vehicle a0, package p2 is not in vehicle t0, package p2 is not in vehicle t1, package p2 is not located in vehicle t2, package p3 is located in vehicle t0, package p3 is not located in vehicle a0, package p3 is not located in vehicle t1, package p3 is not present in vehicle a1 and package p3 is not present in vehicle t2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "d6dcf922-e1cf-4479-a6fc-a187f8ea16c6", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_20", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, at airport l1_0, package p0 is unloaded from truck t1, truck t0 is loaded with package p3 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, package p2 is unloaded from truck t0 at airport l0_0, package p1 is loaded into airplane a1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, at airport l0_0, package p1 is loaded in truck t0, package p0 is unloaded from airplane a1 at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_0 is not in city c1airport l0_0 is not located in city c1, airport l0_2 is in city c0, city c0 does not contain airport l1_1, city c1 contains airport l1_2 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "66a6c1b3-485d-486d-b8fd-8d0fc02f0c91", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: at airport l1_2, package p0 is loaded in truck t1, in city c1, truck is driven from airports l1_2 to l1_1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, at airport l1_0, package p0 is unloaded from truck t1, package p3 is loaded in truck t0 at airport l0_2, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, at airport l0_0, package p2 is unloaded from truck t0, package p1 is loaded into airplane a1 at airport l1_0, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, truck t0 is loaded with package p1 at airport l0_0, at airport l0_0, package p0 is unloaded from airplane a1, truck t0 is loaded with package p0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, at airport l0_0, object p1 is not located, at airport l0_0, object t1 is not located, at airport l0_0, object t2 is not located, at airport l0_1, object p2 is not located, at airport l0_2, object a1 is not located, at airport l0_2, object p0 is not located, at airport l0_2, object p2 is not located, at airport l1_0, object a0 is located, at airport l1_0, object p1 is not located, at airport l1_0, object t0 is not located, at airport l1_0, object t2 is not located, at airport l1_1, object a0 is not located, at airport l1_2, object a1 is not located, at place l1_2, object p0 is not scanned, at airport l1_2, object p2 is not located, at airport l1_2, object p3 is not located, object a0 is not at airport l0_0, object a0 is not located at airport l0_2, object a1 is located at airport l0_0, object a1 is not at airport l0_1, object a1 is not at airport l1_1, object p0 is not at airport l1_1, object p0 is not located at airport l1_0, object p1 is not located at airport l1_2, object p3 is not at airport l0_0, object t0 is not located at airport l0_0, object t0 is not located at airport l0_2, object t1 is at airport l1_0, object t1 is not located at airport l0_1, object t1 is not located at airport l1_1, object t1 is not located at airport l1_2, object t2 is located at airport l0_1, object t2 is not located at airport l0_2, object t2 is not located at airport l1_1, object t2 is not located at airport l1_2, package p0 is not in vehicle a1, package p0 is not in vehicle t2, package p1 is not in vehicle t2, package p1 is not located in vehicle a0, package p1 is not present in vehicle a1, package p1 is not present in vehicle t1, package p1 is present in vehicle t0, package p2 is located in vehicle a1, package p2 is not present in vehicle a0, package p2 is not present in vehicle t1, package p2 is not present in vehicle t2, package p3 is not present in vehicle a0, package p3 is not present in vehicle a1, package p3 is not present in vehicle t1 and package p3 is not present in vehicle t2, is not defined? Write None if all are defined.", "answer": "at place l1_2, object p0 is not scanned", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "3fe4645c-821c-4686-ac16-fcf2e3bd10cf", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_5_question_24", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: truck t1 is loaded with package p0 at airport l1_2, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, in city c1, truck is driven from airports l1_1 to l1_0, package p1 is unloaded from truck t1 at airport l1_0, from truck t1 package p0 is unloaded at airport l1_0, truck t0 is loaded with package p3 at airport l0_2, package p2 is loaded in truck t0 at airport l0_2, in city c0, truck is driven from airports l0_2 to l0_0, at airport l0_0, package p2 is unloaded from truck t0, at airport l1_0, package p1 is loaded in airplane a1, airplane a1 is loaded with package p0 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, airplane a1 is loaded with package p2 at airport l0_0, from airplane a1 package p1 is unloaded at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, package p0 is loaded in truck t0 at airport l0_0 and truck t0 is driven to airport l0_1 from airport l0_0 in city c0 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, airport l0_0 is in city c0, airport l0_1 is in city c0, place l0_1 is not the capital the city c1, airport l1_0 is in city c1, airport l1_0 is not in city c0airport l1_0 is not located in city c0, airport l1_2 is in city c1 and city c1 does not contain airport l0_2, is not defined? Write None if all are defined.", "answer": "place l0_1 is not the capital the city c1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "52630701-bc79-4ea6-9d93-53e0b779ad2e", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: package p0 is loaded in truck t1 at airport l1_2, truck t1 is driven from airport l1_2 to airport l1_1 in city c1, package p1 is loaded in truck t1 at airport l1_1, in city c1, truck is driven from airports l1_1 to l1_0, at airport l1_0, package p1 is unloaded from truck t1, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, truck t0 is loaded with package p2 at airport l0_2, truck t0 is driven from airport l0_2 to airport l0_0 in city c0, at airport l0_0, package p2 is unloaded from truck t0, airplane a1 is loaded with package p1 at airport l1_0, package p0 is loaded into airplane a1 at airport l1_0, airplane a1 flies from airports l1_0 to l0_0, package p2 is loaded into airplane a1 at airport l0_0, package p1 is unloaded from airplane a1 at airport l0_0, at airport l0_0, package p1 is loaded in truck t0, from airplane a1 package p0 is unloaded at airport l0_0, at airport l0_0, package p0 is loaded in truck t0 and truck t0 is driven from airport l0_0 to airport l0_1 in city c0 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
{"id": "60164b91-89cc-46b3-9bf1-d6f52fafeba7", "domain_name": "logistics", "instance_id": "Instance_1", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: at airport l1_2, package p0 is loaded in truck t1, truck t1 is driven to airport l1_1 from airport l1_2 in city c1, at airport l1_1, package p1 is loaded in truck t1, truck t1 is driven from airport l1_1 to airport l1_0 in city c1, package p1 is unloaded from truck t1 at airport l1_0, package p0 is unloaded from truck t1 at airport l1_0, at airport l0_2, package p3 is loaded in truck t0, at airport l0_2, package p2 is loaded in truck t0, truck t0 is driven to airport l0_0 from airport l0_2 in city c0, package p2 is unloaded from truck t0 at airport l0_0, at airport l1_0, package p1 is loaded in airplane a1, at airport l1_0, package p0 is loaded in airplane a1, airplane a1 is flown from airport l1_0 to airport l0_0, package p2 is loaded into airplane a1 at airport l0_0, at airport l0_0, package p1 is unloaded from airplane a1, package p1 is loaded in truck t0 at airport l0_0, package p0 is unloaded from airplane a1 at airport l0_0, truck t0 is loaded with package p0 at airport l0_0 and in city c0, truck t0 is inspected at l0_0 and refueled at l0_1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "in city c0, truck t0 is inspected at l0_0 and refueled at l0_1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["in_city(l1_2,c1)", "in_city(l0_1,c0)", "at(p2,l0_2)", "at(t1,l1_2)", "at(a1,l1_0)", "at(p1,l1_1)", "at(p3,l0_2)", "at(t2,l0_1)", "in_city(l0_0,c0)", "at(t0,l0_2)", "in_city(l0_2,c0)", "at(a0,l1_0)", "at(p0,l1_2)", "in_city(l1_0,c1)", "in_city(l1_1,c1)"], "neg_fluents": ["-at(t0,l1_1)", "-at(a1,l1_1)", "-in_city(l1_2,c0)", "-in(p3,t1)", "-at(p0,l0_0)", "-at(p1,l1_0)", "-at(t2,l1_2)", "-in(p1,t1)", "-at(p3,l0_1)", "-in(p3,t0)", "-at(p3,l1_0)", "-at(a0,l1_2)", "-in(p1,t2)", "-at(p3,l0_0)", "-in(p2,t0)", "-in_city(l0_2,c1)", "-at(t0,l0_1)", "-at(p0,l1_1)", "-in(p1,a1)", "-at(p2,l1_1)", "-at(a0,l0_1)", "-at(t2,l1_1)", "-in(p0,a0)", "-in(p1,t0)", "-at(p1,l0_0)", "-at(p2,l0_1)", "-at(t0,l0_0)", "-in_city(l1_0,c0)", "-at(a0,l1_1)", "-in(p2,a0)", "-at(a0,l0_0)", "-at(p0,l1_0)", "-in(p0,a1)", "-at(a1,l1_2)", "-at(p3,l1_2)", "-at(a1,l0_2)", "-in(p2,t2)", "-at(p2,l0_0)", "-in(p0,t0)", "-in_city(l0_1,c1)", "-at(a0,l0_2)", "-at(t2,l1_0)", "-at(p2,l1_0)", "-at(t1,l1_0)", "-at(p1,l1_2)", "-at(t1,l0_1)", "-at(t1,l0_2)", "-in(p1,a0)", "-at(p2,l1_2)", "-at(p0,l0_1)", "-at(t0,l1_2)", "-at(t1,l0_0)", "-at(p1,l0_1)", "-at(a1,l0_0)", "-at(t2,l0_0)", "-in(p2,a1)", "-at(a1,l0_1)", "-in(p2,t1)", "-in(p3,a1)", "-in_city(l1_1,c0)", "-in(p0,t2)", "-in_city(l0_0,c1)", "-in(p3,t2)", "-in(p3,a0)", "-at(t0,l1_0)", "-in(p0,t1)", "-at(p0,l0_2)", "-at(p1,l0_2)", "-at(t2,l0_2)", "-at(t1,l1_1)", "-at(p3,l1_1)"], "objects": {"airplane": ["a1", "a0"], "truck": ["t1", "t2", "t0"], "city": ["c0", "c1"], "airport": ["l1_0", "l0_0"], "location": ["l0_1", "l0_2", "l1_1", "l1_2"], "package": ["p0", "p3", "p1", "p2"]}, "executable?": true}, "initial_state_nl": "Airport l0_0 is located in city c0, airport l0_2 is in city c0, airport l1_0 is in city c1, airport l1_1 is in city c1, at airport l0_2, object p3 is located, at airport l0_2, object t0 is located, at airport l1_0, object a0 is located, at airport l1_1, object p1 is located, city c0 contains airport l0_1, city c1 contains airport l1_2, object a1 is located at airport l1_0, object p0 is located at airport l1_2, object p2 is located at airport l0_2, object t1 is at airport l1_2 and object t2 is at airport l0_1.", "action_sequence": ["action_load_truck(p0,t1,l1_2)", "action_drive_truck(t1,l1_2,l1_1,c1)", "action_load_truck(p1,t1,l1_1)", "action_drive_truck(t1,l1_1,l1_0,c1)", "action_unload_truck(p1,t1,l1_0)", "action_unload_truck(p0,t1,l1_0)", "action_load_truck(p3,t0,l0_2)", "action_load_truck(p2,t0,l0_2)", "action_drive_truck(t0,l0_2,l0_0,c0)", "action_unload_truck(p2,t0,l0_0)", "action_load_airplane(p1,a1,l1_0)", "action_load_airplane(p0,a1,l1_0)", "action_fly_airplane(a1,l1_0,l0_0)", "action_load_airplane(p2,a1,l0_0)", "action_unload_airplane(p1,a1,l0_0)", "action_load_truck(p1,t0,l0_0)", "action_unload_airplane(p0,a1,l0_0)", "action_load_truck(p0,t0,l0_0)", "action_drive_truck(t0,l0_0,l0_1,c0)", "action_unload_truck(p3,t0,l0_1)", "action_drive_truck(t0,l0_1,l0_2,c0)", "action_unload_truck(p1,t0,l0_2)", "action_unload_truck(p0,t0,l0_2)", "action_fly_airplane(a1,l0_0,l1_0)", "action_unload_airplane(p2,a1,l1_0)"], "is_pos_fluent_question": null}
