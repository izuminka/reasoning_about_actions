{"id": "3cbeba18-41ae-4b19-a8d5-d43f734e3d83", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is not being carried by robot1's lgripper1 and robot1 is not carrying ball4 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "513ed896-c10d-4cbc-8705-778894d537bf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is not being carried by robot1's rgripper1 and robot1 is not carrying ball1 with lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5a3d1283-0b41-444e-b6f0-845bad5aa3ef", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: ball2 is being carried by robot1's lgripper1 and robot1 is not carrying ball2 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c8b3f165-3123-404e-b7d1-97d14327d140", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: lgripper1 of robot1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c1240295-0f96-49a3-a830-bb53835d1a1a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: rgripper1 of robot1 is free and robot1's lgripper1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6e27c35b-7fb3-4efb-8edd-f7ff879c154d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is not free?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "87869b9f-d417-4e96-9817-a70926a14891", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room1: ball1 is present at room1, ball3 is located at room1, ball6 is at room1 and robot1 is at room1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7d000e76-4972-4f67-8e7f-54b6006309cf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is at room1, ball7 is at room4, ball7 is located at room2, ball7 is located at room3 and ball7 is present at room5?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9d52d0eb-26e7-4dc5-a8f0-2889c79ceb59", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room4: ball1 is not present at room4, ball2 is not located at room4, ball3 is not at room4, ball4 is not located at room4, ball5 is not located at room4, ball6 is not located at room4, ball7 is not at room4 and robot1 is not present in room4?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fb5c5f64-c8c0-4a04-a840-1245df4ec9a8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room1: ball1 is not at room1, ball2 is not at room1, ball3 is not at room1, ball4 is not present at room1, ball5 is not at room1, ball6 is not located at room1, ball7 is not at room1 and robot1 is not located at room1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1c60606d-4212-45de-af03-c3031e51590f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball3: ball3 is located at room1, ball3 is not at room2, ball3 is not at room3, ball3 is not at room5 and ball3 is not located at room4?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ccf59a60-4585-41b2-a761-01b4c7cdd14a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is located at room2, ball6 is not located at room1, ball6 is not located at room3, ball6 is not located at room4 and ball6 is not located at room5?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bf24a93d-9b6f-4454-9cff-3b8c49342df0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3, room4 and room5", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f6c9de4b-25a9-4ffc-8852-060fe2a26ba5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, what is the object type for room4. Write None if there are none.", "answer": "room", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1c64fbff-430b-4472-9322-a14198138ee9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: lgripper1 of robot1 is carrying ball1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ae97f3a5-94c2-403e-bf3a-19178819884c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball1 is being carried by robot1's lgripper1, ball7 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball6, robot1 is carrying ball2 with lgripper1 and robot1 is carrying ball4 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a42748b9-3135-4a46-a977-bc7753bc434d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball3: ball3 is not being carried by robot1's lgripper1 and ball3 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2f717e10-51df-4fc3-a908-3b1c3f7ffb62", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: robot1 is not carrying ball1 with lgripper1 and robot1 is not carrying ball1 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "16788c06-10b7-48b8-b765-03f0a5119982", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: ball3 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, robot1 is carrying ball1 with lgripper1 and robot1 is not carrying ball4 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "991139b1-3b78-4153-8db6-0d7e276d8f65", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not being carried by robot1's rgripper1 and robot1 is carrying ball6 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4bd7ef29-a5c0-47e5-8898-813fe0ad7c10", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: rgripper1 of robot1 is free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2d900515-7f58-4148-9f95-37fa8bb93e29", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is free and robot1's rgripper1 is available?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "681faaee-20e1-4c11-ad04-e9a08ef4bcf2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c4ea5928-a112-48e9-879b-e86ea12172a9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: lgripper1 of robot1 is not free and rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d98c6419-ae14-42a9-9ff2-1b2cc0149117", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0cd357f1-8129-4131-a045-2b165cab5d30", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is not available?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "405168a9-4fcf-458c-9c1e-a786d1513f8d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is located at room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1b2db512-0854-4ad1-9cec-cf6b139ecae7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room2: ball1 is located at room2, ball2 is located at room2, ball3 is present at room2, ball4 is located at room2, ball5 is at room2, ball6 is located at room2, ball7 is present at room2 and robot1 is located at room2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ae2f7194-634d-4840-acd3-2f32682feaf6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room4: ball1 is not located at room4, ball2 is not at room4, ball3 is not present at room4, ball4 is not located at room4, ball5 is not at room4, ball6 is not present at room4, ball7 is not at room4 and robot1 is not present in room4?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1c25aa5f-b8e8-4d08-a472-6f5b16caaa58", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room2: ball1 is not present at room2, ball2 is not present at room2, ball3 is not at room2, ball4 is not present at room2, ball5 is not located at room2, ball6 is not located at room2, ball7 is not located at room2 and robot1 is not located at room2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "85dc75ad-0d66-49bc-898f-9668d746c27c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room3: ball1 is not at room3, ball2 is not at room3, ball3 is not present at room3, ball4 is not located at room3, ball5 is not located at room3, ball6 is not located at room3, ball7 is present at room3 and robot1 is not located at room3?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "224d4cd5-0bb5-46d5-88b7-16757913b50c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1 is at room3, robot1 is located at room1, robot1 is not located at room2, robot1 is not located at room4 and robot1 is present in room5?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2bbb4d16-aa6a-4b68-ba70-bf4c853e8c7f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3, room4 and room5", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "58781af3-da81-4e24-9ec8-8b6f563f5f4a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, what is the object type for lgripper1. Write None if there are none.", "answer": "gripper", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5b809b26-4cd8-442d-96c4-7b7015a640d6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball1 is being carried by robot1's lgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4a982709-c2ec-425b-991f-d123f88a0c67", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball1 is being carried by robot1's lgripper1, ball4 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball6, robot1 is carrying ball2 with lgripper1 and robot1 is carrying ball7 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d7c6feea-4002-45f6-860b-eb5d5405c7d7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: lgripper1 of robot1 is not carrying ball5 and robot1 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6a194def-c36f-4c9e-ad86-f3c82f8165e9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is being carried by robot1's rgripper1 and lgripper1 of robot1 is not carrying ball6?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1dda1e81-0857-4036-9006-e2fc005df652", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball1 is being carried by robot1's lgripper1, ball6 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball7, lgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball3 with lgripper1 and robot1 is not carrying ball4 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fb674ea2-5829-4754-8727-64b97e4aef18", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is not available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e1720c7b-a1b2-4207-8843-bba4a06567b9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is not available and robot1's rgripper1 is not free?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "914fc0f8-51e4-4a5c-98b3-8038de708ed9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is available?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "345fb7c3-a0f4-41eb-a53e-6fcb81f810fa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room1: ball4 is present at room1 and robot1 is located at room1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e0fb9b46-d9e6-4dd7-989b-48bc13063f59", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is at room2, ball7 is at room3, ball7 is located at room4, ball7 is located at room5 and ball7 is present at room1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "20e182d5-47bd-4266-acf6-e8b6de5d053d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is not located at room3, ball4 is not present at room2, ball4 is not present at room4 and ball4 is not present at room5?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8251a527-9ad8-4b71-9529-e9e311cb0236", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: ball5 is not at room5, ball5 is not located at room1, ball5 is not located at room4, ball5 is not present at room2 and ball5 is not present at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5a9b6180-1343-4434-b806-b8fd0c4b7028", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is not located at room3, ball4 is not located at room5, ball4 is not present at room2, ball4 is not present at room4 and ball4 is present at room1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "214bad57-4d82-42de-8ec9-d90b31878748", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is at room1, ball1 is not at room3, ball1 is not located at room2, ball1 is not located at room4 and ball1 is present at room5?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9c9afec7-99ff-4169-ab7d-d807100d6e19", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "948a7f49-c165-47d5-be12-0812413e32f7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, what is the object type for ball3, ball4 and ball6. Write None if there are none.", "answer": "object", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "513c88d5-39c4-4049-8bd9-392be73f01e0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: rgripper1 of robot1 is carrying ball7?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "27cc35e2-40da-4ab4-85a1-14900b60c977", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: lgripper1 of robot1 is carrying ball7 and robot1 is carrying ball7 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d707e180-a157-41f4-aee2-f929a7251233", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball2 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "dbe975a5-62cc-484c-8cd0-e612f6b33699", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: lgripper1 of robot1 is not carrying ball7 and robot1 is not carrying ball7 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "aa5ce9e6-7f39-45f8-8d60-aaa0c7f7f8ef", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: ball1 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball4, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "454e8a12-123b-40f2-a533-8926572f5063", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball4 is being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is not carrying ball3, robot1 is carrying ball7 with lgripper1, robot1 is not carrying ball1 with lgripper1 and robot1 is not carrying ball6 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8cb0c9b7-eaa1-4ec6-ab6a-291576edd071", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: lgripper1 of robot1 is free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0b4b2f76-b352-4c6d-a730-1d598c5e379c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is available and robot1's rgripper1 is available?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bc5a1e84-cdb8-41bb-974b-a7048053038d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: rgripper1 of robot1 is not free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f56eea26-07d7-404f-9692-ee965b8c0e87", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: lgripper1 of robot1 is not free and rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e08a8cc3-bf15-4a56-87b6-720954aa0923", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: rgripper1 of robot1 is not free and robot1's lgripper1 is free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b56ae5de-841b-42a2-a642-318877260163", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is free and robot1's rgripper1 is free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "457ea332-359f-4174-89b8-305be5cd035b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room1: ball4 is located at room1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1a98202e-f173-47c3-9830-a0bf9a302784", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: ball2 is at room2, ball2 is at room3, ball2 is at room5, ball2 is located at room1 and ball2 is present at room4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f4023cb5-ce68-4629-81a5-ddcd59a372cd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is not at room4, ball7 is not located at room1, ball7 is not located at room2, ball7 is not located at room3 and ball7 is not located at room5?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "84326f6c-63e0-4d2b-bc23-a60aadaede1b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is not at room1, ball4 is not at room4, ball4 is not located at room2, ball4 is not located at room3 and ball4 is not located at room5?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "107c424e-0880-4b8c-aa89-67bb5253239b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: ball5 is located at room2, ball5 is not at room1, ball5 is not at room3, ball5 is not located at room4 and ball5 is not located at room5?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0788dd5b-684a-48a8-94e6-a9945996f44b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is at room4, ball4 is located at room5, ball4 is not at room2, ball4 is not at room3 and ball4 is present at room1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "70070edd-db86-42ef-856b-4dc722e9250f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "aa56e1e3-f063-4035-92bb-f0b59838d21a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, what is the object type for ball6 and ball7. Write None if there are none.", "answer": "object", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "23bacd90-953f-4a83-8b1b-7e5f186a218a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1 is carrying ball2 with lgripper1 and robot1 is carrying ball5 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "77ac6735-49c0-4a91-be2f-bdcd3bd389f0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: lgripper1 of robot1 is carrying ball5 and rgripper1 of robot1 is carrying ball5?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "45ad2c4b-8633-488f-99f8-cd969fb28e82", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not being carried by robot1's lgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e9591ba2-d9e5-4564-960b-7964104c2a9d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: lgripper1 of robot1 is not carrying ball2 and robot1 is not carrying ball2 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7dae50a3-53eb-49ae-bf4c-00e36fbaf896", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1 and robot1 is not carrying ball3 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c490523b-2b60-40b2-b304-ba10ab1519db", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball3: ball3 is not being carried by robot1's lgripper1 and robot1 is carrying ball3 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c179b360-9449-4f3a-a1d6-8e2cf16139fb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is not available?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f644f7ed-dd1c-4ed6-9f71-4b4b2f135721", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is not free and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5a2cfbd4-1ee8-413e-a134-e1ed9dce230e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: rgripper1 of robot1 is free?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "951b2d82-9292-4aea-be81-d88d19b33ade", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is located at room4?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bc4b660e-a4d0-4472-b19f-4ac9990c83b2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is at room1, ball7 is at room4, ball7 is located at room2, ball7 is located at room5 and ball7 is present at room3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1542e319-d8ed-4016-9e5b-2024ae6a828a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is not at room2, ball7 is not at room5, ball7 is not located at room1 and ball7 is not located at room3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "142da4a5-1e1f-46b7-9c92-4bf68e43057f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room2: ball1 is not present at room2, ball2 is not at room2, ball3 is not present at room2, ball4 is not located at room2, ball5 is not at room2, ball6 is not located at room2, ball7 is not present at room2 and robot1 is not located at room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "099d3ffb-ea2e-4c59-8ff8-28172dedbb32", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not at room4, ball6 is not located at room5, ball6 is not present at room1, ball6 is not present at room2 and ball6 is present at room3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "52b72b1a-9f3c-46c1-9f7e-dff75cf1c5e4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room1: ball1 is located at room1, ball2 is not located at room1, ball3 is not at room1, ball4 is not at room1, ball5 is at room1, ball6 is not at room1, ball7 is not at room1 and robot1 is located at room1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c4d4b96c-0eeb-4410-a402-d1fa19b21d56", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball2, ball3, ball4, ball5, ball6 and ball7", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1e30e6ad-74ae-4b21-bfd0-1bee08cc959a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, what is the object type for room4 and room5. Write None if there are none.", "answer": "room", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is present at room1, ball4 is at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3c246d4c-6053-4c25-a7ff-b5d65e0653c4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball2 with lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "59e02de3-2d55-4b23-893f-40d2a270f966", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is it True or False that robot1's rgripper1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "037336a5-e694-478a-b103-20355498bb2f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "37e36dbc-54ee-4f2a-a5d1-59a58edb8f7e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is it True or False that ball2 is present at room2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "80108fdb-1228-43b3-a47d-944192012416", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is it True or False that ball5 is not at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bd4616e5-2d16-421c-8543-c18d463f9f05", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is it True or False that ball5 is not at room5?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3abf2085-363e-4b9b-aa32-0eada178d8d6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e758d530-d609-4ff9-800a-39af788eb092", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cedfa61b-e5b5-4660-a1e3-a836d394c803", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball2 is being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball6 is being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is carrying ball7, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball5 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball5 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0433394c-91bc-4756-b869-f090d9ad47ae", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free and robot1's lgripper1 is available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "59489b60-9c75-4627-b66c-e6f765b5fcd7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is free and robot1's rgripper1 is available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "96cd4d7a-be6d-40ee-8f29-86d14e2ac440", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free and robot1's lgripper1 is not available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "85952b76-d029-4972-9c0e-43d6bb8d8c0d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room1, ball2 is located at room2, ball3 is present at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3 and robot1 is located at room1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f547097e-c346-41eb-b334-e9e595115683", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room3, ball1 is located at room2, ball1 is located at room4, ball1 is present at room5, ball2 is at room1, ball2 is at room2, ball2 is at room5, ball2 is present at room3, ball2 is present at room4, ball3 is at room3, ball3 is located at room4, ball3 is present at room1, ball3 is present at room2, ball3 is present at room5, ball4 is at room4, ball4 is located at room1, ball4 is located at room3, ball4 is located at room5, ball4 is present at room2, ball5 is at room2, ball5 is at room5, ball5 is located at room1, ball5 is located at room3, ball5 is present at room4, ball6 is at room1, ball6 is at room2, ball6 is at room3, ball6 is at room4, ball6 is at room5, ball7 is at room2, ball7 is at room3, ball7 is located at room5, ball7 is present at room1, ball7 is present at room4, robot1 is at room5, robot1 is located at room2, robot1 is located at room3, robot1 is present in room1 and robot1 is present in room4?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0863e235-d622-46d7-95d1-6a4454f2ea3b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room5, ball1 is not located at room4, ball1 is not present at room2, ball1 is not present at room3, ball2 is not located at room1, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is not at room2, ball3 is not at room3, ball3 is not located at room4, ball3 is not present at room5, ball4 is not located at room1, ball4 is not located at room3, ball4 is not located at room4, ball4 is not present at room5, ball5 is not at room4, ball5 is not present at room1, ball5 is not present at room3, ball5 is not present at room5, ball6 is not located at room2, ball6 is not located at room4, ball6 is not present at room3, ball6 is not present at room5, ball7 is not at room1, ball7 is not at room2, ball7 is not present at room4, ball7 is not present at room5, robot1 is not at room2, robot1 is not located at room3, robot1 is not located at room4 and robot1 is not located at room5?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3e5101d4-ed0f-417d-994a-acd8670afb0c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, ball1 is not at room4, ball1 is not located at room2, ball1 is not located at room5, ball1 is not present at room1, ball2 is not at room3, ball2 is not located at room1, ball2 is not located at room2, ball2 is not located at room4, ball2 is not present at room5, ball3 is not at room1, ball3 is not at room2, ball3 is not located at room4, ball3 is not present at room3, ball3 is not present at room5, ball4 is not at room3, ball4 is not at room4, ball4 is not located at room1, ball4 is not located at room2, ball4 is not present at room5, ball5 is not at room1, ball5 is not at room4, ball5 is not located at room2, ball5 is not located at room5, ball5 is not present at room3, ball6 is not at room2, ball6 is not at room3, ball6 is not located at room5, ball6 is not present at room1, ball6 is not present at room4, ball7 is not at room2, ball7 is not present at room1, ball7 is not present at room3, ball7 is not present at room4, ball7 is not present at room5, robot1 is not at room3, robot1 is not at room4, robot1 is not located at room1, robot1 is not located at room2 and robot1 is not present in room5?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "25accc77-7046-4f65-9576-dbaf00be2f0a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not located at room2, ball1 is not located at room3, ball1 is not present at room4, ball1 is not present at room5, ball1 is present at room1, ball2 is located at room2, ball2 is not at room1, ball2 is not at room5, ball2 is not located at room3, ball2 is not present at room4, ball3 is not located at room2, ball3 is not present at room3, ball3 is not present at room4, ball3 is not present at room5, ball3 is present at room1, ball4 is not at room3, ball4 is not at room5, ball4 is not located at room1, ball4 is not located at room4, ball4 is present at room2, ball5 is at room2, ball5 is not at room5, ball5 is not located at room1, ball5 is not located at room3, ball5 is not present at room4, ball6 is located at room1, ball6 is not at room3, ball6 is not at room4, ball6 is not present at room2, ball6 is not present at room5, ball7 is at room3, ball7 is not at room5, ball7 is not located at room1, ball7 is not present at room2, ball7 is not present at room4, robot1 is at room1, robot1 is not located at room3, robot1 is not located at room4, robot1 is not located at room5 and robot1 is not present in room2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "15de6feb-d08c-4532-a6c4-4b0f18ebca47", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room2, ball1 is located at room5, ball1 is not at room1, ball1 is not located at room3, ball1 is not located at room4, ball2 is located at room1, ball2 is not located at room4, ball2 is not present at room5, ball2 is present at room2, ball2 is present at room3, ball3 is located at room4, ball3 is not at room2, ball3 is not at room3, ball3 is not located at room1, ball3 is present at room5, ball4 is at room1, ball4 is at room4, ball4 is not at room2, ball4 is not located at room5, ball4 is not present at room3, ball5 is at room2, ball5 is at room3, ball5 is not at room1, ball5 is not at room5, ball5 is not present at room4, ball6 is at room5, ball6 is located at room2, ball6 is located at room3, ball6 is not at room1, ball6 is not located at room4, ball7 is not at room1, ball7 is not at room2, ball7 is not at room3, ball7 is not located at room5, ball7 is not present at room4, robot1 is located at room4, robot1 is located at room5, robot1 is not located at room1, robot1 is not located at room2 and robot1 is not located at room3?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "87f462e7-f841-4e00-9412-8eb11db72947", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state,. What are the base properties of the state for ball1? Write None if there are none", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cb061aad-10a6-4eb0-9d27-7c97cc3498ff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state,. What are the base properties of the state for ball2? Write None if there are none", "answer": "rgripper1 of robot1 is not carrying ball2 and robot1 is not carrying ball2 with lgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1655b482-f306-4f9a-8ae7-dea3b02c37b7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state,. What are the base properties of the state for ball6? Write None if there are none", "answer": "ball6 is not being carried by robot1's rgripper1 and lgripper1 of robot1 is not carrying ball6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c7f72be8-1e14-40fb-9d4e-12ae60850b08", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "robot1's rgripper1 is free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e6d9d0b8-617f-4b5c-8667-b88eb4644b49", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "62019ce9-c58c-465c-88a5-b19338cb20ae", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "robot1's lgripper1 is available and robot1's rgripper1 is available", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c40e84f6-7eb5-4e1d-be0a-46a3444006ff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state,. What are the self constraint properties of the state for ball2? Write None if there are none", "answer": "ball2 is located at room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ed41f5cd-ba38-4bc1-8091-f72cb4cea387", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state,. What are the self constraint properties of the state for room4? Write None if there are none", "answer": "ball1 is not located at room4, ball2 is not located at room4, ball3 is not present at room4, ball4 is not at room4, ball5 is not located at room4, ball6 is not located at room4, ball7 is not present at room4 and robot1 is not present in room4", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "980db372-074f-4252-b3f2-573f3280eadd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state,. What are the self constraint properties of the state for ball7? Write None if there are none", "answer": "ball7 is at room3, ball7 is not at room1, ball7 is not at room4, ball7 is not located at room5 and ball7 is not present at room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9cefa16f-5484-429a-b3e6-86069fd31522", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that robot1 is carrying ball1 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1d2c0820-615d-455a-ae1b-373c4e7f6ef0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not carrying ball1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "53599f98-c71a-4607-a10c-456084c6495b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that ball5 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "642a5e56-9f99-4ebc-91cd-0352fa7ad2cf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1's rgripper1 is free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6f21a411-9af4-47d4-b40a-a352e0e82b58", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fa86e54e-2fb7-40aa-8a81-7978e6d55f71", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "04e46e81-a0e0-4077-bc0a-288e318c452f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that ball6 is at room1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6bab93e9-2f5c-4148-92b8-eaa697991356", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that ball3 is not located at room5?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a28f7cf6-1506-42e1-a027-439316eeff45", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that robot1 is not present in room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ee24e87b-1520-4ded-add5-ed5e0e3c377c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is carrying ball1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fa6ad41c-3a97-4200-b6e0-38bf92aa6804", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is being carried by robot1's rgripper1, ball5 is being carried by robot1's lgripper1, ball6 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is carrying ball1, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball5 with rgripper1, robot1 is carrying ball6 with lgripper1 and robot1 is carrying ball7 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bb15a09a-b7f5-47ae-9789-15c4db6a6995", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "36509cd8-aae0-4329-b6f9-0c56302bbc65", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c3b113c7-c239-4b87-a2e5-c4c4e4540e3c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, robot1 is carrying ball1 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2d57cdca-d203-458f-993f-9b982bf51805", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is not carrying ball1, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball6 with lgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "68cd07f6-78dd-4874-8688-2f6723234371", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's rgripper1 is free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "43667b84-389d-4c0a-a08b-e9f537ced047", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is available and robot1's rgripper1 is free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "accf926c-4605-4636-9747-3ee309530ebd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7e1f00cd-b8fe-4582-9252-c56ee062b1e6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available and robot1's rgripper1 is not free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8d16c967-a503-40d0-b721-e5e8dbac0cd2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free and robot1's lgripper1 is not free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1eb4d345-401d-4ffe-8952-549152d91348", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free and robot1's lgripper1 is available?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c65f6687-79f4-44bc-82dd-ee63450cf234", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is present at room2, ball3 is present at room5, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is located at room3 and robot1 is at room5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4978025f-df16-4ff0-aa3b-abf07f0c0dbf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is at room4, ball1 is at room5, ball1 is present at room1, ball1 is present at room2, ball2 is located at room3, ball2 is located at room4, ball2 is located at room5, ball2 is present at room1, ball2 is present at room2, ball3 is at room1, ball3 is at room2, ball3 is at room3, ball3 is at room4, ball3 is at room5, ball4 is at room1, ball4 is at room4, ball4 is located at room3, ball4 is located at room5, ball4 is present at room2, ball5 is at room1, ball5 is located at room2, ball5 is located at room4, ball5 is located at room5, ball5 is present at room3, ball6 is at room4, ball6 is located at room3, ball6 is present at room1, ball6 is present at room2, ball6 is present at room5, ball7 is at room2, ball7 is located at room5, ball7 is present at room1, ball7 is present at room3, ball7 is present at room4, robot1 is at room2, robot1 is at room5, robot1 is located at room3, robot1 is located at room4 and robot1 is present in room1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7a916b07-85e0-4722-8e6a-8ff2f48d5287", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not located at room3, ball1 is not located at room4, ball1 is not present at room2, ball1 is not present at room5, ball2 is not at room1, ball2 is not at room4, ball2 is not at room5, ball2 is not present at room3, ball3 is not located at room1, ball3 is not located at room4, ball3 is not present at room2, ball3 is not present at room3, ball4 is not at room5, ball4 is not located at room1, ball4 is not located at room3, ball4 is not located at room4, ball5 is not at room5, ball5 is not located at room1, ball5 is not located at room3, ball5 is not located at room4, ball6 is not at room4, ball6 is not located at room2, ball6 is not present at room3, ball6 is not present at room5, ball7 is not at room2, ball7 is not at room4, ball7 is not at room5, ball7 is not present at room1, robot1 is not at room1, robot1 is not at room3, robot1 is not located at room2 and robot1 is not present in room4?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "27efbbed-db05-4547-adda-2218360383bf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room3, ball1 is not at room4, ball1 is not at room5, ball1 is not present at room2, ball2 is not at room2, ball2 is not at room3, ball2 is not located at room1, ball2 is not located at room5, ball2 is not present at room4, ball3 is not at room3, ball3 is not located at room1, ball3 is not located at room5, ball3 is not present at room2, ball3 is not present at room4, ball4 is not at room2, ball4 is not located at room4, ball4 is not located at room5, ball4 is not present at room1, ball4 is not present at room3, ball5 is not at room2, ball5 is not at room4, ball5 is not located at room1, ball5 is not located at room3, ball5 is not present at room5, ball6 is not at room2, ball6 is not at room3, ball6 is not at room4, ball6 is not at room5, ball6 is not located at room1, ball7 is not at room1, ball7 is not at room2, ball7 is not located at room4, ball7 is not located at room5, ball7 is not present at room3, robot1 is not at room1, robot1 is not at room4, robot1 is not located at room2, robot1 is not located at room5 and robot1 is not present in room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "46a3a790-8a69-49b5-b9ea-e4639dae756d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room5, ball1 is not located at room1, ball1 is not located at room2, ball1 is not located at room3, ball1 is not located at room4, ball2 is located at room2, ball2 is not at room4, ball2 is not located at room1, ball2 is not located at room3, ball2 is not present at room5, ball3 is not at room3, ball3 is not located at room1, ball3 is not located at room4, ball3 is not present at room2, ball3 is present at room5, ball4 is located at room2, ball4 is not at room1, ball4 is not at room3, ball4 is not located at room5, ball4 is not present at room4, ball5 is located at room2, ball5 is not at room5, ball5 is not located at room3, ball5 is not located at room4, ball5 is not present at room1, ball6 is located at room1, ball6 is not at room3, ball6 is not located at room2, ball6 is not located at room5, ball6 is not present at room4, ball7 is at room3, ball7 is not at room5, ball7 is not located at room1, ball7 is not located at room2, ball7 is not present at room4, robot1 is at room5, robot1 is not at room4, robot1 is not located at room1, robot1 is not located at room3 and robot1 is not present in room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "de22dd6e-1e6d-4f4e-8638-985425972e35", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room3, ball1 is at room4, ball1 is not located at room2, ball1 is not located at room5, ball2 is located at room5, ball2 is not at room1, ball2 is not at room2, ball2 is present at room3, ball2 is present at room4, ball3 is at room5, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room3, ball3 is not present at room4, ball4 is located at room1, ball4 is located at room4, ball4 is not located at room2, ball4 is not located at room5, ball4 is present at room3, ball5 is at room1, ball5 is not at room5, ball5 is not located at room4, ball5 is not present at room2, ball5 is present at room3, ball6 is at room1, ball6 is at room2, ball6 is at room4, ball6 is not present at room5, ball6 is present at room3, ball7 is not at room1, ball7 is not at room4, ball7 is not located at room2, ball7 is not located at room5, ball7 is not present at room3, robot1 is at room4, robot1 is located at room5, robot1 is not located at room1, robot1 is not located at room3 and robot1 is present in room2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ab04ed5d-d464-447a-a3cc-098c90932268", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball5? Write None if there are none", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ffbd7942-f336-40e7-8611-d5796683380d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state,. What are the base properties of the state for ball5? Write None if there are none", "answer": "lgripper1 of robot1 is not carrying ball5 and robot1 is not carrying ball5 with rgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "01ded441-73fe-4869-9833-fe0a7bc65eaf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state,. What are the base properties of the state for robot1? Write None if there are none", "answer": "ball1 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball6 with rgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "94c8258f-3490-4962-a68f-346fa213b92e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f4fd1be2-cf81-4b73-b4fe-05df3ef5b4b7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "robot1's lgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1fd731aa-8f15-48b2-895e-b1ccb6dc7e9c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "robot1's rgripper1 is free", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "70121401-0662-4b4e-b03d-28f60906e8bd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state,. What are the self constraint properties of the state for room5? Write None if there are none", "answer": "ball3 is located at room5 and robot1 is located at room5", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a7a2c8b6-506c-4d72-9c1b-4ac18b22ef14", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state,. What are the self constraint properties of the state for ball7? Write None if there are none", "answer": "ball7 is not at room5, ball7 is not located at room1, ball7 is not located at room2 and ball7 is not present at room4", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "efda8e50-9470-4c52-8d61-8c4f3f3b85e9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball5? Write None if there are none", "answer": "ball5 is located at room2, ball5 is not located at room3, ball5 is not present at room1, ball5 is not present at room4 and ball5 is not present at room5", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3489dd4d-cf5f-42df-9687-156b73a98a07", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is carrying ball1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "20ae7495-590a-4967-b155-5b482b54e8dd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is it True or False that ball1 is not being carried by robot1's lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d95e9470-28a4-46eb-8b12-d561c80d7ab4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball2 with lgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "02a25ed1-a1af-4724-8461-89e264d060f9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e5c5b565-0857-4765-a653-4fa2778dbde6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is it True or False that ball3 is located at room5?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "08c22a6b-771e-40a8-bfb3-6ed78e677698", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is not present at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2b300938-e4fb-4cbb-8a4b-aa3ab3684b39", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball4 is not located at room4?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "111e6031-d6f4-4bfa-94ec-7936a9cf38f9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1 and ball6 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4bafb5ec-72f9-4555-88b2-7ffe994aff69", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's rgripper1, ball5 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball4, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is carrying ball7, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball5 with lgripper1, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball6 with rgripper1 and robot1 is carrying ball7 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d1635d0e-2946-4963-a028-fce00bd342f0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ed47da99-833a-49ed-ae85-a562964bc8f6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7 and robot1 is not carrying ball2 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ab5495dc-0c41-4e53-a247-4eb5faa32fa5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball5, robot1 is carrying ball6 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "072f2923-d519-426d-865f-046d3b9d1251", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is being carried by robot1's rgripper1, ball3 is being carried by robot1's rgripper1, ball4 is being carried by robot1's rgripper1, ball5 is being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball7 is being carried by robot1's lgripper1, ball7 is being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball1, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball6 with rgripper1, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball4 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "95c45736-09ae-4418-9d62-38d0d2728aa7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "10573ad5-38d0-49ea-91a8-641178e1828c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fbb8e808-97d8-4280-a73b-df51ec855a8d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free and robot1's lgripper1 is not available?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bffcf96e-7c01-48ae-a604-c20712e1012c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is present at room2, ball3 is located at room5, ball4 is located at room1, ball5 is at room2, ball7 is at room3 and robot1 is located at room1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cbe5f446-39f5-4d66-8a5c-5b492b26b3ff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room1, ball1 is located at room2, ball1 is located at room5, ball1 is present at room3, ball1 is present at room4, ball2 is at room5, ball2 is present at room1, ball2 is present at room2, ball2 is present at room3, ball2 is present at room4, ball3 is at room4, ball3 is located at room3, ball3 is located at room5, ball3 is present at room1, ball3 is present at room2, ball4 is at room4, ball4 is located at room2, ball4 is located at room3, ball4 is located at room5, ball4 is present at room1, ball5 is at room1, ball5 is at room2, ball5 is at room4, ball5 is located at room3, ball5 is present at room5, ball6 is at room1, ball6 is located at room3, ball6 is located at room4, ball6 is located at room5, ball6 is present at room2, ball7 is at room3, ball7 is at room4, ball7 is present at room1, ball7 is present at room2, ball7 is present at room5, robot1 is at room2, robot1 is located at room1, robot1 is located at room5, robot1 is present in room3 and robot1 is present in room4?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0e53293b-bae8-41e5-a2e2-57b9527d9f71", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, ball1 is not at room5, ball1 is not located at room2, ball1 is not present at room1, ball1 is not present at room4, ball2 is not located at room3, ball2 is not present at room1, ball2 is not present at room4, ball2 is not present at room5, ball3 is not located at room2, ball3 is not located at room4, ball3 is not present at room1, ball3 is not present at room3, ball4 is not at room3, ball4 is not located at room2, ball4 is not located at room4, ball4 is not located at room5, ball5 is not located at room1, ball5 is not located at room5, ball5 is not present at room3, ball5 is not present at room4, ball6 is not at room1, ball6 is not at room4, ball6 is not located at room2, ball6 is not located at room3, ball6 is not located at room5, ball7 is not located at room1, ball7 is not present at room2, ball7 is not present at room4, ball7 is not present at room5, robot1 is not at room2, robot1 is not located at room3, robot1 is not located at room4 and robot1 is not present in room5?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6659985a-5f4e-4174-a62b-7e6f7cb8dd62", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room2, ball1 is not at room4, ball1 is not located at room1, ball1 is not present at room3, ball1 is not present at room5, ball2 is not located at room1, ball2 is not located at room4, ball2 is not present at room2, ball2 is not present at room3, ball2 is not present at room5, ball3 is not at room1, ball3 is not located at room2, ball3 is not located at room5, ball3 is not present at room3, ball3 is not present at room4, ball4 is not at room4, ball4 is not at room5, ball4 is not located at room1, ball4 is not located at room2, ball4 is not located at room3, ball5 is not located at room1, ball5 is not located at room2, ball5 is not located at room5, ball5 is not present at room3, ball5 is not present at room4, ball6 is not at room2, ball6 is not located at room1, ball6 is not located at room3, ball6 is not located at room5, ball6 is not present at room4, ball7 is not at room1, ball7 is not located at room3, ball7 is not located at room4, ball7 is not present at room2, ball7 is not present at room5, robot1 is not at room2, robot1 is not at room4, robot1 is not at room5, robot1 is not located at room1 and robot1 is not located at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bdb00f0f-93c0-49d6-ac57-25bfa6fee6e2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room4, ball1 is not located at room5, ball1 is not present at room2, ball1 is not present at room3, ball2 is at room2, ball2 is not at room1, ball2 is not located at room5, ball2 is not present at room3, ball2 is not present at room4, ball3 is not at room1, ball3 is not at room2, ball3 is not at room3, ball3 is not at room4, ball3 is present at room5, ball4 is located at room1, ball4 is not at room2, ball4 is not at room4, ball4 is not at room5, ball4 is not present at room3, ball5 is at room2, ball5 is not at room1, ball5 is not at room3, ball5 is not located at room5, ball5 is not present at room4, ball6 is not at room1, ball6 is not at room4, ball6 is not located at room2, ball6 is not located at room3, ball6 is not located at room5, ball7 is located at room3, ball7 is not at room1, ball7 is not located at room2, ball7 is not located at room4, ball7 is not located at room5, robot1 is not at room3, robot1 is not at room5, robot1 is not located at room2, robot1 is not present in room4 and robot1 is present in room1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9e641b87-d631-43b3-93d7-f2a33f4ea1ad", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room2, ball1 is at room3, ball1 is not located at room5, ball1 is not present at room1, ball1 is not present at room4, ball2 is at room1, ball2 is at room4, ball2 is not located at room3, ball2 is not present at room5, ball2 is present at room2, ball3 is not located at room3, ball3 is not present at room2, ball3 is not present at room5, ball3 is present at room1, ball3 is present at room4, ball4 is located at room1, ball4 is not located at room4, ball4 is not present at room3, ball4 is present at room2, ball4 is present at room5, ball5 is at room1, ball5 is located at room4, ball5 is not located at room5, ball5 is not present at room3, ball5 is present at room2, ball6 is located at room1, ball6 is located at room3, ball6 is located at room5, ball6 is not located at room4, ball6 is present at room2, ball7 is at room3, ball7 is at room5, ball7 is located at room2, ball7 is not at room4, ball7 is present at room1, robot1 is located at room5, robot1 is not located at room1, robot1 is not located at room3, robot1 is not present in room2 and robot1 is not present in room4?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "34c2f9cb-534f-412f-864b-78ec989ea98e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state,. What are the base properties of the state for ball1? Write None if there are none", "answer": "lgripper1 of robot1 is carrying ball1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b63894a4-7c81-413b-98af-9c58feccf854", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball7? Write None if there are none", "answer": "lgripper1 of robot1 is not carrying ball7 and robot1 is not carrying ball7 with rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3d5ccdc8-062c-4e4f-9205-6a28585e453c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state,. What are the base properties of the state for ball3? Write None if there are none", "answer": "ball3 is not being carried by robot1's lgripper1 and rgripper1 of robot1 is not carrying ball3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "290fcfbe-d2d7-410b-94f0-ed9b543fd7e4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "39731ed7-ebfd-4d3d-b5fc-47b2328c3577", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "robot1's lgripper1 is not available and robot1's rgripper1 is not available", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "edcdf59c-e088-4904-a882-d0fef8ed0f64", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "rgripper1 of robot1 is not free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6f6a2061-3578-4bee-8d44-02bd49ce5e34", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state,. What are the self constraint properties of the state for ball6? Write None if there are none", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e0868543-2889-4b5e-b4a5-5bbe54d1a65c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for room1? Write None if there are none", "answer": "ball1 is not at room1, ball2 is not at room1, ball3 is not at room1, ball5 is not located at room1, ball6 is not at room1 and ball7 is not at room1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "90a4f289-7acc-4e84-930f-f18c828f5ee0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state,. What are the self constraint properties of the state for ball2? Write None if there are none", "answer": "ball2 is located at room2, ball2 is not at room1, ball2 is not at room4, ball2 is not at room5 and ball2 is not located at room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ea04ac25-8514-440d-b499-65aba22046dd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that ball7 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "648344ae-c473-4578-8102-a11c25d6c558", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that robot1 is not carrying ball7 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fe2bcb5c-0f06-46ac-9c65-b54259c1450f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is not carrying ball2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ad6b5f03-8ae9-4e35-909a-1ae6078c4996", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that robot1's lgripper1 is available?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f7ee614a-bf4a-45f2-bc35-9838e2b8aebe", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "aa4e06c8-f11f-415f-8fcd-4f8930e75ce7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1's rgripper1 is not available?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4c2d6120-1ebb-47d2-ac17-23a3d549d030", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is at room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "edd683ed-c2ac-46a9-806d-0d0420111189", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is it True or False that robot1 is not present in room4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1fcd85f2-88ee-4f5b-a9d7-0c187bc265df", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball3 is not located at room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f39d1b19-707c-4f93-a919-d8c877a919a5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is carrying ball7?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bfd9684d-3c0c-4782-bf83-5a00620b45d7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1, ball3 is being carried by robot1's lgripper1, ball4 is being carried by robot1's rgripper1, ball5 is being carried by robot1's lgripper1, ball5 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is carrying ball7, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball6 with rgripper1 and robot1 is carrying ball7 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c70afb81-4034-4d4d-aabe-f4acfb9d16b8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "be371046-2ccf-4d06-b53a-d5d81c3d552a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1 and robot1 is not carrying ball6 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8c89e21e-27a0-4fcb-b2ff-9e5a29aa7be7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, are all of the following properties of the state True or False: ball7 is being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot1 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "03b2ed5d-5523-4f48-8682-6b43be0e4da9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball2 is being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is being carried by robot1's rgripper1, ball6 is being carried by robot1's lgripper1, ball6 is being carried by robot1's rgripper1, ball7 is being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball1, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball5 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with rgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "66827aff-bddc-4d03-ae40-c1047b7f376f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is available?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "609fdc5b-64e5-4f91-a3e1-b4a584d40208", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is available and robot1's rgripper1 is available?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3420592e-fbe5-4a68-9537-793618beba68", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's rgripper1 is not free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "85020e92-cdd7-4d10-805d-255a63029141", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is not free and robot1's lgripper1 is not free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "adba0935-9398-4a7e-be90-a2b394a600c2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is available and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1be81626-ac1e-4de4-b261-5d0454b36835", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not free and robot1's rgripper1 is not free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f8e335ed-edb0-46f2-b3ec-1578be304697", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room4, ball2 is located at room2, ball3 is present at room5, ball4 is present at room1, ball5 is at room2, ball6 is at room3 and robot1 is at room4?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7759e66a-1dfc-4c0e-8e3a-0e8f25c1e02a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room4, ball1 is located at room2, ball1 is located at room3, ball1 is located at room5, ball1 is present at room1, ball2 is at room3, ball2 is located at room2, ball2 is located at room4, ball2 is located at room5, ball2 is present at room1, ball3 is at room4, ball3 is located at room2, ball3 is located at room3, ball3 is located at room5, ball3 is present at room1, ball4 is at room2, ball4 is at room3, ball4 is at room5, ball4 is present at room1, ball4 is present at room4, ball5 is at room3, ball5 is located at room1, ball5 is located at room4, ball5 is located at room5, ball5 is present at room2, ball6 is located at room3, ball6 is present at room1, ball6 is present at room2, ball6 is present at room4, ball6 is present at room5, ball7 is at room5, ball7 is located at room3, ball7 is present at room1, ball7 is present at room2, ball7 is present at room4, robot1 is at room5, robot1 is located at room1, robot1 is located at room3, robot1 is present in room2 and robot1 is present in room4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "115d3f93-313f-4d61-a9c1-47b203735c8a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not located at room1, ball1 is not present at room2, ball1 is not present at room3, ball1 is not present at room5, ball2 is not at room4, ball2 is not at room5, ball2 is not located at room1, ball2 is not present at room3, ball3 is not at room3, ball3 is not located at room1, ball3 is not located at room4, ball3 is not present at room2, ball4 is not at room3, ball4 is not located at room4, ball4 is not present at room2, ball4 is not present at room5, ball5 is not present at room1, ball5 is not present at room3, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room4, ball6 is not at room5, ball6 is not present at room1, ball6 is not present at room2, ball7 is not at room2, ball7 is not at room4, ball7 is not present at room1, ball7 is not present at room3, ball7 is not present at room5, robot1 is not at room3, robot1 is not at room5, robot1 is not present in room1 and robot1 is not present in room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "13d38eb6-32d9-4022-a6e9-3a259da637a9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room3, ball1 is not at room4, ball1 is not located at room5, ball1 is not present at room2, ball2 is not located at room3, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room2, ball2 is not present at room4, ball3 is not at room1, ball3 is not at room3, ball3 is not at room4, ball3 is not located at room2, ball3 is not present at room5, ball4 is not at room1, ball4 is not at room2, ball4 is not at room5, ball4 is not located at room3, ball4 is not present at room4, ball5 is not at room2, ball5 is not at room5, ball5 is not present at room1, ball5 is not present at room3, ball5 is not present at room4, ball6 is not at room4, ball6 is not located at room1, ball6 is not located at room2, ball6 is not present at room3, ball6 is not present at room5, ball7 is not at room1, ball7 is not at room2, ball7 is not at room3, ball7 is not at room4, ball7 is not located at room5, robot1 is not at room5, robot1 is not located at room1, robot1 is not located at room2, robot1 is not present in room3 and robot1 is not present in room4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0b207d4a-d817-4a4f-ae61-87154acaf63b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room2, ball1 is not at room3, ball1 is not located at room5, ball1 is not present at room1, ball1 is present at room4, ball2 is located at room2, ball2 is not at room5, ball2 is not located at room3, ball2 is not located at room4, ball2 is not present at room1, ball3 is located at room5, ball3 is not at room2, ball3 is not at room4, ball3 is not located at room3, ball3 is not present at room1, ball4 is not at room3, ball4 is not at room5, ball4 is not located at room2, ball4 is not present at room4, ball4 is present at room1, ball5 is located at room2, ball5 is not at room5, ball5 is not located at room1, ball5 is not present at room3, ball5 is not present at room4, ball6 is at room3, ball6 is not at room1, ball6 is not present at room2, ball6 is not present at room4, ball6 is not present at room5, ball7 is not at room3, ball7 is not at room4, ball7 is not at room5, ball7 is not located at room1, ball7 is not present at room2, robot1 is located at room4, robot1 is not at room5, robot1 is not located at room3, robot1 is not present in room1 and robot1 is not present in room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a1481a23-b94e-42ce-9cda-bbedbcd45c3f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is not located at room2, ball1 is not located at room4, ball1 is not present at room1, ball1 is not present at room5, ball2 is at room4, ball2 is located at room2, ball2 is located at room3, ball2 is not at room5, ball2 is not present at room1, ball3 is located at room1, ball3 is located at room5, ball3 is not at room4, ball3 is not present at room2, ball3 is not present at room3, ball4 is at room1, ball4 is at room4, ball4 is located at room5, ball4 is not present at room3, ball4 is present at room2, ball5 is at room4, ball5 is at room5, ball5 is located at room3, ball5 is not at room1, ball5 is not located at room2, ball6 is not at room4, ball6 is not at room5, ball6 is not located at room1, ball6 is not located at room2, ball6 is present at room3, ball7 is at room4, ball7 is located at room3, ball7 is not present at room2, ball7 is present at room1, ball7 is present at room5, robot1 is at room2, robot1 is at room3, robot1 is not present in room1, robot1 is not present in room4 and robot1 is present in room5?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "aeef18a0-4288-41a6-ade0-8fc0e8f72b7f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the base properties of the state for ball6? Write None if there are none", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "70aa31db-3c88-4f49-b894-68f09a959b3f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the base properties of the state for ball1? Write None if there are none", "answer": "lgripper1 of robot1 is not carrying ball1 and robot1 is not carrying ball1 with rgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "be37ac7d-7909-4db8-950e-b5a7f5987213", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the base properties of the state for ball7? Write None if there are none", "answer": "lgripper1 of robot1 is not carrying ball7 and robot1 is carrying ball7 with rgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7c4eb9e4-6ced-43de-8080-89b88b967846", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "robot1's lgripper1 is available", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bb291024-5647-4796-a2ff-1f78e86ad576", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "robot1's rgripper1 is not free", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "47ef16ff-b09e-4d5e-b760-8701ea6366fb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "lgripper1 of robot1 is free and robot1's rgripper1 is not free", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "47f8e865-addf-485f-a9ce-7c2898c2d24c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the self constraint properties of the state for robot1? Write None if there are none", "answer": "robot1 is located at room4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b60444bf-1610-43ed-b991-80afbbf6bc2d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the self constraint properties of the state for room4? Write None if there are none", "answer": "ball2 is not at room4, ball3 is not located at room4, ball4 is not located at room4, ball5 is not at room4, ball6 is not at room4 and ball7 is not at room4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0e546c96-ab89-4fcb-b0c4-5c8aa929628b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state,. What are the self constraint properties of the state for ball6? Write None if there are none", "answer": "ball6 is at room3, ball6 is not located at room1, ball6 is not located at room2, ball6 is not located at room4 and ball6 is not located at room5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7e54a4a0-f1b8-414b-a81b-0d6323f386c3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is it True or False that ball5 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fc91d1fe-9e63-4a57-af9b-fabc21c70afb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is not carrying ball5?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "144592d5-124c-47fd-91bf-0112fe6d31bb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not carrying ball6?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "72a13290-ebb8-43c4-88ab-7c141bf382e4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1's rgripper1 is not available?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c776e181-3c8e-4ce7-868c-2a3a3398c49d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is it True or False that ball3 is present at room5?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2891d9aa-6555-477e-baac-4fc2b7da31b7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is it True or False that ball6 is not at room3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a297786b-c356-4ffa-93fa-af824f599d9d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is not located at room1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f8b257e3-cbc7-49f2-8d02-60266d2e70ff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is carrying ball5 and robot1 is carrying ball2 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1fe6b211-6dd6-4bad-ba45-bf8015cd6c29", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1, ball4 is being carried by robot1's lgripper1, ball4 is being carried by robot1's rgripper1, ball7 is being carried by robot1's lgripper1, ball7 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is carrying ball6, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball3 with lgripper1 and robot1 is carrying ball5 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b46b9fa2-1293-4df7-b017-18f81f7abcb6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball5 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "858cec8e-444b-4351-9ba4-7531e93f74f5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball4 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "52640589-c530-4790-a8b2-1eaa8a43f071", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball2 is being carried by robot1's lgripper1, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball5 is being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6cb02634-1ac4-400b-b50a-b7a27b187f36", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball5 is being carried by robot1's rgripper1, ball6 is being carried by robot1's lgripper1, ball6 is being carried by robot1's rgripper1, ball7 is being carried by robot1's lgripper1, ball7 is being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball2, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is not carrying ball3 with lgripper1 and robot1 is not carrying ball3 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bb119b40-80c0-4040-b20b-67a8bf77ff01", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available and robot1's rgripper1 is not free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "29abee2c-901d-48fb-b179-f032748a037a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available and robot1's rgripper1 is not free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c8074ab5-a88a-4540-90b6-6601cb8179ee", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is available and robot1's rgripper1 is not available?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d8002c15-2b44-447f-bb5e-00e6ce83ad44", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room4, ball3 is located at room5, ball4 is at room1, ball6 is present at room3, ball7 is present at room4 and robot1 is located at room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "32a0df85-b150-43b1-ad0c-f64989348814", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room2, ball1 is at room3, ball1 is at room5, ball1 is located at room4, ball2 is at room2, ball2 is at room3, ball2 is located at room1, ball2 is located at room5, ball2 is present at room4, ball3 is at room2, ball3 is located at room5, ball3 is present at room1, ball3 is present at room3, ball3 is present at room4, ball4 is at room1, ball4 is located at room3, ball4 is present at room2, ball4 is present at room4, ball4 is present at room5, ball5 is at room1, ball5 is at room2, ball5 is located at room3, ball5 is located at room4, ball5 is present at room5, ball6 is at room1, ball6 is at room2, ball6 is located at room4, ball6 is located at room5, ball6 is present at room3, ball7 is located at room4, ball7 is present at room1, ball7 is present at room2, ball7 is present at room3, ball7 is present at room5, robot1 is at room1, robot1 is located at room3, robot1 is located at room4, robot1 is present in room2 and robot1 is present in room5?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3a423482-1a25-481b-9d3d-1130967c4150", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not located at room2, ball1 is not located at room3, ball1 is not present at room5, ball2 is not at room2, ball2 is not located at room1, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is not at room1, ball3 is not at room3, ball3 is not at room4, ball3 is not located at room2, ball4 is not located at room2, ball4 is not present at room3, ball4 is not present at room4, ball4 is not present at room5, ball5 is not located at room1, ball5 is not located at room2, ball5 is not present at room3, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room1, ball6 is not at room5, ball6 is not located at room4, ball6 is not present at room2, ball7 is not located at room3, ball7 is not present at room1, ball7 is not present at room2, ball7 is not present at room5, robot1 is not located at room3, robot1 is not located at room4, robot1 is not present in room1 and robot1 is not present in room5?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bcc3ad17-358c-41ba-8ef8-e9138d7d4824", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room4, ball1 is not located at room3, ball1 is not located at room5, ball1 is not present at room1, ball1 is not present at room2, ball2 is not at room2, ball2 is not located at room3, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room4, ball3 is not at room4, ball3 is not located at room1, ball3 is not located at room5, ball3 is not present at room2, ball3 is not present at room3, ball4 is not located at room1, ball4 is not located at room3, ball4 is not located at room4, ball4 is not located at room5, ball4 is not present at room2, ball5 is not at room2, ball5 is not at room3, ball5 is not located at room4, ball5 is not present at room1, ball5 is not present at room5, ball6 is not at room3, ball6 is not at room4, ball6 is not located at room2, ball6 is not present at room1, ball6 is not present at room5, ball7 is not at room2, ball7 is not at room3, ball7 is not at room5, ball7 is not located at room4, ball7 is not present at room1, robot1 is not at room1, robot1 is not at room4, robot1 is not at room5, robot1 is not present in room2 and robot1 is not present in room3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0a744b3f-7957-4c02-bfc4-e135d048b82a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room4, ball1 is not at room1, ball1 is not at room3, ball1 is not located at room5, ball1 is not present at room2, ball2 is not at room1, ball2 is not at room2, ball2 is not at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is not located at room2, ball3 is not present at room1, ball3 is not present at room3, ball3 is not present at room4, ball3 is present at room5, ball4 is located at room1, ball4 is not at room5, ball4 is not located at room2, ball4 is not located at room4, ball4 is not present at room3, ball5 is not at room2, ball5 is not at room3, ball5 is not at room5, ball5 is not located at room1, ball5 is not present at room4, ball6 is not at room4, ball6 is not at room5, ball6 is not located at room1, ball6 is not located at room2, ball6 is present at room3, ball7 is not at room2, ball7 is not at room5, ball7 is not present at room1, ball7 is not present at room3, ball7 is present at room4, robot1 is not at room1, robot1 is not at room4, robot1 is not located at room3, robot1 is not located at room5 and robot1 is present in room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "299dd0e1-d085-4a64-b35b-6fc47fdf9ae2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is not at room1, ball1 is not present at room2, ball1 is present at room4, ball1 is present at room5, ball2 is at room1, ball2 is at room2, ball2 is not located at room3, ball2 is not located at room4, ball2 is present at room5, ball3 is at room3, ball3 is not present at room4, ball3 is present at room1, ball3 is present at room2, ball3 is present at room5, ball4 is not at room5, ball4 is not located at room3, ball4 is not located at room4, ball4 is present at room1, ball4 is present at room2, ball5 is at room4, ball5 is located at room2, ball5 is not at room5, ball5 is not present at room1, ball5 is present at room3, ball6 is at room3, ball6 is located at room2, ball6 is not present at room1, ball6 is not present at room4, ball6 is not present at room5, ball7 is not located at room1, ball7 is not present at room2, ball7 is not present at room4, ball7 is present at room3, ball7 is present at room5, robot1 is at room4, robot1 is located at room5, robot1 is not located at room1, robot1 is not located at room2 and robot1 is present in room3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3661c3dc-e043-40ad-ad78-23a2edaeb441", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state,. What are the base properties of the state for ball7? Write None if there are none", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6ff29845-c450-4b41-8007-efb277749113", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for robot1? Write None if there are none", "answer": "ball1 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot1 is not carrying ball6 with rgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c06b02be-c6f5-4240-84f0-ab0e29f0ae41", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball5? Write None if there are none", "answer": "ball5 is being carried by robot1's rgripper1 and ball5 is not being carried by robot1's lgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "91d13f13-a401-4fea-9a50-bce229574733", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fff01f0e-de46-4405-ac73-0e77505e71eb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "robot1's rgripper1 is not available", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4c865340-e9e5-4012-9012-9e58dbe2d26b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "robot1's lgripper1 is not available and robot1's rgripper1 is not free", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b4da25af-a2c2-45be-903c-a876d031b847", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball5? Write None if there are none", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d8905402-c066-4ecb-9c2f-d735c4c7c5d5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state,. What are the self constraint properties of the state for ball7? Write None if there are none", "answer": "ball7 is not at room1, ball7 is not located at room2, ball7 is not located at room3 and ball7 is not located at room5", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ec46e006-68b8-45ea-b50d-f0628141714a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state,. What are the self constraint properties of the state for room3? Write None if there are none", "answer": "ball1 is not at room3, ball2 is not at room3, ball3 is not located at room3, ball4 is not present at room3, ball5 is not located at room3, ball6 is present at room3, ball7 is not located at room3 and robot1 is not at room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is present at room2, ball6 is present at room1, ball7 is present at room3, rgripper1 of robot1 is free, robot1 is at room4 and robot1's lgripper1 is available.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bde09515-8198-4df9-94ef-cf79b46a08ec", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, are all of the following properties: ball1 is at room1, ball1 is not at room3, ball1 is not present at room2, ball1 is not present at room4, ball1 is not present at room5, ball2 is not at room1, ball2 is not being carried by robot1's lgripper1, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball2 is present at room2, ball3 is not at room5, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room2, ball3 is not located at room3, ball3 is not present at room4, ball3 is present at room1, ball4 is at room2, ball4 is not at room1, ball4 is not at room5, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room3, ball4 is not located at room4, ball5 is located at room2, ball5 is not at room4, ball5 is not at room5, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room1, ball5 is not located at room3, ball6 is located at room1, ball6 is not located at room2, ball6 is not located at room3, ball6 is not located at room4, ball6 is not located at room5, ball7 is not located at room1, ball7 is not located at room2, ball7 is not located at room5, ball7 is not present at room4, ball7 is present at room3, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is at room1, robot1 is not at room4, robot1 is not at room5, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room2, robot1 is not located at room3, robot1's lgripper1 is available and robot1's rgripper1 is available, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a0936f40-69ea-457e-a7d5-9eb4e8bfb5a1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, are all of the following properties: ball1 is at room1, ball1 is not at room3, ball1 is not at room5, ball1 is not located at room2, ball1 is not present at room4, ball2 is at room2, ball2 is at room4, ball2 is located at room1, ball2 is located at room3, ball2 is located at room5, ball2 is not being carried by robot1's lgripper1, ball3 is at room1, ball3 is at room4, ball3 is being carried by robot1's rgripper1, ball3 is not at room3, ball3 is not present at room5, ball3 is present at room2, ball4 is being carried by robot1's rgripper1, ball4 is located at room3, ball4 is located at room5, ball4 is not located at room1, ball4 is not located at room2, ball4 is not located at room4, ball5 is at room1, ball5 is located at room3, ball5 is located at room5, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room4, ball5 is present at room2, ball6 is at room5, ball6 is not being carried by robot1's rgripper1, ball6 is not located at room1, ball6 is not located at room3, ball6 is not present at room2, ball6 is not present at room4, ball7 is at room1, ball7 is at room5, ball7 is being carried by robot1's rgripper1, ball7 is not at room4, ball7 is not being carried by robot1's lgripper1, ball7 is not present at room2, ball7 is present at room3, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is carrying ball6, lgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is not carrying ball2, robot1 is at room3, robot1 is carrying ball5 with rgripper1, robot1 is located at room2, robot1 is located at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not located at room5, robot1 is present in room1, robot1's lgripper1 is not available and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d318a5eb-f256-4061-bb21-d51abb66fd87", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is present at room1, ball2 is located at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is at room3, robot1 is at room1, robot1's lgripper1 is available and robot1's rgripper1 is free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "938cca10-a95b-4daf-bd27-719bc478948c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not being carried by robot1's rgripper1, ball1 is not located at room2, ball1 is not located at room4, ball1 is not located at room5, ball1 is not present at room3, ball2 is not at room4, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room3, ball3 is not at room2, ball3 is not at room3, ball3 is not at room5, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room4, ball4 is not at room3, ball4 is not located at room4, ball4 is not located at room5, ball4 is not present at room1, ball5 is not located at room4, ball5 is not located at room5, ball5 is not present at room1, ball5 is not present at room3, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room5, ball6 is not present at room2, ball6 is not present at room3, ball6 is not present at room4, ball7 is not at room1, ball7 is not at room4, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room2, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not located at room3, robot1 is not present in room4 and robot1 is not present in room5", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e35729b3-2a73-4a03-81ac-f2a92132a203", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not being carried by robot1's lgripper1, ball1 is not located at room3, ball1 is not present at room2, ball1 is not present at room4, ball1 is not present at room5, ball2 is not at room3, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room4, ball3 is not at room4, ball3 is not at room5, ball3 is not located at room2, ball3 is not present at room3, ball4 is not at room4, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room1, ball4 is not located at room5, ball4 is not present at room3, ball5 is not at room3, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room1, ball5 is not located at room4, ball5 is not present at room5, ball6 is not at room5, ball6 is not located at room2, ball6 is not located at room4, ball6 is not present at room3, ball7 is not at room1, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room2, ball7 is not located at room4, ball7 is not located at room5, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball4, robot1 is not at room5, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not located at room2, robot1 is not located at room4 and robot1 is not present in room3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1986874e-593e-4f59-ba38-b2169f95abda", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties: ball1 is not at room3, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room2, ball1 is not present at room1, ball1 is not present at room4, ball1 is not present at room5, ball2 is not located at room3, ball2 is not located at room4, ball2 is not located at room5, ball2 is not present at room1, ball2 is present at room2, ball3 is not at room4, ball3 is not located at room1, ball3 is not located at room3, ball3 is not present at room2, ball3 is present at room5, ball4 is at room2, ball4 is not at room3, ball4 is not at room5, ball4 is not located at room1, ball4 is not located at room4, ball5 is located at room2, ball5 is not at room1, ball5 is not at room4, ball5 is not at room5, ball5 is not located at room3, ball6 is not at room4, ball6 is not at room5, ball6 is not located at room3, ball6 is not present at room2, ball6 is present at room1, ball7 is located at room3, ball7 is not at room2, ball7 is not at room4, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room1, ball7 is not located at room5, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not free, rgripper1 of robot1 is free, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is carrying ball1 with lgripper1, robot1 is not at room1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room2, robot1 is not located at room3, robot1 is not located at room4 and robot1 is present in room5, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d595cbd1-6ec2-40d5-9845-66bfd3e54483", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, are all of the following properties: ball1 is located at room2, ball1 is located at room5, ball1 is not at room1, ball1 is not at room4, ball1 is not located at room3, ball2 is at room3, ball2 is being carried by robot1's rgripper1, ball2 is not at room1, ball2 is not located at room2, ball2 is not present at room4, ball2 is present at room5, ball3 is at room3, ball3 is located at room1, ball3 is not present at room2, ball3 is not present at room4, ball3 is not present at room5, ball4 is at room3, ball4 is located at room1, ball4 is located at room2, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room5, ball4 is not present at room4, ball5 is at room2, ball5 is not at room1, ball5 is not at room5, ball5 is not being carried by robot1's rgripper1, ball5 is not present at room3, ball5 is present at room4, ball6 is located at room3, ball6 is not at room1, ball6 is present at room2, ball6 is present at room4, ball6 is present at room5, ball7 is located at room5, ball7 is not located at room3, ball7 is not present at room2, ball7 is present at room1, ball7 is present at room4, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball6 with lgripper1, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not located at room3, robot1 is not located at room5, robot1 is not present in room2, robot1 is present in room4, robot1's lgripper1 is not free and robot1's rgripper1 is available, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "37d341a3-538e-477d-9e2d-46fd2e978e9a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball2 is located at room2, ball3 is present at room5, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, robot1 is carrying ball1 with lgripper1, robot1 is present in room5 and robot1's rgripper1 is free", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e0f1c9d0-a711-4fb0-b9f7-0703eb21105f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not located at room2, ball1 is not located at room3, ball1 is not located at room4, ball1 is not located at room5, ball2 is not at room4, ball2 is not at room5, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room1, ball2 is not located at room3, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room1, ball3 is not present at room2, ball3 is not present at room3, ball3 is not present at room4, ball4 is not at room1, ball4 is not at room4, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room3, ball4 is not present at room5, ball5 is not at room1, ball5 is not at room3, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room2, ball6 is not located at room5, ball6 is not present at room3, ball6 is not present at room4, ball7 is not located at room1, ball7 is not located at room2, ball7 is not located at room4, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball1, robot1 is not at room2, robot1 is not at room3, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room1, robot1 is not present in room4 and robot1's lgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ce174111-351b-4126-9206-be4860604f48", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not at room3, ball1 is not at room4, ball1 is not at room5, ball1 is not present at room1, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room4, ball2 is not present at room1, ball2 is not present at room3, ball2 is not present at room5, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room4, ball4 is not at room4, ball4 is not at room5, ball4 is not located at room1, ball4 is not located at room3, ball5 is not at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not present at room1, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room2, ball6 is not at room5, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room4, ball6 is not present at room3, ball7 is not at room5, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room1, ball7 is not located at room4, ball7 is not present at room2, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, robot1 is not at room3, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not located at room2, robot1 is not present in room1, robot1 is not present in room4 and robot1's lgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d6489fe8-b7a2-44a1-8e3d-025c0efe4d2d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties: ball1 is not at room2, ball1 is not at room3, ball1 is not at room5, ball1 is not located at room1, ball1 is not present at room4, ball2 is at room2, ball2 is not at room1, ball2 is not at room5, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room4, ball2 is not present at room3, ball3 is located at room5, ball3 is not at room1, ball3 is not at room2, ball3 is not at room3, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room4, ball4 is located at room1, ball4 is not at room4, ball4 is not being carried by robot1's rgripper1, ball4 is not present at room2, ball4 is not present at room3, ball4 is not present at room5, ball5 is located at room2, ball5 is not located at room1, ball5 is not located at room3, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room2, ball6 is not located at room3, ball6 is not located at room5, ball6 is not present at room1, ball6 is not present at room4, ball7 is at room3, ball7 is not at room1, ball7 is not at room5, ball7 is not being carried by robot1's lgripper1, ball7 is not present at room2, ball7 is not present at room4, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is carrying ball6, robot1 is carrying ball1 with lgripper1, robot1 is not at room2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room3, robot1 is not located at room4, robot1 is not located at room5, robot1 is present in room1, robot1's lgripper1 is not available and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4f136694-87b8-41ab-ae80-3104af5b815f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, are all of the following properties: ball1 is at room5, ball1 is being carried by robot1's rgripper1, ball1 is located at room2, ball1 is not located at room3, ball1 is not present at room1, ball1 is not present at room4, ball2 is located at room5, ball2 is not at room1, ball2 is not at room2, ball2 is not present at room3, ball2 is not present at room4, ball3 is at room4, ball3 is located at room1, ball3 is not at room5, ball3 is not being carried by robot1's rgripper1, ball3 is not present at room2, ball3 is present at room3, ball4 is at room2, ball4 is at room3, ball4 is at room4, ball4 is at room5, ball4 is not located at room1, ball5 is being carried by robot1's rgripper1, ball5 is located at room4, ball5 is not at room3, ball5 is not at room5, ball5 is not present at room1, ball5 is present at room2, ball6 is at room2, ball6 is at room4, ball6 is at room5, ball6 is being carried by robot1's lgripper1, ball6 is not present at room1, ball6 is not present at room3, ball7 is at room3, ball7 is at room4, ball7 is being carried by robot1's lgripper1, ball7 is being carried by robot1's rgripper1, ball7 is not located at room1, ball7 is not located at room5, ball7 is not present at room2, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball5, rgripper1 of robot1 is not free, robot1 is carrying ball1 with lgripper1, robot1 is not at room4, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not located at room2, robot1 is not present in room3, robot1 is present in room1, robot1 is present in room5 and robot1's lgripper1 is available, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "addc481c-d2bf-4276-90ab-77a5ff5d7c90", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball2 is present at room2, ball3 is present at room5, ball4 is located at room1, ball5 is at room2, ball7 is present at room3, lgripper1 of robot1 is carrying ball1, robot1 is at room1 and robot1 is carrying ball6 with rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4f12972c-074e-4b95-b7a3-24834591636b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room2, ball1 is not located at room4, ball1 is not located at room5, ball1 is not present at room3, ball2 is not at room5, ball2 is not present at room1, ball2 is not present at room3, ball2 is not present at room4, ball3 is not at room3, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room4, ball4 is not at room2, ball4 is not at room3, ball4 is not at room4, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room5, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room3, ball5 is not present at room1, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room1, ball6 is not at room2, ball6 is not at room3, ball6 is not present at room4, ball6 is not present at room5, ball7 is not at room1, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room2, ball7 is not located at room4, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not free, robot1 is not at room4, robot1 is not at room5, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not located at room3, robot1 is not present in room2 and robot1's lgripper1 is not available", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "378b95be-00cf-4866-a563-300ed622f1b0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not being carried by robot1's rgripper1, ball1 is not located at room2, ball1 is not located at room3, ball1 is not located at room4, ball1 is not present at room1, ball1 is not present at room5, ball2 is not at room4, ball2 is not located at room1, ball2 is not present at room3, ball2 is not present at room5, ball3 is not at room3, ball3 is not being carried by robot1's rgripper1, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room4, ball4 is not at room4, ball4 is not located at room3, ball4 is not present at room2, ball4 is not present at room5, ball5 is not at room1, ball5 is not at room5, ball5 is not located at room3, ball5 is not present at room4, ball6 is not at room1, ball6 is not at room2, ball6 is not at room3, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room5, ball6 is not present at room4, ball7 is not at room5, ball7 is not located at room4, ball7 is not present at room1, ball7 is not present at room2, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not free, robot1 is not at room5, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room2, robot1 is not located at room4 and robot1 is not present in room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a0116feb-55f4-4a94-935e-044786f7bb4a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball1 is at room4, ball1 is not at room2, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room3, ball1 is not present at room1, ball1 is not present at room5, ball2 is located at room2, ball2 is not at room1, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room3, ball2 is not located at room4, ball2 is not located at room5, ball3 is not at room4, ball3 is not located at room3, ball3 is not present at room1, ball3 is not present at room2, ball3 is present at room5, ball4 is located at room1, ball4 is not at room2, ball4 is not at room3, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room5, ball4 is not present at room4, ball5 is not at room3, ball5 is not located at room1, ball5 is not located at room4, ball5 is not present at room5, ball5 is present at room2, ball6 is at room3, ball6 is not at room1, ball6 is not at room5, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room2, ball6 is not located at room4, ball7 is being carried by robot1's rgripper1, ball7 is not at room2, ball7 is not at room4, ball7 is not located at room1, ball7 is not located at room3, ball7 is not present at room5, lgripper1 of robot1 is free, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not free, robot1 is at room4, robot1 is not at room3, robot1 is not at room5, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not located at room1 and robot1 is not present in room2, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "41e857da-21c8-436c-bfdf-127d5e67244d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, are all of the following properties: ball1 is being carried by robot1's lgripper1, ball1 is located at room5, ball1 is not at room1, ball1 is not present at room2, ball1 is not present at room3, ball1 is not present at room4, ball2 is at room2, ball2 is located at room1, ball2 is not located at room3, ball2 is not located at room4, ball2 is present at room5, ball3 is at room2, ball3 is located at room5, ball3 is not present at room4, ball3 is present at room1, ball3 is present at room3, ball4 is being carried by robot1's rgripper1, ball4 is not at room3, ball4 is not at room5, ball4 is not located at room1, ball4 is not located at room2, ball4 is not present at room4, ball5 is at room3, ball5 is not present at room1, ball5 is present at room2, ball5 is present at room4, ball5 is present at room5, ball6 is at room2, ball6 is located at room1, ball6 is not present at room3, ball6 is not present at room5, ball6 is present at room4, ball7 is at room4, ball7 is not at room5, ball7 is not located at room3, ball7 is not present at room1, ball7 is not present at room2, lgripper1 of robot1 is carrying ball6, lgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is carrying ball7, robot1 is at room4, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball5 with lgripper1, robot1 is carrying ball5 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is present in room1, robot1 is present in room2, robot1 is present in room3, robot1 is present in room5, robot1's lgripper1 is free and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "35641d55-1e08-401b-8eb5-bb4f3466516b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is present at room4, ball2 is located at room2, ball3 is at room5, ball4 is located at room1, ball5 is present at room2, ball6 is located at room3, ball7 is being carried by robot1's rgripper1, robot1 is located at room4 and robot1's lgripper1 is available", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8632c2c6-fd1b-4aca-b6c1-f8b795b56aee", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room2, ball1 is not located at room3, ball1 is not present at room5, ball2 is not at room1, ball2 is not at room3, ball2 is not located at room4, ball2 is not located at room5, ball3 is not at room2, ball3 is not located at room1, ball3 is not present at room3, ball3 is not present at room4, ball4 is not at room4, ball4 is not at room5, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room2, ball4 is not present at room3, ball5 is not at room1, ball5 is not at room3, ball5 is not at room4, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room5, ball6 is not at room4, ball6 is not at room5, ball6 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball6 is not located at room1, ball6 is not located at room2, ball7 is not at room2, ball7 is not at room3, ball7 is not located at room1, ball7 is not located at room4, ball7 is not located at room5, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not free, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not located at room2, robot1 is not located at room5, robot1 is not present in room1 and robot1 is not present in room3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cbe27042-734d-4198-bfd3-caa92a47ffdd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room5, ball1 is not located at room2, ball1 is not located at room3, ball1 is not present at room1, ball2 is not at room3, ball2 is not located at room1, ball2 is not located at room5, ball2 is not present at room4, ball3 is not at room3, ball3 is not at room4, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room2, ball3 is not present at room1, ball4 is not at room3, ball4 is not located at room5, ball4 is not present at room2, ball4 is not present at room4, ball5 is not at room5, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room3, ball5 is not located at room4, ball5 is not present at room1, ball6 is not at room2, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room1, ball6 is not located at room5, ball6 is not present at room4, ball7 is not at room2, ball7 is not at room5, ball7 is not located at room3, ball7 is not located at room4, ball7 is not present at room1, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not located at room2, robot1 is not located at room5, robot1 is not present in room3 and robot1's rgripper1 is not free", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3eb6003d-4f6c-43f9-8b7d-7476489dbf7a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties: ball1 is at room4, ball1 is not at room1, ball1 is not at room3, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room5, ball1 is not present at room2, ball2 is being carried by robot1's lgripper1, ball2 is not at room2, ball2 is not at room3, ball2 is not located at room1, ball2 is not present at room4, ball2 is not present at room5, ball3 is located at room5, ball3 is not at room1, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room3, ball3 is not located at room4, ball3 is not present at room2, ball4 is at room1, ball4 is not at room3, ball4 is not at room5, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room2, ball4 is not present at room4, ball5 is being carried by robot1's rgripper1, ball5 is not at room1, ball5 is not at room3, ball5 is not located at room5, ball5 is not present at room2, ball5 is not present at room4, ball6 is located at room3, ball6 is not at room4, ball6 is not at room5, ball6 is not present at room1, ball6 is not present at room2, ball7 is at room4, ball7 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room3, ball7 is not present at room1, ball7 is not present at room2, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not free, robot1 is at room2, robot1 is not at room5, robot1 is not carrying ball1 with lgripper1, robot1 is not located at room3, robot1 is not present in room1, robot1 is not present in room4 and robot1's lgripper1 is not free, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a9af8729-05c7-4333-aa83-cae19decabec", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, are all of the following properties: ball1 is at room2, ball1 is at room4, ball1 is located at room1, ball1 is located at room5, ball1 is not located at room3, ball2 is located at room1, ball2 is located at room2, ball2 is located at room5, ball2 is not at room3, ball2 is not being carried by robot1's rgripper1, ball2 is not present at room4, ball3 is at room4, ball3 is located at room5, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room3, ball4 is not at room1, ball4 is not at room2, ball4 is not at room4, ball4 is not at room5, ball4 is not located at room3, ball5 is at room1, ball5 is at room5, ball5 is located at room3, ball5 is not at room4, ball5 is not present at room2, ball6 is located at room5, ball6 is not located at room1, ball6 is not present at room2, ball6 is present at room3, ball6 is present at room4, ball7 is at room5, ball7 is being carried by robot1's lgripper1, ball7 is not at room4, ball7 is not located at room3, ball7 is present at room1, ball7 is present at room2, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is free, rgripper1 of robot1 is not carrying ball1, robot1 is at room3, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball6 with rgripper1, robot1 is carrying ball7 with rgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not located at room4, robot1 is not located at room5, robot1 is not present in room1, robot1 is not present in room2 and robot1's lgripper1 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cf0d2f55-9e0e-42e1-965a-8c506884d219", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is located at room4, ball3 is located at room5, ball4 is at room1, ball6 is at room3, ball7 is present at room4, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1 and robot1 is present in room2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0d441314-82a4-440e-8921-72e9da946f14", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room5, ball1 is not located at room2, ball1 is not located at room3, ball2 is not at room1, ball2 is not at room3, ball2 is not located at room4, ball2 is not present at room2, ball2 is not present at room5, ball3 is not at room4, ball3 is not located at room1, ball3 is not located at room3, ball3 is not present at room2, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball4 is not located at room3, ball4 is not located at room5, ball4 is not present at room4, ball5 is not at room1, ball5 is not at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room2, ball5 is not located at room4, ball5 is not present at room5, ball6 is not at room1, ball6 is not at room2, ball6 is not at room4, ball6 is not at room5, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room1, ball7 is not located at room2, ball7 is not located at room3, ball7 is not located at room5, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, robot1 is not at room1, robot1 is not at room3, robot1 is not at room4, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room5 and robot1's rgripper1 is not available", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a98b4a74-f106-4a40-a6ee-609a3452207c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not located at room1, ball1 is not located at room2, ball1 is not located at room3, ball1 is not located at room5, ball2 is not at room4, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room2, ball2 is not present at room3, ball3 is not at room2, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball3 is not present at room1, ball3 is not present at room4, ball4 is not at room4, ball4 is not at room5, ball4 is not located at room2, ball4 is not present at room3, ball5 is not at room4, ball5 is not being carried by robot1's lgripper1, ball5 is not present at room1, ball5 is not present at room2, ball5 is not present at room3, ball5 is not present at room5, ball6 is not at room5, ball6 is not located at room1, ball6 is not present at room2, ball6 is not present at room4, ball7 is not at room2, ball7 is not located at room1, ball7 is not present at room3, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room4, robot1 is not located at room5, robot1 is not present in room3 and robot1's rgripper1 is not available", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is at room1, ball4 is at room2, ball5 is at room2, ball6 is present at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is present in room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "649c5d44-034b-47ca-b692-0653b2c98cf9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c58664ab-a785-4db3-9689-9180cfbf2f33", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball6 is dropped in room4 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c94f52ae-2ca5-4127-991f-bc978eb581c6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: robot1 moves from room4 to room1. Is the action: robot1 moves to room1 from room4 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2d355827-c8b8-49a3-9dc9-12069d97a887", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: lgripper1 of robot1 drops ball1 in room2. Is the action: ball1 is dropped in room2 with lgripper1 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cc205608-3c64-43bd-8893-140b66f1380a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f03af82d-73fe-43c1-9e1a-df81c31277cb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "robot1 moves to room4 from room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "effb9260-4380-4c11-bc67-afccfe8dee4f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room1 to room4, from room1, robot1 moves to room2, ball6 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, from room1, robot1 moves to room3, from room1, robot1's rgripper1 picks up ball6, lgripper1 of robot1 picks up ball1 in room1, lgripper1 of robot1 picks up ball3 in room1 and ball1 is picked from room1 with rgripper1 by robot1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c7a40d09-287b-469c-ad35-51da58e64c9b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room4, robot1's lgripper1 drops ball3, in room2, robot1's lgripper1 drops ball2, in room5, robot1's lgripper1 drops ball2, lgripper1 of robot1 drops ball5 in room4, rgripper1 of robot1 picks up ball7 in room3, in room5, robot1's lgripper1 drops ball4, from room3, robot1's lgripper1 picks up ball4, rgripper1 of robot1 drops ball7 in room2, ball6 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room3, ball1 is dropped in room3 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball5, ball7 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball3 in room5, from room2, robot1's lgripper1 picks up ball2, in room4, robot1's lgripper1 drops ball6, ball5 is picked from room1 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball5, rgripper1 of robot1 drops ball5 in room4, from room5, robot1's rgripper1 picks up ball7, ball2 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room2, ball6 is picked from room4 with lgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, ball4 is dropped in room2 with lgripper1 by robot1, rgripper1 of robot1 drops ball1 in room2, from room2, robot1's rgripper1 picks up ball1, rgripper1 of robot1 drops ball2 in room5, from room3, robot1 moves to room4, from room2, robot1 moves to room4, robot1 moves from room4 to room5, lgripper1 of robot1 drops ball1 in room2, robot1 moves from room5 to room1, ball5 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room4, rgripper1 of robot1 picks up ball7 in room2, rgripper1 of robot1 picks up ball1 in room4, lgripper1 of robot1 drops ball7 in room3, from room3, robot1's rgripper1 picks up ball6, from room3, robot1 moves to room1, from room3, robot1's lgripper1 picks up ball5, from room1, robot1's rgripper1 picks up ball4, robot1 moves to room3 from room5, ball3 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 drops ball4 in room4, ball4 is dropped in room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room4, from room4, robot1's rgripper1 picks up ball5, in room5, robot1's lgripper1 drops ball7, rgripper1 of robot1 drops ball4 in room4, lgripper1 of robot1 drops ball3 in room1, ball4 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, lgripper1 of robot1 drops ball3 in room5, ball2 is picked from room5 with lgripper1 by robot1, rgripper1 of robot1 drops ball5 in room2, ball6 is picked from room5 with rgripper1 by robot1, lgripper1 of robot1 picks up ball3 in room4, in room1, robot1's rgripper1 drops ball6, from room5, robot1's lgripper1 picks up ball1, lgripper1 of robot1 picks up ball7 in room5, robot1 moves to room3 from room4, rgripper1 of robot1 drops ball4 in room5, rgripper1 of robot1 drops ball4 in room1, ball1 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball4 in room4, lgripper1 of robot1 picks up ball1 in room2, from room1, robot1's lgripper1 picks up ball2, ball6 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, from room4, robot1's rgripper1 picks up ball6, rgripper1 of robot1 picks up ball4 in room4, ball7 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room4, rgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 drops ball5 in room5, in room1, robot1's rgripper1 drops ball1, lgripper1 of robot1 drops ball6 in room5, ball5 is dropped in room3 with rgripper1 by robot1, from room4, robot1's lgripper1 picks up ball1, robot1 moves from room2 to room3, in room2, robot1's lgripper1 drops ball3, robot1 moves from room3 to room5, lgripper1 of robot1 picks up ball6 in room2, ball3 is dropped in room3 with lgripper1 by robot1, in room5, robot1's rgripper1 drops ball3, lgripper1 of robot1 drops ball1 in room1, ball4 is picked from room5 with lgripper1 by robot1, in room2, robot1's rgripper1 drops ball3, lgripper1 of robot1 picks up ball2 in room3, robot1 moves to room1 from room2, in room3, robot1's rgripper1 drops ball7, ball2 is picked from room5 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 picks up ball6 in room5, rgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball2 in room2, ball6 is dropped in room2 with lgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1 moves to room5, rgripper1 of robot1 drops ball1 in room3, rgripper1 of robot1 drops ball1 in room5, from room2, robot1's lgripper1 picks up ball7, from room4, robot1's lgripper1 picks up ball2, rgripper1 of robot1 picks up ball3 in room5, ball5 is dropped in room5 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 drops ball3 in room4, in room2, robot1's lgripper1 drops ball7, ball2 is dropped in room3 with lgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room3, from room1, robot1's lgripper1 picks up ball4, from room5, robot1's rgripper1 picks up ball5, in room1, robot1's lgripper1 drops ball6, lgripper1 of robot1 picks up ball5 in room2, ball1 is dropped in room4 with rgripper1 by robot1, rgripper1 of robot1 drops ball7 in room5, ball4 is picked from room3 with rgripper1 by robot1, ball5 is picked from room5 with lgripper1 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, in room4, robot1's lgripper1 drops ball2, ball1 is dropped in room4 with lgripper1 by robot1, from room3, robot1 moves to room2, lgripper1 of robot1 drops ball5 in room3, in room1, robot1's rgripper1 drops ball5, lgripper1 of robot1 drops ball1 in room5, from room1, robot1's lgripper1 picks up ball7, from room1, robot1's rgripper1 picks up ball5, from room2, robot1's lgripper1 picks up ball4, ball4 is picked from room5 with rgripper1 by robot1, rgripper1 of robot1 drops ball6 in room5, robot1 moves to room2 from room4, ball5 is picked from room3 with rgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball3 in room3, ball1 is picked from room5 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, from room4, robot1 moves to room1, in room4, robot1's rgripper1 drops ball6, robot1 moves from room5 to room4, in room1, robot1's lgripper1 drops ball2, ball6 is dropped in room3 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "915074c5-bbab-4851-b30f-3e7fdc72ef45", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is dropped in room5 with rgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball1, robot1 moves from room1 to room5 and robot1 moves from room4 to room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "88b3e3f7-d74a-45e6-94dd-2c5d09e89a76", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is dropped in room5 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room3, robot1's rgripper1 picks up ball6 and from room4, robot1 moves to room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8a27195e-5d62-4885-a123-6bdea2ea156d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3. Is the action: rgripper1 of robot1 drops ball3 in room5 executable at step 5, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "111b3429-9fd4-4f96-b435-57b1f739ede4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: rgripper1 of robot1 drops ball4 in room5, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5. Is the action: rgripper1 of robot1 drops ball4 in room5 executable at step 1, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f120c80f-b220-4a90-8eca-9ef6b756e28f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ba77f542-e456-4a1e-b4f0-052543122484", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, rgripper1 of robot1 drops ball7 in room4, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "in room4, robot1's rgripper1 drops ball7", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a9da9842-5b52-42fd-abbc-9498376024e0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room5 to room1, robot1 moves to room3 from room5, robot1 moves from room5 to room2, ball3 is picked from room5 with rgripper1 by robot1, in room5, robot1's lgripper1 drops ball1 and robot1 moves from room5 to room4", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6a5cd6bc-a858-4cc2-bf23-16c636ee2fed", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "lgripper1 of robot1 drops ball3 in room4, in room2, robot1's lgripper1 drops ball2, lgripper1 of robot1 drops ball2 in room5, ball5 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, lgripper1 of robot1 drops ball4 in room5, ball4 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room2 with rgripper1 by robot1, ball6 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room3, ball1 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room3 with lgripper1 by robot1, from room5, robot1's lgripper1 picks up ball3, lgripper1 of robot1 picks up ball2 in room2, ball6 is dropped in room4 with lgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball5, ball5 is dropped in room4 with rgripper1 by robot1, from room5, robot1's rgripper1 picks up ball7, ball2 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room2, robot1's rgripper1 picks up ball6, lgripper1 of robot1 picks up ball6 in room4, from room4, robot1's lgripper1 picks up ball5, from room3, robot1's rgripper1 picks up ball3, lgripper1 of robot1 drops ball4 in room2, in room2, robot1's rgripper1 drops ball1, ball1 is picked from room2 with rgripper1 by robot1, robot1 moves from room1 to room4, ball2 is dropped in room5 with rgripper1 by robot1, from room3, robot1 moves to room4, robot1 moves from room2 to room4, robot1 moves from room4 to room5, lgripper1 of robot1 drops ball1 in room2, rgripper1 of robot1 picks up ball5 in room2, ball2 is picked from room4 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room4, ball7 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, from room3, robot1's lgripper1 picks up ball5, from room1, robot1's rgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball3, lgripper1 of robot1 drops ball4 in room4, ball4 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball5 is picked from room4 with rgripper1 by robot1, in room5, robot1's lgripper1 drops ball7, in room4, robot1's rgripper1 drops ball4, ball3 is dropped in room1 with lgripper1 by robot1, robot1 moves from room1 to room2, in room3, robot1's rgripper1 drops ball4, in room1, robot1's rgripper1 drops ball7, lgripper1 of robot1 drops ball3 in room5, from room5, robot1's lgripper1 picks up ball2, in room2, robot1's rgripper1 drops ball5, rgripper1 of robot1 picks up ball6 in room5, lgripper1 of robot1 picks up ball3 in room4, rgripper1 of robot1 drops ball6 in room1, from room5, robot1's lgripper1 picks up ball1, lgripper1 of robot1 picks up ball7 in room5, robot1 moves from room4 to room3, rgripper1 of robot1 drops ball4 in room5, from room1, robot1's lgripper1 picks up ball6, ball4 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 picks up ball1 in room3, ball4 is picked from room4 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, lgripper1 of robot1 picks up ball1 in room2, ball2 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room5, ball6 is dropped in room2 with rgripper1 by robot1, from room4, robot1's lgripper1 picks up ball7, ball6 is picked from room4 with rgripper1 by robot1, from room4, robot1's rgripper1 picks up ball4, ball7 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, robot1 moves from room1 to room3, in room4, robot1's lgripper1 drops ball7, ball7 is picked from room1 with rgripper1 by robot1, from room4, robot1's rgripper1 picks up ball7, ball2 is dropped in room3 with rgripper1 by robot1, ball5 is dropped in room5 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball1, ball6 is dropped in room5 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball5, from room4, robot1's lgripper1 picks up ball1, robot1 moves from room2 to room3, lgripper1 of robot1 drops ball3 in room2, from room3, robot1 moves to room5, from room2, robot1's lgripper1 picks up ball6, ball3 is dropped in room3 with lgripper1 by robot1, ball3 is dropped in room5 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, from room5, robot1's lgripper1 picks up ball4, ball3 is dropped in room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room3, robot1 moves from room2 to room1, in room3, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball2 in room5, rgripper1 of robot1 drops ball2 in room1, from room5, robot1's lgripper1 picks up ball6, ball2 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room2 with rgripper1 by robot1, in room2, robot1's lgripper1 drops ball6, robot1 moves to room5 from room2, rgripper1 of robot1 drops ball1 in room3, rgripper1 of robot1 drops ball1 in room5, lgripper1 of robot1 picks up ball7 in room2, from room4, robot1's lgripper1 picks up ball2, rgripper1 of robot1 picks up ball6 in room1, ball5 is dropped in room5 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 drops ball3 in room4, in room2, robot1's lgripper1 drops ball7, in room3, robot1's lgripper1 drops ball2, rgripper1 of robot1 picks up ball1 in room3, from room1, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball5 in room5, from room1, robot1's lgripper1 picks up ball1, in room1, robot1's lgripper1 drops ball6, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, in room5, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball4 in room3, ball5 is picked from room5 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball2, lgripper1 of robot1 drops ball2 in room4, in room4, robot1's lgripper1 drops ball1, lgripper1 of robot1 picks up ball3 in room1, robot1 moves to room2 from room3, lgripper1 of robot1 drops ball5 in room3, rgripper1 of robot1 drops ball5 in room1, from room1, robot1's lgripper1 picks up ball7, ball5 is picked from room1 with rgripper1 by robot1, from room2, robot1's lgripper1 picks up ball4, ball4 is picked from room5 with rgripper1 by robot1, in room5, robot1's rgripper1 drops ball6, from room4, robot1 moves to room2, from room3, robot1's rgripper1 picks up ball5, ball3 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball3, rgripper1 of robot1 picks up ball1 in room5, from room2, robot1's lgripper1 picks up ball3, ball7 is dropped in room4 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, robot1 moves to room1 from room4, ball6 is dropped in room4 with rgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room1, in room1, robot1's lgripper1 drops ball2, in room3, robot1's lgripper1 drops ball6 and ball3 is dropped in room1 with rgripper1 by robot1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "45e7996c-f526-4303-9db7-55d4326b25bf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room2, robot1's rgripper1 picks up ball4, rgripper1 of robot1 drops ball3 in room5, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room2 to room1, robot1 moves from room5 to room2, robot1 moves to room1 from room4 and robot1 moves to room5 from room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0ab42b53-52c6-4af7-946b-99f0fa8c9140", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room1, robot1's rgripper1 picks up ball6, from room4, robot1's rgripper1 picks up ball1, rgripper1 of robot1 drops ball3 in room5, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball3 in room1, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, robot1 moves from room4 to room1, robot1 moves to room2 from room5 and robot1 moves to room5 from room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ab88931e-f02c-4e06-b8c9-97d9b229b97b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1. Is the action: ball6 is picked from room1 with rgripper1 by robot1 executable at step 10, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ef19aabb-cf5b-4149-a1bd-6c540138980a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, ball3 is picked from room4 with rgripper1 by robot1, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6. Is the action: ball3 is picked from room4 with rgripper1 by robot1 executable at step 6, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7f5dbfb6-7c6b-4eea-bbe2-e28f4562a7c9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4d7861b7-5184-415b-89fa-b4aa2759f871", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "in room1, robot1's lgripper1 drops ball4", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a7a4446a-a0ca-4642-8186-e1c7c8157546", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room1 to room4, robot1 moves to room2 from room1, rgripper1 of robot1 drops ball6 in room1, from room1, robot1 moves to room5, robot1 moves from room1 to room3 and ball1 is dropped in room1 with lgripper1 by robot1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "39bff61d-9f43-4b0e-b0a6-6a0798905452", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room4, robot1's lgripper1 drops ball3, in room2, robot1's lgripper1 drops ball2, ball2 is dropped in room5 with lgripper1 by robot1, in room4, robot1's lgripper1 drops ball5, from room3, robot1's rgripper1 picks up ball7, lgripper1 of robot1 drops ball4 in room5, lgripper1 of robot1 picks up ball4 in room3, in room2, robot1's rgripper1 drops ball7, from room3, robot1's lgripper1 picks up ball6, rgripper1 of robot1 picks up ball2 in room3, lgripper1 of robot1 drops ball1 in room3, lgripper1 of robot1 drops ball5 in room2, from room3, robot1's lgripper1 picks up ball7, from room5, robot1's lgripper1 picks up ball3, lgripper1 of robot1 picks up ball2 in room2, lgripper1 of robot1 drops ball6 in room4, ball5 is picked from room1 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball5, in room4, robot1's rgripper1 drops ball5, ball7 is picked from room5 with rgripper1 by robot1, from room2, robot1's rgripper1 picks up ball2, ball6 is dropped in room3 with rgripper1 by robot1, ball6 is picked from room2 with rgripper1 by robot1, from room4, robot1's lgripper1 picks up ball6, ball5 is picked from room4 with lgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 drops ball4 in room2, in room2, robot1's rgripper1 drops ball1, from room2, robot1's rgripper1 picks up ball1, rgripper1 of robot1 drops ball2 in room5, robot1 moves to room4 from room3, robot1 moves to room4 from room2, from room4, robot1 moves to room5, ball1 is dropped in room2 with lgripper1 by robot1, robot1 moves to room1 from room5, ball5 is picked from room2 with rgripper1 by robot1, from room4, robot1's rgripper1 picks up ball2, from room2, robot1's rgripper1 picks up ball7, ball1 is picked from room4 with rgripper1 by robot1, in room3, robot1's lgripper1 drops ball7, from room3, robot1's rgripper1 picks up ball6, robot1 moves to room1 from room3, lgripper1 of robot1 picks up ball5 in room3, ball4 is picked from room1 with rgripper1 by robot1, robot1 moves from room5 to room3, from room2, robot1's rgripper1 picks up ball3, in room4, robot1's lgripper1 drops ball4, lgripper1 of robot1 drops ball4 in room1, ball3 is picked from room4 with rgripper1 by robot1, from room4, robot1's rgripper1 picks up ball5, in room5, robot1's lgripper1 drops ball7, rgripper1 of robot1 drops ball4 in room4, in room1, robot1's lgripper1 drops ball3, ball4 is dropped in room3 with rgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball3 is dropped in room5 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room5, in room2, robot1's rgripper1 drops ball5, rgripper1 of robot1 picks up ball6 in room5, lgripper1 of robot1 picks up ball3 in room4, ball1 is picked from room5 with lgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room5, robot1 moves to room3 from room4, ball4 is dropped in room5 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball6, rgripper1 of robot1 drops ball4 in room1, from room3, robot1's lgripper1 picks up ball1, ball4 is picked from room4 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room2, robot1's lgripper1 picks up ball1, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room4, rgripper1 of robot1 picks up ball6 in room4, rgripper1 of robot1 picks up ball4 in room4, in room1, robot1's lgripper1 drops ball7, rgripper1 of robot1 drops ball4 in room2, ball7 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room1, from room4, robot1's rgripper1 picks up ball7, in room3, robot1's rgripper1 drops ball2, ball5 is dropped in room5 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball1, lgripper1 of robot1 drops ball6 in room5, ball5 is dropped in room3 with rgripper1 by robot1, ball1 is picked from room4 with lgripper1 by robot1, robot1 moves from room2 to room3, lgripper1 of robot1 drops ball3 in room2, robot1 moves from room3 to room5, from room2, robot1's lgripper1 picks up ball6, lgripper1 of robot1 drops ball3 in room3, in room5, robot1's rgripper1 drops ball3, lgripper1 of robot1 picks up ball4 in room5, rgripper1 of robot1 drops ball3 in room2, lgripper1 of robot1 picks up ball2 in room3, from room2, robot1 moves to room1, ball7 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room5 with rgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 picks up ball6 in room5, from room1, robot1's rgripper1 picks up ball2, in room2, robot1's rgripper1 drops ball2, in room2, robot1's lgripper1 drops ball6, from room5, robot1 moves to room2, robot1 moves to room5 from room2, rgripper1 of robot1 drops ball1 in room3, in room5, robot1's rgripper1 drops ball1, lgripper1 of robot1 picks up ball7 in room2, from room4, robot1's lgripper1 picks up ball2, ball6 is picked from room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room5, ball5 is dropped in room5 with rgripper1 by robot1, rgripper1 of robot1 picks up ball4 in room2, in room4, robot1's rgripper1 drops ball3, lgripper1 of robot1 drops ball7 in room2, in room3, robot1's lgripper1 drops ball2, ball1 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 picks up ball4 in room1, from room5, robot1's rgripper1 picks up ball5, lgripper1 of robot1 picks up ball1 in room1, ball6 is dropped in room1 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball5, rgripper1 of robot1 drops ball1 in room4, in room5, robot1's rgripper1 drops ball7, from room3, robot1's rgripper1 picks up ball4, from room5, robot1's lgripper1 picks up ball5, rgripper1 of robot1 drops ball2 in room4, ball2 is dropped in room4 with lgripper1 by robot1, in room4, robot1's lgripper1 drops ball1, from room1, robot1's lgripper1 picks up ball3, robot1 moves from room3 to room2, ball5 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room5 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball5 in room1, from room2, robot1's lgripper1 picks up ball4, from room5, robot1's rgripper1 picks up ball4, ball6 is dropped in room5 with rgripper1 by robot1, robot1 moves from room4 to room2, rgripper1 of robot1 picks up ball5 in room3, ball3 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, from room5, robot1's rgripper1 picks up ball1, ball3 is picked from room2 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, in room3, robot1's lgripper1 drops ball4, from room4, robot1 moves to room1, rgripper1 of robot1 drops ball6 in room4, ball1 is picked from room1 with rgripper1 by robot1, robot1 moves to room4 from room5, ball2 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 drops ball6 in room3 and rgripper1 of robot1 drops ball3 in room1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8e4850ee-ece7-40e3-af45-4ac655fbb6e1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room1, robot1 moves to room5, from room2, robot1's rgripper1 picks up ball4, from room3, robot1's rgripper1 picks up ball7, in room5, robot1's rgripper1 drops ball3, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room3 to room4, robot1 moves to room1 from room2, robot1 moves to room1 from room4, robot1 moves to room2 from room5 and robot1 moves to room3 from room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2a9a162a-eb5e-4280-bc4b-83528a8b03b6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1 moves to room5, from room2, robot1 moves to room1, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, lgripper1 of robot1 drops ball3 in room3, rgripper1 of robot1 drops ball3 in room5, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, robot1 moves from room4 to room1 and robot1 moves from room5 to room2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b064874e-93a1-4e7e-b3dd-ef5c724716ff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1. Is the action: in room1, robot1's rgripper1 drops ball4 executable at step 9, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "48bc5035-2372-4686-b70b-5a71634e6144", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, ball1 is dropped in room2 with rgripper1 by robot1 and in room4, robot1's lgripper1 drops ball1. Is the action: in room2, robot1's rgripper1 drops ball1 executable at step 14, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b602eb83-7def-4761-98f2-0b8098b8cae2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "db90d416-ab11-4671-84a3-df4777814517", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, from room5, robot1's lgripper1 picks up ball4, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "lgripper1 of robot1 picks up ball4 in room5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "daf76bdd-f9ed-4de3-b143-80ecbaffa57b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room4 to room5, robot1 moves from room4 to room3, from room4, robot1's lgripper1 picks up ball1, robot1 moves from room4 to room2, in room4, robot1's rgripper1 drops ball7 and robot1 moves to room1 from room4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "afe31070-99a7-40a7-a882-dc1d4749b013", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room4, robot1's lgripper1 drops ball3, ball2 is dropped in room2 with lgripper1 by robot1, ball2 is dropped in room5 with lgripper1 by robot1, lgripper1 of robot1 drops ball5 in room4, from room3, robot1's rgripper1 picks up ball7, lgripper1 of robot1 drops ball4 in room5, lgripper1 of robot1 picks up ball4 in room3, in room2, robot1's rgripper1 drops ball7, from room3, robot1's lgripper1 picks up ball6, rgripper1 of robot1 picks up ball2 in room3, ball1 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball7, from room5, robot1's lgripper1 picks up ball3, lgripper1 of robot1 picks up ball2 in room2, lgripper1 of robot1 drops ball6 in room4, ball5 is picked from room1 with lgripper1 by robot1, lgripper1 of robot1 drops ball5 in room1, in room4, robot1's rgripper1 drops ball5, from room5, robot1's rgripper1 picks up ball7, from room2, robot1's rgripper1 picks up ball2, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball6 in room2, from room4, robot1's lgripper1 picks up ball6, lgripper1 of robot1 picks up ball5 in room4, from room3, robot1's rgripper1 picks up ball3, ball4 is dropped in room2 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper1 by robot1, ball1 is picked from room2 with rgripper1 by robot1, from room1, robot1 moves to room4, in room5, robot1's rgripper1 drops ball2, robot1 moves from room3 to room4, from room2, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room2, from room5, robot1 moves to room1, rgripper1 of robot1 picks up ball5 in room2, rgripper1 of robot1 picks up ball2 in room4, ball7 is picked from room2 with rgripper1 by robot1, from room4, robot1's rgripper1 picks up ball1, lgripper1 of robot1 drops ball7 in room3, rgripper1 of robot1 picks up ball6 in room3, from room3, robot1 moves to room1, ball5 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 picks up ball4 in room1, robot1 moves to room3 from room5, ball3 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 drops ball4 in room4, ball4 is dropped in room1 with lgripper1 by robot1, from room4, robot1's rgripper1 picks up ball3, ball5 is picked from room4 with rgripper1 by robot1, lgripper1 of robot1 drops ball7 in room5, in room4, robot1's rgripper1 drops ball4, ball3 is dropped in room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball4 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, in room5, robot1's lgripper1 drops ball3, from room5, robot1's lgripper1 picks up ball2, ball5 is dropped in room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room5, ball3 is picked from room4 with lgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room5 with lgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room5, ball4 is dropped in room5 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball1 in room3, ball4 is picked from room4 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room2, robot1's lgripper1 picks up ball1, ball2 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room5, in room2, robot1's rgripper1 drops ball6, from room4, robot1's lgripper1 picks up ball7, ball6 is picked from room4 with rgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball4 in room2, robot1 moves to room3 from room1, in room4, robot1's lgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball7, ball7 is picked from room4 with rgripper1 by robot1, in room3, robot1's rgripper1 drops ball2, ball5 is dropped in room5 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball1, ball6 is dropped in room5 with lgripper1 by robot1, ball5 is dropped in room3 with rgripper1 by robot1, robot1 moves to room3 from room2, lgripper1 of robot1 drops ball3 in room2, from room3, robot1 moves to room5, ball6 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball3 is dropped in room5 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball1, ball4 is picked from room5 with lgripper1 by robot1, rgripper1 of robot1 drops ball3 in room2, from room3, robot1's lgripper1 picks up ball2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball7 in room3, from room5, robot1's rgripper1 picks up ball2, rgripper1 of robot1 drops ball2 in room1, from room5, robot1's lgripper1 picks up ball6, from room1, robot1's rgripper1 picks up ball2, rgripper1 of robot1 drops ball2 in room2, in room2, robot1's lgripper1 drops ball6, robot1 moves from room5 to room2, robot1 moves to room5 from room2, rgripper1 of robot1 drops ball1 in room3, in room5, robot1's rgripper1 drops ball1, from room2, robot1's lgripper1 picks up ball7, from room4, robot1's lgripper1 picks up ball2, from room1, robot1's rgripper1 picks up ball6, rgripper1 of robot1 picks up ball3 in room5, in room5, robot1's rgripper1 drops ball5, ball4 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 drops ball3 in room4, ball7 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's rgripper1 picks up ball1, lgripper1 of robot1 picks up ball4 in room1, ball5 is picked from room5 with rgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball6, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, in room5, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball4 in room3, lgripper1 of robot1 picks up ball5 in room5, rgripper1 of robot1 drops ball2 in room4, ball2 is dropped in room4 with lgripper1 by robot1, lgripper1 of robot1 drops ball1 in room4, lgripper1 of robot1 picks up ball3 in room1, robot1 moves from room3 to room2, lgripper1 of robot1 drops ball5 in room3, rgripper1 of robot1 drops ball5 in room1, in room5, robot1's lgripper1 drops ball1, ball7 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball5, lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball4 in room5, ball6 is dropped in room5 with rgripper1 by robot1, ball5 is picked from room3 with rgripper1 by robot1, from room3, robot1's lgripper1 picks up ball3, ball3 is dropped in room3 with rgripper1 by robot1, from room5, robot1's rgripper1 picks up ball1, ball3 is picked from room2 with lgripper1 by robot1, lgripper1 of robot1 drops ball4 in room3, rgripper1 of robot1 drops ball6 in room4, rgripper1 of robot1 picks up ball1 in room1, from room5, robot1 moves to room4, lgripper1 of robot1 drops ball2 in room1, in room3, robot1's lgripper1 drops ball6 and in room1, robot1's rgripper1 drops ball3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "51a2a80e-8eab-4523-97dc-cdc9a0bf346a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, from room1, robot1 moves to room3, from room2, robot1's rgripper1 picks up ball4, from room3, robot1 moves to room4, from room3, robot1's rgripper1 picks up ball7, lgripper1 of robot1 picks up ball1 in room1, lgripper1 of robot1 picks up ball2 in room2, rgripper1 of robot1 drops ball3 in room5, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball5 in room2, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room2 to room1, robot1 moves from room4 to room1, robot1 moves from room4 to room2, robot1 moves from room5 to room2 and robot1 moves to room5 from room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4f714ee5-f9fc-4ea9-ae2f-e65e70a5c9d4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with rgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room2, robot1 moves to room1, from room3, robot1 moves to room4, in room5, robot1's rgripper1 drops ball3, lgripper1 of robot1 drops ball1 in room4, lgripper1 of robot1 picks up ball2 in room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room1 to room3, robot1 moves from room5 to room4, robot1 moves to room1 from room4, robot1 moves to room2 from room4, robot1 moves to room2 from room5 and robot1 moves to room5 from room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2b87aadf-aa43-402a-9649-7f0a1ad48d60", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5. Is the action: rgripper1 of robot1 picks up ball4 in room2 executable at step 7, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8a3ea471-f347-46f5-b4e0-40e48e68673a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball6 is picked from room2 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1. Is the action: ball6 is picked from room2 with rgripper1 by robot1 executable at step 9, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "75894e01-94e2-41fc-9085-3a18560f500c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2531f7b8-d288-47f5-95ec-5fa4f0df632f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, from room3, robot1's lgripper1 picks up ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "lgripper1 of robot1 picks up ball3 in room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "15d1551b-360e-4d94-bb2e-71101fcce08c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball2 is dropped in room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball5 is dropped in room2 with rgripper1 by robot1, robot1 moves from room2 to room3, from room2, robot1 moves to room1 and from room2, robot1 moves to room5", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "344e02d8-43b8-4839-ade8-54adad17f868", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room4, robot1's lgripper1 drops ball3, in room5, robot1's lgripper1 drops ball2, ball5 is dropped in room4 with lgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, in room5, robot1's lgripper1 drops ball4, from room3, robot1's lgripper1 picks up ball4, rgripper1 of robot1 drops ball7 in room2, lgripper1 of robot1 picks up ball6 in room3, ball2 is picked from room3 with rgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room3, from room5, robot1's lgripper1 picks up ball3, from room2, robot1's lgripper1 picks up ball2, lgripper1 of robot1 drops ball6 in room4, from room1, robot1's lgripper1 picks up ball5, in room1, robot1's lgripper1 drops ball5, in room4, robot1's rgripper1 drops ball5, ball7 is picked from room5 with rgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room2, in room3, robot1's rgripper1 drops ball6, from room2, robot1's rgripper1 picks up ball6, lgripper1 of robot1 picks up ball6 in room4, from room4, robot1's lgripper1 picks up ball5, rgripper1 of robot1 picks up ball3 in room3, in room2, robot1's lgripper1 drops ball4, ball1 is dropped in room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room2, from room1, robot1 moves to room4, in room5, robot1's rgripper1 drops ball2, from room3, robot1 moves to room4, robot1 moves from room4 to room5, lgripper1 of robot1 drops ball1 in room2, robot1 moves from room5 to room1, ball5 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room4, rgripper1 of robot1 picks up ball7 in room2, ball1 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, from room3, robot1's rgripper1 picks up ball6, robot1 moves from room3 to room1, lgripper1 of robot1 picks up ball5 in room3, rgripper1 of robot1 picks up ball4 in room1, from room5, robot1 moves to room3, from room2, robot1's rgripper1 picks up ball3, lgripper1 of robot1 drops ball4 in room4, ball4 is dropped in room1 with lgripper1 by robot1, from room4, robot1's rgripper1 picks up ball3, from room4, robot1's rgripper1 picks up ball5, ball7 is dropped in room5 with lgripper1 by robot1, rgripper1 of robot1 drops ball4 in room4, in room1, robot1's lgripper1 drops ball3, robot1 moves from room1 to room2, in room3, robot1's rgripper1 drops ball4, rgripper1 of robot1 drops ball7 in room1, lgripper1 of robot1 drops ball3 in room5, ball2 is picked from room5 with lgripper1 by robot1, from room5, robot1's rgripper1 picks up ball6, from room4, robot1's lgripper1 picks up ball3, rgripper1 of robot1 drops ball6 in room1, ball1 is picked from room5 with lgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room5, from room4, robot1 moves to room3, ball4 is dropped in room5 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball4 in room1, from room3, robot1's lgripper1 picks up ball1, lgripper1 of robot1 picks up ball4 in room4, rgripper1 of robot1 picks up ball3 in room1, lgripper1 of robot1 picks up ball1 in room2, from room1, robot1's lgripper1 picks up ball2, robot1 moves from room1 to room5, ball6 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, from room4, robot1's rgripper1 picks up ball6, ball4 is picked from room4 with rgripper1 by robot1, lgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 drops ball4 in room2, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball7 in room4, rgripper1 of robot1 picks up ball7 in room1, rgripper1 of robot1 picks up ball7 in room4, rgripper1 of robot1 drops ball2 in room3, in room5, robot1's lgripper1 drops ball5, ball1 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 drops ball6 in room5, ball5 is dropped in room3 with rgripper1 by robot1, lgripper1 of robot1 picks up ball1 in room4, ball3 is dropped in room2 with lgripper1 by robot1, from room3, robot1 moves to room5, lgripper1 of robot1 picks up ball6 in room2, ball3 is dropped in room3 with lgripper1 by robot1, ball3 is dropped in room5 with rgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball4 in room5, ball3 is dropped in room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room3, ball7 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room5, rgripper1 of robot1 drops ball2 in room1, from room5, robot1's lgripper1 picks up ball6, rgripper1 of robot1 picks up ball2 in room1, ball2 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 drops ball1 in room3, in room5, robot1's rgripper1 drops ball1, lgripper1 of robot1 picks up ball7 in room2, from room4, robot1's lgripper1 picks up ball2, from room1, robot1's rgripper1 picks up ball6, ball3 is picked from room5 with rgripper1 by robot1, ball5 is dropped in room5 with rgripper1 by robot1, from room2, robot1's rgripper1 picks up ball4, rgripper1 of robot1 drops ball3 in room4, lgripper1 of robot1 drops ball7 in room2, in room3, robot1's lgripper1 drops ball2, from room3, robot1's rgripper1 picks up ball1, from room1, robot1's lgripper1 picks up ball4, from room5, robot1's rgripper1 picks up ball5, lgripper1 of robot1 picks up ball1 in room1, lgripper1 of robot1 drops ball6 in room1, from room2, robot1's lgripper1 picks up ball5, in room4, robot1's rgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room5, ball4 is picked from room3 with rgripper1 by robot1, from room5, robot1's lgripper1 picks up ball5, rgripper1 of robot1 drops ball2 in room4, in room4, robot1's lgripper1 drops ball2, in room4, robot1's lgripper1 drops ball1, ball3 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room3, in room3, robot1's lgripper1 drops ball5, rgripper1 of robot1 drops ball5 in room1, ball1 is dropped in room5 with lgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room1, rgripper1 of robot1 picks up ball5 in room1, lgripper1 of robot1 picks up ball4 in room2, from room5, robot1's rgripper1 picks up ball4, in room5, robot1's rgripper1 drops ball6, robot1 moves to room2 from room4, ball5 is picked from room3 with rgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, from room5, robot1's rgripper1 picks up ball1, lgripper1 of robot1 picks up ball3 in room2, ball7 is dropped in room4 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, from room4, robot1 moves to room1, ball6 is dropped in room4 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball1, from room5, robot1 moves to room4, in room1, robot1's lgripper1 drops ball2, lgripper1 of robot1 drops ball6 in room3 and in room1, robot1's rgripper1 drops ball3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room1, ball2 is present at room2, ball3 is present at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d185c88d-a2ed-4eb9-be90-ecd85e43da74", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if from room1, robot1's lgripper1 picks up ball1, is it True or False that ball1 is being carried by robot1's lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e7a46106-3451-4818-810a-9592821704d4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is not carrying ball1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a94c5b2a-bf80-4f14-816e-1b86e7b0a4c7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if lgripper1 of robot1 picks up ball1 in room1, is it True or False that ball1 is being carried by robot1's lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bed2ab22-7ca5-4da6-af51-d17ada4d78e1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that ball5 is not being carried by robot1's rgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f9a8a7f3-f587-4ced-9505-3cb63efa8579", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "63801580-edf2-4640-8798-950614558fc6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if from room1, robot1's lgripper1 picks up ball1, is it True or False that robot1's lgripper1 is available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4add67e3-100b-4688-a3a9-d9e5414fe3cd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, if from room1, robot1's lgripper1 picks up ball1, is it True or False that robot1's lgripper1 is not available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "054296eb-83ea-4c72-b5d1-c4a990699ac6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if from room1, robot1's lgripper1 picks up ball1, is it True or False that robot1's rgripper1 is available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fdc33d5b-0f8e-469b-98c0-cbcfc41f6e20", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that ball1 is not present at room1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "071c6ac8-6b9e-49ce-836e-a75bf2dc5a7b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that ball1 is present at room1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4f0c53bd-fae3-4f96-b9ef-693fe8b56bfe", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if lgripper1 of robot1 picks up ball1 in room1, is it True or False that ball1 is not present at room1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "93bb8afe-a70a-4de6-aeef-b334649a1c76", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that ball5 is not present at room1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "44252c98-b629-419d-94ec-a600a12a4b3b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a7622919-6c19-4a2d-979a-7ce4ebfcde60", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, if from room1, robot1's lgripper1 picks up ball1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "62e6dafb-f6bf-4bc3-ae3f-2a2c94189f40", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball2 is present at room2, ball3 is at room1, ball4 is located at room2, ball5 is at room2, ball6 is at room1, ball7 is located at room3, robot1 is at room1, robot1 is carrying ball1 with lgripper1 and robot1's rgripper1 is available", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "33561d04-1c49-4b3a-8fcf-b9674c14cca4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if ball1 is picked from room1 with lgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room5, ball1 is not located at room2, ball1 is not present at room1, ball1 is not present at room3, ball1 is not present at room4, ball2 is not located at room4, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room3, ball3 is not at room4, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room2, ball3 is not located at room3, ball3 is not located at room5, ball4 is not at room4, ball4 is not at room5, ball4 is not being carried by robot1's rgripper1, ball4 is not present at room1, ball4 is not present at room3, ball5 is not at room1, ball5 is not at room3, ball5 is not located at room4, ball5 is not present at room5, ball6 is not at room3, ball6 is not located at room4, ball6 is not present at room2, ball6 is not present at room5, ball7 is not at room2, ball7 is not at room4, ball7 is not present at room1, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball7, robot1 is not at room3, robot1 is not at room4, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not located at room5, robot1 is not present in room2 and robot1's lgripper1 is not available", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "caa5bbf5-0163-478e-b9c4-ebc44587ecd5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, if lgripper1 of robot1 picks up ball1 in room1, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room2, ball1 is not located at room3, ball1 is not located at room4, ball1 is not located at room5, ball2 is at room2, ball2 is not at room1, ball2 is not located at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is at room1, ball3 is not at room2, ball3 is not at room3, ball3 is not located at room4, ball3 is not located at room5, ball4 is located at room2, ball4 is not at room1, ball4 is not located at room3, ball4 is not located at room4, ball4 is not located at room5, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room1, ball5 is not located at room5, ball5 is not present at room3, ball5 is not present at room4, ball5 is present at room2, ball6 is not at room2, ball6 is not located at room4, ball6 is not present at room3, ball6 is not present at room5, ball6 is present at room1, ball7 is located at room3, ball7 is not located at room5, ball7 is not present at room1, ball7 is not present at room2, ball7 is not present at room4, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not free, rgripper1 of robot1 is free, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, robot1 is not at room5, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room4, robot1 is not present in room2, robot1 is not present in room3 and robot1 is present in room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "20c9f1ca-a9b2-4721-bb75-4528dafed24e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if robot1 moves to room2 from room5, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0a6bff1f-d96f-4a62-8237-dbe336bad12b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if robot1 moves from room5 to room2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4ecbaffd-9315-402e-8d95-07ddc9ec4386", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "17f7f039-95fb-415f-b870-89d0dd39d568", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if robot1 moves to room2 from room5, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7c720260-f129-4578-a42a-182890a4c440", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ff1b90f2-cc7f-4fb8-a61d-93345163bd6e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, if robot1 moves to room2 from room5, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5fc97397-140b-4eb9-8c96-f2966ef28a17", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bb82ea90-b3ee-4998-aaed-fafb9828409d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room5 to room2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7ab4c5e1-67f1-478d-a71d-6acfd7872dc7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that robot1 is located at room2 and robot1 is not at room5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b3e62b40-02a0-4dea-b48b-6df7502179c6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, if robot1 moves to room2 from room5, is it True or False that robot1 is at room5 and robot1 is located at room2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2b95e9e8-1c6e-4a15-84e9-2db4f6cc6568", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that robot1 is located at room2 and robot1 is not located at room5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "16bb4911-ad3e-4d11-8a0b-94d1307059b6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that ball3 is present at room2 and robot1 is not present in room4?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a247d04a-1e84-4ee5-b85f-6dfecc6cc0c2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if robot1 moves to room2 from room5, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "00023ba0-df8e-4018-b3a8-652335caf738", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, if from room5, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3d9936fb-9dfa-4bcd-bf8b-d25393096d7c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, if robot1 moves from room5 to room2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball2 is present at room2, ball3 is present at room5, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room3, lgripper1 of robot1 is carrying ball1, robot1 is present in room2 and robot1's rgripper1 is available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "68d03147-facb-4370-aa57-ef74f0ff7617", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room2 from room5, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not at room3, ball1 is not at room4, ball1 is not present at room1, ball1 is not present at room5, ball2 is not at room1, ball2 is not at room3, ball2 is not at room5, ball2 is not being carried by robot1's rgripper1, ball2 is not present at room4, ball3 is not at room1, ball3 is not at room3, ball3 is not at room4, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room2, ball4 is not at room3, ball4 is not located at room1, ball4 is not located at room4, ball4 is not located at room5, ball5 is not at room1, ball5 is not at room4, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room3, ball5 is not located at room5, ball6 is not at room2, ball6 is not at room3, ball6 is not located at room4, ball6 is not present at room5, ball7 is not at room1, ball7 is not at room4, ball7 is not located at room2, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, robot1 is not at room5, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room1, robot1 is not located at room3, robot1 is not located at room4 and robot1's lgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3d4547a1-8e24-46bb-981d-2e68b4264cb3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room5 to room2, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room4, ball1 is not located at room2, ball1 is not located at room3, ball1 is not present at room5, ball2 is located at room2, ball2 is not located at room3, ball2 is not present at room1, ball2 is not present at room4, ball2 is not present at room5, ball3 is at room5, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room4, ball4 is not at room1, ball4 is not at room3, ball4 is not at room4, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room5, ball4 is present at room2, ball5 is at room2, ball5 is not at room4, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room3, ball5 is not located at room5, ball5 is not present at room1, ball6 is not at room4, ball6 is not at room5, ball6 is not located at room2, ball6 is not present at room3, ball6 is present at room1, ball7 is located at room3, ball7 is not at room1, ball7 is not at room5, ball7 is not located at room4, ball7 is not present at room2, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball1 with lgripper1, robot1 is not at room1, robot1 is not at room4, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not located at room5, robot1 is not present in room3, robot1 is present in room2 and robot1's rgripper1 is available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "db8246cb-0899-4533-8999-310fd2fdae4e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room3 from room1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5a90c356-f88e-4cad-9761-e66e45eeb0c5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if from room1, robot1 moves to room3, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1c9f400d-94cf-4e45-b2a2-22545e2d95cc", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d11bd408-89a2-49f9-8790-9b217db08bd0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "771f4145-dafd-4f77-9613-3a8c8eb02665", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room3 from room1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8a297e17-7f14-4a09-a01b-c7c92e073f84", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if robot1 moves to room3 from room1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9c3feef5-689c-4ed6-b0a5-286b665aab55", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f05341e0-a2a9-4a8b-85eb-d43657a21ec8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bc8cb9f8-e93c-4336-86c9-9ddb54d71160", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, if robot1 moves to room3 from room1, is it True or False that robot1 is not located at room1 and robot1 is present in room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "77e657a7-3149-4b6d-a30e-618c9601d8ff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is at room1 and robot1 is present in room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3886ba6c-fb7a-43f2-bd8a-fc0127e7904f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is at room3 and robot1 is not located at room1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f15edbb3-e41a-40d8-96db-d1d310fe3e9b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if from room1, robot1 moves to room3, is it True or False that ball2 is not at room4 and ball4 is at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "dcc5b2b8-d290-44b1-97e2-cd06efbf2a80", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room3 from room1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c7fdc26f-97f0-45dc-8881-c104c24bf4e4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if from room1, robot1 moves to room3, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b65d7b2e-cb26-42a0-89b9-1bb51922e1d5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, if robot1 moves from room1 to room3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball2 is located at room2, ball3 is present at room5, ball4 is present at room1, ball5 is at room2, ball7 is located at room3, lgripper1 of robot1 is carrying ball1, robot1 is carrying ball6 with rgripper1 and robot1 is located at room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1d11d9a5-bde2-4c67-a5e5-b39b817e13da", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not at room3, ball1 is not at room5, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room1, ball1 is not located at room4, ball2 is not located at room1, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is not at room1, ball3 is not present at room2, ball3 is not present at room3, ball3 is not present at room4, ball4 is not at room5, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball4 is not located at room4, ball4 is not present at room3, ball5 is not at room4, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room3, ball5 is not located at room5, ball5 is not present at room1, ball6 is not at room1, ball6 is not at room2, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room4, ball6 is not located at room5, ball6 is not present at room3, ball7 is not at room4, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room1, ball7 is not present at room2, ball7 is not present at room5, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, robot1 is not at room1, robot1 is not at room4, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not present in room2, robot1 is not present in room5, robot1's lgripper1 is not available and robot1's rgripper1 is not free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b4c00ff5-e7ac-4196-a1aa-d60dc56fc067", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, if robot1 moves from room1 to room3, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is not at room4, ball1 is not located at room2, ball1 is not located at room5, ball1 is not present at room1, ball1 is not present at room3, ball2 is not located at room1, ball2 is not located at room3, ball2 is not located at room4, ball2 is not present at room5, ball2 is present at room2, ball3 is not located at room1, ball3 is not located at room3, ball3 is not located at room4, ball3 is not present at room2, ball3 is present at room5, ball4 is at room1, ball4 is not at room2, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room3, ball4 is not present at room4, ball4 is not present at room5, ball5 is located at room2, ball5 is not at room1, ball5 is not located at room5, ball5 is not present at room3, ball5 is not present at room4, ball6 is being carried by robot1's rgripper1, ball6 is not at room1, ball6 is not located at room3, ball6 is not located at room4, ball6 is not present at room2, ball6 is not present at room5, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room4, ball7 is not located at room5, ball7 is not present at room1, ball7 is not present at room2, ball7 is present at room3, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, robot1 is at room3, robot1 is not at room1, robot1 is not at room4, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not located at room2, robot1 is not located at room5, robot1's lgripper1 is not free and robot1's rgripper1 is not free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fcbc9d59-7261-49f9-a5ee-387231540c74", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, if ball7 is dropped in room4 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1cd13cfd-375a-441c-9e81-7fa575316fd5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if in room4, robot1's rgripper1 drops ball7, is it True or False that rgripper1 of robot1 is carrying ball7?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "75c07cfb-1c5c-4f34-a706-47b057c87996", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if in room4, robot1's rgripper1 drops ball7, is it True or False that ball7 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "47d12259-e4c7-4a32-97d5-038ee96cb9aa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, if in room4, robot1's rgripper1 drops ball7, is it True or False that ball3 is not being carried by robot1's rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "61fb31de-7cee-4826-8b79-74b882f3611f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, if ball7 is dropped in room4 with rgripper1 by robot1, is it True or False that robot1's rgripper1 is free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e7b8cd26-87c2-426f-94d6-88e5ae74efb7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, is it True or False that rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8b19077a-444a-4d4b-8ef6-b9b9edd4c2e1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, is it True or False that robot1's rgripper1 is free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "02d328d4-2163-4254-9134-3ae712db627b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, is it True or False that rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "845be3af-f1ba-4a21-88bb-36481a916a74", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, if in room4, robot1's rgripper1 drops ball7, is it True or False that ball7 is at room4?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "158b729a-7fbf-4c19-bffe-df1104784d6e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, is it True or False that ball7 is not located at room4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ce9b898e-f6fd-4d94-8328-62ba00bd84e0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, if ball7 is dropped in room4 with rgripper1 by robot1, is it True or False that ball7 is at room4?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "824b7ffc-9ef1-4cf7-857e-c47d701c7025", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, is it True or False that ball2 is located at room4?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3c563e9b-5536-4fbc-ba89-6ebc3973e05d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e5532a30-f20d-41df-965f-72512c6f5978", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if ball7 is dropped in room4 with rgripper1 by robot1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "862d21b0-cc2c-474b-96eb-3844c42a028c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is present at room4, ball2 is located at room2, ball3 is at room5, ball4 is at room1, ball5 is present at room2, ball6 is at room3, ball7 is located at room4, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9d2aeadb-9f70-4f27-862a-539185c1c046", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not at room5, ball1 is not being carried by robot1's lgripper1, ball1 is not located at room3, ball1 is not present at room1, ball2 is not at room1, ball2 is not located at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room2, ball3 is not located at room4, ball3 is not present at room1, ball3 is not present at room3, ball4 is not at room3, ball4 is not at room4, ball4 is not being carried by robot1's lgripper1, ball4 is not present at room2, ball4 is not present at room5, ball5 is not at room1, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room4, ball5 is not present at room3, ball5 is not present at room5, ball6 is not at room5, ball6 is not located at room1, ball6 is not located at room2, ball6 is not present at room4, ball7 is not at room1, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room2, ball7 is not present at room3, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not at room1, robot1 is not at room5, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not located at room2 and robot1 is not located at room3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e8592d95-3aa3-49f8-8ce4-3aeb8ab25ff7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room4, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is at room4, ball1 is not located at room1, ball1 is not located at room2, ball1 is not located at room3, ball1 is not present at room5, ball2 is located at room2, ball2 is not at room4, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room5, ball2 is not present at room1, ball2 is not present at room3, ball3 is located at room5, ball3 is not at room1, ball3 is not at room2, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball3 is not present at room4, ball4 is at room1, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room3, ball4 is not located at room5, ball4 is not present at room2, ball4 is not present at room4, ball5 is located at room2, ball5 is not at room3, ball5 is not located at room1, ball5 is not present at room4, ball5 is not present at room5, ball6 is at room3, ball6 is not at room2, ball6 is not at room4, ball6 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball6 is not located at room1, ball6 is not present at room5, ball7 is located at room4, ball7 is not located at room1, ball7 is not located at room2, ball7 is not present at room3, ball7 is not present at room5, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball3, robot1 is located at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room1, robot1 is not present in room2, robot1 is not present in room3, robot1 is not present in room5, robot1's lgripper1 is free and robot1's rgripper1 is available", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0d40a9e3-5149-453c-99c0-f6fcd04c4805", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if robot1 moves from room2 to room5, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0f689774-d56b-4591-a367-c7bf79262c8b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room5 from room2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c99abcd8-abd1-48b9-8bb8-1172b0611062", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if from room2, robot1 moves to room5, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3bfab202-be82-4d32-b507-164dd40f163d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if robot1 moves from room2 to room5, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8b529b89-8a68-4809-91cf-4353e13133a0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if robot1 moves to room5 from room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "57a5ca6d-e402-4946-9edc-501807742294", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if from room2, robot1 moves to room5, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "47b1c27c-b507-4a2f-9e75-bfa2669bc70e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room5 from room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0764142d-11ef-41f6-9444-7adfbc62916d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if robot1 moves from room2 to room5, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "22117688-c045-4e2a-95e1-8192551caa05", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if robot1 moves from room2 to room5, is it True or False that robot1 is located at room5 and robot1 is not present in room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f1b9262e-1ff8-441f-a6ea-dfd0ba2fc88e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if robot1 moves from room2 to room5, is it True or False that robot1 is not at room2 and robot1 is not located at room5?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "759ce1a2-2968-4bf0-924b-874ca0adaab9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if from room2, robot1 moves to room5, is it True or False that robot1 is at room5 and robot1 is not located at room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "01d27086-176c-4b8d-9a14-94f0e6d08f28", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if from room2, robot1 moves to room5, is it True or False that ball1 is located at room5 and ball2 is not present at room1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8e9f487e-414a-45f5-92cd-0d1643805e2b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if from room2, robot1 moves to room5, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "72f5b890-f8e5-46e5-a6bc-038d0a859fcc", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if robot1 moves from room2 to room5, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d6bf5cad-b0c9-483d-b5c4-643bd8d146f2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, if robot1 moves to room5 from room2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is located at room4, ball2 is being carried by robot1's lgripper1, ball3 is at room5, ball4 is present at room1, ball6 is present at room3, ball7 is located at room4, rgripper1 of robot1 is carrying ball5 and robot1 is present in room5", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c9ccf346-55d2-4064-b4ce-e75d26aa27f0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if robot1 moves from room2 to room5, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room3, ball1 is not located at room2, ball1 is not located at room5, ball2 is not at room1, ball2 is not at room3, ball2 is not at room5, ball2 is not present at room2, ball2 is not present at room4, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball3 is not located at room4, ball3 is not present at room1, ball3 is not present at room2, ball4 is not at room2, ball4 is not at room3, ball4 is not being carried by robot1's rgripper1, ball4 is not present at room4, ball4 is not present at room5, ball5 is not at room1, ball5 is not at room4, ball5 is not located at room3, ball5 is not located at room5, ball5 is not present at room2, ball6 is not at room4, ball6 is not at room5, ball6 is not located at room1, ball6 is not located at room2, ball7 is not at room5, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room3, ball7 is not present at room1, ball7 is not present at room2, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not at room2, robot1 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not located at room3, robot1 is not present in room1, robot1's lgripper1 is not free and robot1's rgripper1 is not available", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f0a04104-c9de-4c2f-9bff-9e82d9990f4f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, if robot1 moves to room5 from room2, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is located at room4, ball1 is not at room3, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room2, ball1 is not located at room5, ball1 is not present at room1, ball2 is not at room1, ball2 is not present at room2, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is located at room5, ball3 is not at room4, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room1, ball3 is not located at room3, ball3 is not present at room2, ball4 is not at room4, ball4 is not at room5, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball4 is not present at room3, ball4 is present at room1, ball5 is not at room5, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room1, ball5 is not located at room4, ball5 is not present at room2, ball5 is not present at room3, ball6 is at room3, ball6 is not at room1, ball6 is not located at room5, ball6 is not present at room2, ball6 is not present at room4, ball7 is at room4, ball7 is not at room1, ball7 is not at room2, ball7 is not at room5, ball7 is not located at room3, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1, robot1 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not located at room2, robot1 is not located at room3, robot1 is not present in room1, robot1 is present in room5 and robot1's rgripper1 is not free", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is located at room2, ball3 is located at room1, ball4 is present at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room3, robot1 is at room4, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7d062391-65b1-453c-9750-7f56b8db050c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d0e4ce2c-a67e-46fb-8ca4-096de111e8ab", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f02c4d88-0eb5-4a25-9dc5-a7107c485184", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "355e20a5-1f0f-41d1-9b70-44d31c9a5082", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of executable actions equal to 9? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8e439436-5f3b-4d43-9a1b-b7989879e13c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is the number of inexecutable actions equal to 150? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "01f003ac-17c7-4b71-8c22-f3bf995481c9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is the number of inexecutable actions equal to 140? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0ca9909e-c20d-4f4b-8144-d51548cfec2e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of valid properties of the state equal to 10? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "81db8574-2869-4f3d-a8fa-1adb13579ae8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of valid properties of the state equal to 9? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0bf47880-8519-42e7-92ac-07d00e1efd75", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 46? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9b670b34-0ad9-42be-bf37-b98f8759929c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 53? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "47608f77-b123-480d-a041-118e38fe430e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "290f2b7a-0cbf-4d91-a876-5f966a0fb8be", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "16ef299a-bc7e-425f-8103-83527961c5f3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8eb9a567-2249-4b49-8014-e16d5edb6b0e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "87bded35-ea99-4697-a5cd-46ff50b119ea", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8b4b171c-c49f-4e75-97b5-daa5f96e6bca", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b8178769-bca8-4094-a598-57636aaab951", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8a737924-0f9c-471f-bb29-cbf3122e8bd2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fad99e05-c988-4e10-87f4-0d91be09bcf7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3b333997-42ce-45c4-b729-13e7bd03be62", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "10", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d208532d-417f-4348-b5af-fb998dd08f8c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "150", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3480dec3-d66a-4640-be41-83558d4c79b6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "10", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b1a7e775-ac81-4788-8b73-8d21ed502221", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "46", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fccb5b53-9c1e-48cb-a9ea-235c2e4df327", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9faee18a-6f2f-49ac-b389-3047e2500e20", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c84309d0-a468-48cc-8733-37657fb100d2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2b1c2681-b6ea-4481-b0e7-84c16370bb87", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5658ace9-520e-45a8-bf44-b2d06576e2f1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2e2c29f4-52c1-4dce-8b45-032352aa165b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9cd253a8-db2a-426f-8f57-151723d62dfd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball5 is dropped in room2 with rgripper1 by robot1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5afa8530-0ebc-4d3e-b472-545144accc2f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "efe683f0-292c-4dc8-906e-a6c98e3411b3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f3f6593c-f3af-4fab-bd6e-fc198330956a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "54b35f49-5592-4e27-9dfb-1ccc820637c4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0de61bb7-9f2d-487b-b294-5b03c7302425", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of inexecutable actions equal to 154? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "68f90a70-d437-4fbb-bac9-b32c6f1a88de", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of inexecutable actions equal to 142? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "38a0b056-339e-4afb-a5f9-37874488e4c6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 9? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a68c2119-3a1e-4a52-89b5-0c7f1617a744", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of valid properties of the state equal to 11? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5c9d5ae3-a3f7-4712-a8f2-22a7ca7ca69b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 47? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3d625df2-249a-4031-beb9-f1faa2d46bbd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 52? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0e221dc5-7964-4611-b565-7d1979526870", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6d7bbbf7-04be-41c9-89d7-5428e9582390", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1a3ce8a5-a0e8-46b3-a39f-e729db8c64f1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "49d0c4e7-37cf-41d8-b7e6-07968935f06d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "91f97e13-7d0f-40cd-96a4-3953092f5a76", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "93d18a72-8a3e-476a-ba32-e5a58e474e7e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a52a5dcb-b90e-4e25-8b65-c06afd24c707", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "865b5902-d703-4209-95fd-cc348f0da3c1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4d738c88-5ebb-457b-9038-e651394d05bf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e9a290f3-6559-4c47-9caf-8643c2cc81a0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "535e72e5-a27c-4b20-9a73-6f06c43690c1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "154", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "29307789-ad74-4e01-859a-d634f7873dec", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "9", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7919e2fb-fac8-4487-880c-cca689fc4a90", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "47", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "25b54477-1eb8-4650-9f95-3a132c81b5fd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6276ecb5-0067-4b78-9867-a3c4fd05f39a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cdca337a-9d93-4a8f-aa7d-5a0f187ca9b3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "db5b11aa-2228-49ba-b083-0564ebde694d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0ad7871b-6f1c-4218-b81e-53acf32d15c4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bf6c1245-12f3-4f09-aa7c-37b656a39387", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "18abc21e-fb88-4a4e-8919-22d19df7bf8c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball6 in room4, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "15bf7b8e-cac3-4ee7-a25d-8bd398fb45c0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5fd1c3fe-de36-49ee-b179-56ae25f4f3af", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "80ca7ad7-9e17-49c6-a997-7df819b95939", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3b7c8b5c-e653-4770-9d1c-0ec1573834f7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b976c883-32e8-43f0-90e2-29a514a8d330", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 154? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4dd1cf55-cd16-4811-ba6c-521923e4010a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of inexecutable actions equal to 164? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9513b93c-93c3-4a1b-a620-ad66b77b9984", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of valid properties of the state equal to 8? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1eb2e287-9698-41ee-a04d-d29b645c774c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 10? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "949b3806-cb7a-4388-b979-d3088fe24a3c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 48? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e2d062cc-c3ab-42cd-bf20-da70819e2130", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 39? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c0b9edc8-6b09-4e17-8919-5a825d7e02d6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e3b532de-40c5-4234-a730-c5368a3d64cf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6f396093-8ee4-426c-bb27-5936ef085cf4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "719d436d-c8bb-464d-bf9b-4b0e68bcb9db", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "da114dcd-850e-4554-afb8-e2cad459cb70", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2efd87c7-dacf-4fc0-abff-4d50ecc12163", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8dd4f985-b81d-42f2-a9f9-c74cf5edc1cf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "004bc832-0679-4150-a148-4cebf95ad28d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "600b9160-60f7-40a4-89ee-e34090fe76c8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bb40e953-adb7-4bda-a563-7887c6806d8a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "12a2c585-8f77-411c-8ea2-b1e0efbefa47", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "154", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5c21af19-53a9-4975-8df2-46984891e0c4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "8", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "05b01497-5b28-4f9c-bfeb-053c47b0e268", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "48", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b0c55003-ab4e-4a57-8ab0-5685ab196b2e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5bb6eeb4-31db-408a-9fdc-ab5c4600daf4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2944a6f7-7df1-4ae8-80a5-c2a5818f467e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d2468f88-8617-4b54-a831-08b679e940c0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "93fdd6a4-7946-49e3-b087-f11667e84f43", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6e72bba6-8993-461d-9e46-50582e007098", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ba218d07-c6e1-4702-9db5-1bd08428ba84", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball7 is picked from room4 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "4", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "289af991-0ee2-489a-86a8-8a870fc4bd2e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "90663913-e32e-49ec-8ebe-414f1659a234", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cec05bf6-bbe9-4479-94a3-fc709382ba7b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4be0606f-aadc-4f88-9411-6523e8c4ab4a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d27ff2f8-7843-4266-89fc-6841b2319749", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of inexecutable actions equal to 154? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "83b46a97-8497-49c4-ab44-30f40a18e27f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of inexecutable actions equal to 160? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "95e2d523-5a49-4850-a0b9-9798274f71a8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of valid properties of the state equal to 9? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a4a0ef9b-b7f6-4b01-8b03-f2937846b057", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is the number of valid properties of the state equal to 8? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b67312d7-1937-4c9d-8615-6b4473d42f69", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 47? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "beda91a8-ad45-43b9-b4ad-4d747491caab", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 51? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "35cadf31-0c25-4902-a88e-d8a964322730", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "64c2f196-c87e-4e86-93b1-1ed9f060b037", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "01e772f5-0711-4041-af93-6256f62906ab", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "efe7f9d3-0c74-4231-9c7b-ab52b1e605de", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "70cf18c4-4403-4eee-b571-22b12e78d026", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b0888b18-2ad7-4d44-ae90-3799e1c8ce81", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "631027f0-de18-444c-bd0c-811b08c5a0e7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cf4a969f-c39b-482e-8815-b4e3c7c4c396", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d4812cdd-016a-4021-9e7d-ce75582df616", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "76d880b5-025f-4d25-8664-8c0dc349ef11", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ff0b4fa3-f25c-451f-836b-f717d336eaa7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "154", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "54cdf77c-08f8-432f-957c-0914b546a6bc", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "9", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c868c3d9-8f53-4c16-ae07-41c70665c8cd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "47", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a3c28918-3a04-41ff-a27f-759d05b68148", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a01254a9-ff9b-4373-a09b-1cb78755d93d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "53962c0d-60b9-42fa-ab8a-66dbf1cab094", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "af25b259-39b3-4a1d-bb88-9016aa72ca7b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7ea6fe15-169f-4fcc-8797-bc7677c6009c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6cb12172-6d1b-4812-8c06-d29d49da164e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2458cb80-95e2-4cfb-9c5e-018ac27c6733", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, in room2, robot1's rgripper1 drops ball2, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "9", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7d4534a8-e988-4e01-bbd3-1a052393ccda", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6cf0aa94-6a38-4007-930a-2d0686abdc81", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f7501523-3a34-47b1-9a7c-358401fda227", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "28964221-9fbc-4317-bd60-0e58143bba29", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cd609da8-c0e7-49b7-9abb-d34006eef06f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of inexecutable actions equal to 154? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "af30b9d5-63cc-4539-86eb-70d64554777a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 174? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "dbe08160-c34b-43c3-a835-1c66e15f3778", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of valid properties of the state equal to 8? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b3165f45-db71-4102-841e-3c1bd603722f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 10? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "de0ce5d9-434a-4146-9146-41e62317d3e6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 48? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2159f19e-1792-48b0-add9-0e8dbde69d37", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 52? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ad5d2503-6845-45fe-8dac-b8250325933d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "518e329e-1c41-4209-85b7-7df53ae20382", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "306159c3-6175-4240-bcf5-2257f493295f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "171839e9-200d-4f34-8522-153807cd8ee7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cc9267af-7077-4a51-bba2-b09d7ede0216", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b60b6afb-3ae3-4543-a58c-90f27f70f711", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3559ef14-d6ce-41d3-8b8e-a1356f34707a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c5a3343e-e1a0-43b5-a0da-10520fd0deaa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ab44bc71-7d9e-41dc-bcbe-08980a89e9c9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "15", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c769efe6-b81b-47bb-a1bb-fce65a144e71", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a079b0ee-fe99-4f4f-98e7-3a754b5651a6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "154", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c5c27746-9114-4d2d-aae2-1c8b07fe92e6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "8", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1beb9022-94a6-457b-ad63-60656aef09b4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "48", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3d8052d2-056c-46bf-8e32-99650b3b2959", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "57621ba5-d18e-496c-b47f-3335775f05af", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9ecb8bee-ed21-4bad-b4bb-7df9018f6e96", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1b5a26c7-dea1-495f-955e-50d6a1e1e8b0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "dec93b96-0cfb-4325-8541-b05d25f99426", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e86ec2a3-0c60-4502-b5f3-00d2e266fb43", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, ball1 is dropped in room4 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 22?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "33089a18-8e25-4941-95ed-9c11467b2a5a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball5 is dropped in room1 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "4", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is present at room2, ball3 is located at room1, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is located at room3, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room4.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4eb6ccc4-7bb0-4b90-93a6-2689bf27b7f8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some objects may or may not be defined. Is room1 part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8621f194-2b05-41c2-bfcb-9877d70b28d3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some objects may or may not be defined. Is room6 part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a75b282d-fcd3-404e-ab28-3e6c0802f1cd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball2 is not being carried by robot1's rgripper1 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8c139f81-fe10-4602-ac11-4184bfc7779d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's lgripper1 is free part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "74ead860-6bc0-4019-9101-89207c87911d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball1 is present at room1 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e6a3950c-9fbc-4063-bbf8-f1beee0657d6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is not using rgripper1 to load ball3 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3020ec89-5095-48c9-89b9-be8527eeecaa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's lgripper1 is broken part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4252b40e-64f1-4bf5-8497-f7454be2ac22", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball7 is transported to room3 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7ccaecb2-9bee-437a-82bc-b887dad3425b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1 to reach the current state. In this state, is action, lgripper1 of robot1 picks up ball1 in room1, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fe24b7b6-66eb-4413-a670-8d1462ed973c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1 to reach the current state. In this state, is action, room1 and room5 are checked by robot1, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "390f880f-ed55-4369-b638-079e34deae38", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1 to reach the current state. In this state, is action, in room4, robot1's rgripper1 drops ball1, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "452ca175-cdad-47ff-a941-8e22c97914d1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4 to reach the current state. In this state, is action, in room1, ball7 is inspected using robot1's rgripper1, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1e3cbbe3-4677-4d71-a1a6-3782f3c10134", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball3, ball4, ball5, ball6, ball7, lgripper1, rgripper1, room2, room4 and room5, is not part of the domain? Write None if all are defined.", "answer": "ball6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "90b1eeee-54b3-4d26-847a-7bf74516f711", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball3, ball4, ball8, rgripper1, robot1 and room5, is not part of the domain? Write None if all are defined.", "answer": "ball8", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "702930b4-aed5-4c0a-9ecb-d1ef6a8146ea", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1's lgripper1 is available and robot1's rgripper1 is free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7ceb165e-0e8a-4a4d-beb4-28709dd483c0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is located at room1, ball2 is located at room2, ball3 is located at room1, ball4 is located at room2, ball5 is at room2, ball6 is located at room1, ball7 is located at room3 and robot1 is located at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bd8faaf4-2528-47aa-be03-c587271caaae", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1's lgripper1 is free and robot1's rgripper1 is free, is not defined? Write None if all are defined.", "answer": "robot1's rgripper1 is broken", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e290d568-fc98-4145-8459-10004ded9998", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is present at room2 and ball6 is present at room1, is not defined? Write None if all are defined.", "answer": "ball6 is transported to room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "95448d94-4437-432e-856b-17621a9fa45f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball2 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball2 with rgripper1 and robot1 is not carrying ball7 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d3d7622e-5340-436c-a2ff-7b9e50206523", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball2 is not present at room1, ball3 is not at room5, ball4 is not present at room3, ball6 is not at room5, ball7 is not located at room5, ball7 is not present at room4, robot1 is not located at room2 and robot1 is not present in room5, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f6bcff97-cca6-4785-b412-1659e0456467", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1 and robot1 is not carrying ball5 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball1 with lgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "753f9d97-1f9a-460e-96c1-844c9be7603d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball2 is not at room3, ball2 is not located at room1, ball3 is not present at room2, ball3 is not present at room5, ball5 is not at room1, ball5 is not located at room3, ball5 is not located at room5, ball5 is not present at room4, ball6 is not present at room3, ball7 is not present at room4, robot1 is not at room5 and robot1 is not located at room4, is not defined? Write None if all are defined.", "answer": "ball5 is not transported to room4", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3d1fd57f-375d-4daf-937d-aec8af31bbb9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ff6bd7dd-9c69-44fa-be79-c6e7649fede2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is available and robot1's rgripper1 is available, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d98620d3-c9ec-4bdc-96cf-efa1289234c9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is located at room1, ball1 is not at room2, ball1 is not at room4, ball1 is not at room5, ball1 is not present at room3, ball2 is not at room1, ball2 is not at room4, ball2 is not located at room5, ball2 is not present at room3, ball3 is not at room2, ball3 is not at room3, ball3 is not at room4, ball3 is not present at room5, ball4 is at room2, ball4 is not at room4, ball4 is not present at room3, ball4 is not present at room5, ball5 is located at room2, ball5 is not at room1, ball5 is not located at room3, ball5 is not located at room4, ball6 is located at room1, ball6 is not at room2, ball6 is not located at room3, ball6 is not located at room5, ball7 is located at room3, ball7 is not at room1, ball7 is not at room4, ball7 is not at room5, ball7 is not located at room2, robot1 is not at room2, robot1 is not at room5, robot1 is not present in room3 and robot1 is present in room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d97d35cf-67ad-4b49-8d32-d0afed393b6d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1 and robot1 is not carrying ball7 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not using lgripper1 to load ball3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a4455bac-052c-49ac-92cf-31de97f73f0e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is free and robot1's rgripper1 is broken, is not defined? Write None if all are defined.", "answer": "robot1's rgripper1 is broken", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9c30bd8a-cace-440c-935f-164f61f1a924", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not located at room4, ball1 is not present at room2, ball2 is not at room3, ball2 is not at room5, ball3 is located at room1, ball3 isn't moved to room2, ball4 is not located at room4, ball4 is not present at room1, ball5 is at room2, ball5 is not located at room5, ball6 is not at room3, ball6 is not at room4, robot1 is not present in room3, robot1 is not present in room4 and robot1 is present in room1, is not defined? Write None if all are defined.", "answer": "ball3 isn't moved to room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d72f5471-e12b-40ae-b9ef-b1156123fed1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3cd3c237-558b-4b99-ba5d-097f439907d5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed:  and robot1 checks room4 and room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room4 and room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c0a0a632-aa2a-4fba-b314-050ff505f40a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some objects may or may not be defined. Is ball7 part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f663d41d-a252-4a55-9606-884b5b8da1a4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is lgripper2 part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b0387237-be58-40c8-904a-159e36cc40df", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball1 is being carried by robot1's lgripper1 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c8d6ba7b-fdc7-4f21-940a-741e3cabc87e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's rgripper1 is free part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4ab6a911-b3e2-4f16-a0b4-f1207e81df9f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is located at room5 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8daeb1a3-b3a9-444f-b557-4a4c9c9ac6b7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is using lgripper1 to load ball1 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c372a7d4-9dd9-4475-825b-c3db929c650f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is broken part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "aaca7b9e-dc86-4606-9edc-a44f070dc7dd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball7 is transported to room3 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f6f8b9d4-8f41-4b73-8892-eefacb0d4dfa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, is action, lgripper1 of robot1 drops ball1 in room5, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "186d52f8-82e1-497f-aae2-dd77be01f36f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is action, lgripper1 of robot1 destroys ball1 in room5, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2dfa7be3-b999-4f90-9c3c-29fb26f65bdc", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, is action, from room4, robot1's lgripper1 picks up ball4, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f6af11e7-2d54-46c4-aead-4eae385b563a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, is action, in room4, ball2 is destroyed using robot1's lgripper1, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7afa03c9-9cdd-44a4-bb03-c7883ad3a0e5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball2, ball5 and room1, is not part of the domain? Write None if all are defined.", "answer": "ball2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "02e81841-b23d-4f47-85fc-bfbe01a0db5b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball4, ball5, room1 and room6, is not part of the domain? Write None if all are defined.", "answer": "room6", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1733c359-9a8e-41f5-afb2-9ab1aeeca772", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball3 is at room5, ball4 is present at room2 and ball7 is at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "146b1cdc-a83d-4d84-bb83-ef0334c94798", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is present at room2, ball3 is located at room5, ball4 is located at room2, ball5 is at room2, ball7 is present at room3 and robot1 is present in room5, is not defined? Write None if all are defined.", "answer": "ball5 is moved to room2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3c4ca36a-2ce3-4c96-93f5-8460a89542f4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball6 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1501397e-08f2-4aa8-9957-5a6275438c19", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room2, ball2 is not at room3, ball2 is not located at room1, ball2 is not located at room4, ball4 is not at room5, ball4 is not located at room4, ball4 is not present at room3, ball5 is not located at room3, ball5 is not located at room4, ball6 is not at room2, ball6 is not located at room4, ball6 is not present at room5, ball7 is not at room2 and robot1 is not located at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b1bc9b61-62e9-45e1-8df6-b34781770619", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1 and robot1 is not carrying ball4 with lgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball4 with rgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f658bd28-9ca9-4a9d-8eb0-15b59d445a37", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room1, ball1 is not located at room2, ball1 is not located at room4, ball1 is not present at room3, ball1 is not present at room5, ball2 is not at room4, ball2 isn't moved to room1, ball2 is not located at room3, ball2 is not located at room5, ball4 is not at room1, ball4 is not located at room4, ball4 is not present at room3, ball4 is not present at room5, ball5 is not at room1, ball5 is not located at room4, ball5 is not located at room5, ball6 is not at room2, ball6 is not at room4, ball7 is not located at room1, ball7 is not located at room4, ball7 is not present at room5, robot1 is not at room1, robot1 is not located at room4 and robot1 is not present in room2, is not defined? Write None if all are defined.", "answer": "ball2 isn't moved to room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "38a35cf0-fdb5-46a3-8c93-7609714f733b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, rgripper1 of robot1 is not carrying ball3 and robot1 is not carrying ball6 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8718159a-1b19-42f2-81f3-c609091599d7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5 and in room5, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is not free and robot1's rgripper1 is free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "82bf100e-a5d0-4f28-ae75-b4475774ca58", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5 and rgripper1 of robot1 drops ball3 in room5 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room1, ball1 is not at room5, ball1 is not located at room2, ball1 is not located at room3, ball2 is located at room2, ball2 is not at room1, ball2 is not located at room3, ball2 is not located at room5, ball3 is at room5, ball3 is not present at room1, ball3 is not present at room2, ball3 is not present at room3, ball3 is not present at room4, ball4 is located at room2, ball4 is not at room1, ball4 is not located at room3, ball4 is not located at room4, ball4 is not present at room5, ball5 is at room2, ball5 is not at room5, ball5 is not present at room1, ball6 is at room1, ball6 is not at room4, ball6 is not located at room2, ball6 is not located at room3, ball6 is not located at room5, ball7 is not at room2, ball7 is not located at room5, ball7 is not present at room4, robot1 is not at room1, robot1 is not present in room2, robot1 is not present in room3 and robot1 is not present in room4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6cbb8106-6075-4d00-bff2-a3dd45c4ec47", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball7 is not being carried by robot1's lgripper1 and ball2 is not loaded using robot1's rgripper1, is not defined? Write None if all are defined.", "answer": "ball2 is not loaded using robot1's rgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "14e73bcd-a2a3-4c42-b487-b8b10e6d9a1b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not broken and robot1's rgripper1 is free, is not defined? Write None if all are defined.", "answer": "robot1's lgripper1 is not broken", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "3e543eb3-8986-4f16-8dbd-72dbf7a8f074", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room1, ball1 is not at room3, ball1 is not present at room2, ball2 is not present at room1, ball3 is not present at room2, ball6 is at room1, ball6 is not at room3, ball7 is not located at room5, robot1 is not at room2 and robot1 is present in room5, is not defined? Write None if all are defined.", "answer": "robot1 is not currently engaged in room2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "274419d0-2957-4e08-b33a-e2897241192a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1292d06b-786c-4cfd-a672-f7c087c865aa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, room1 and room5 are checked by robot1 and ball3 is dropped in room5 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "room1 and room5 are checked by robot1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a1498c1d-d145-4932-b8f3-e137ff7a3f1a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some objects may or may not be defined. Is ball3 part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "eab406ea-8f9e-4b50-8051-bc9247822370", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is room6 part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4bad3c8e-ff81-4c79-8d5e-5d42806c717f", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball1 is being carried by robot1's lgripper1 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "885f8f08-1aaf-460c-b0f7-caa68fc01ecb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's rgripper1 is not free part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "35646b31-0f5c-4593-bd1a-79732ec83ef3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is at room1 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2fb31c71-4e84-4fdb-81dc-7f2cfdce56a7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is loading ball1 with lgripper1 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "05c1bb4b-757d-4557-9667-b5e16e32232d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is not broken part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "cc8444e7-dfa5-4e3e-bb94-e4e9300c727d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball2 is moved to room2 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f7558a70-f570-4360-aebf-79d4528767ea", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is action, robot1 moves to room3 from room1, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7726c2a3-9c37-46aa-9c6a-bf1ea8cbd3ba", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, is action, in room1, ball6 is destroyed using robot1's rgripper1, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f9ffbea6-72fd-4567-838c-dc609b0c4716", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is action, ball6 is dropped in room2 with lgripper1 by robot1, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "eced085c-bfbe-43c8-bfe2-3be97779a2c1", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, is action, robot1 checks room2 and then checks room4, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "643f734a-a190-4717-86cd-ea4346b04b1d", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball2, ball7, lgripper1, room1, room2, room3 and room5, is not part of the domain? Write None if all are defined.", "answer": "ball1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d1950d91-fe95-42d4-abea-3cac0c2dc2aa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball2, ball5, ball6, ball8, lgripper1, room4 and room5, is not part of the domain? Write None if all are defined.", "answer": "ball8", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e6041730-0105-40dc-a80f-6706dfee151b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is being carried by robot1's lgripper1 and ball6 is being carried by robot1's rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0cec801f-2121-4c34-b716-6de22d729233", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is located at room2, ball3 is present at room5, ball4 is at room1, ball5 is at room2, ball7 is located at room3 and robot1 is present in room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d2e5aa25-e68c-40f0-b594-2fda17fd7e1b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, rgripper1 of robot1 is carrying ball6 and robot1 is carrying ball1 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball1 is loaded using robot1's lgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0318b656-44d7-4370-9d69-57c94c3705b0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is transported to room2, ball3 is located at room5, ball4 is at room1 and ball7 is located at room3, is not defined? Write None if all are defined.", "answer": "ball2 is transported to room2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0f3c6882-ae39-4222-a8fe-a6081cfba7c6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "717d7e25-3541-4f06-828e-208cb0acf6b0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_10", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, lgripper1 of robot1 is not free and robot1's rgripper1 is not available, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b4bba536-d7dd-44e7-a44f-c68c7d369675", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball6 is not at room5, ball7 is not located at room5 and robot1 is not present in room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "00e7fc82-caf9-4055-80d6-8d4c7d2d8b42", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball4 is not being carried by robot1's rgripper1, robot1 is not carrying ball2 with rgripper1 and ball3 is not loaded using robot1's rgripper1, is not defined? Write None if all are defined.", "answer": "ball3 is not loaded using robot1's rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f8898abb-2c79-4f40-8426-04ae8377910b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_14", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1's lgripper1 is not free and robot1's rgripper1 is not available, is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 is not broken", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7ddfe341-c3c3-4875-91a4-d2f6aa06cd3e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room1, ball1 is not located at room4, ball1 is not located at room5, ball1 is not present at room2, ball2 is not at room1, ball2 is not at room3, ball2 is not located at room4, ball2 is not located at room5, ball3 is not located at room3, ball3 is not present at room2, ball4 is not at room3, ball4 is not at room4, ball4 is not at room5, ball5 is not at room1, ball5 isn't moved to room3, ball5 is not present at room4, ball5 is not present at room5, ball6 is not at room1, ball6 is not at room2, ball6 is not at room4, ball6 is not located at room3, ball7 is not at room1, ball7 is not located at room2, ball7 is not located at room4, ball7 is not present at room5, robot1 is not located at room2, robot1 is not located at room3, robot1 is not located at room5 and robot1 is not present in room4, is not defined? Write None if all are defined.", "answer": "ball5 isn't moved to room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fb82997c-2cfd-43e4-8dcf-e67ac6a17d7b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball2 is not being carried by robot1's lgripper1, ball6 is being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball4 and robot1 is carrying ball1 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "42753641-99cb-4912-acd4-36f61e0554c3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ad5a4312-5006-41eb-b016-a39b1697a216", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room2, ball1 is not at room3, ball2 is not present at room3, ball2 is present at room2, ball3 is not at room2, ball3 is not located at room3, ball4 is not at room3, ball4 is not located at room2, ball4 is not present at room5, ball5 is not located at room4, ball5 is not present at room3, ball6 is not at room4, ball6 is not located at room2, ball7 is at room3, ball7 is not at room5, ball7 is not located at room4, robot1 is not present in room3, robot1 is not present in room4 and robot1 is present in room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a6c6547a-5024-4d76-bfbf-e1f8f5731de9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball2 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball6 with rgripper1, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball3 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball3 with rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "829833e9-b0c5-4f28-b5b4-7f2d2243314e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is not free and robot1's rgripper1 is not broken, is not defined? Write None if all are defined.", "answer": "robot1's rgripper1 is not broken", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7858185f-8d05-49e5-b9fa-d14a11ade186", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1 and ball6 is picked from room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not located at room1, ball1 is not located at room2, ball1 is not located at room4, ball1 is not located at room5, ball1 is not present at room3, ball2 is at room2, ball2 is not at room1, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is located at room5, ball3 is not at room2, ball3 is not at room3, ball3 is not located at room1, ball4 is at room1, ball4 is not at room3, ball4 is not located at room4, ball4 is not present at room2, ball5 is not at room3, ball5 is not at room5, ball5 is not located at room1, ball5 is not located at room4, ball5 is present at room2, ball6 is not at room4, ball6 is not located at room1, ball6 is not present at room3, ball6 is not transported to room5, ball7 is at room3, ball7 is not at room2, ball7 is not at room4, ball7 is not located at room1, ball7 is not present at room5, robot1 is located at room1, robot1 is not at room2, robot1 is not at room4, robot1 is not present in room3 and robot1 is not present in room5, is not defined? Write None if all are defined.", "answer": "ball6 is not transported to room5", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "00e25630-66ef-44fc-bdc3-6d9b9a804141", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4 and from room1, robot1's rgripper1 picks up ball6 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b29aff79-0214-4e1f-8c2a-04a4116bc270", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, in room1, ball3 is inspected using robot1's rgripper1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1 and rgripper1 of robot1 picks up ball6 in room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "in room1, ball3 is inspected using robot1's rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "413ee0ea-0382-4607-b819-35a8539d7cd3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some objects may or may not be defined. Is room3 part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c5894ec8-db4d-4f95-9549-4c029f3d7ef8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some objects may or may not be defined. Is room6 part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "c5afee48-0263-477c-9143-9155b94337fb", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is carrying ball7 with rgripper1 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d584cbab-958a-441f-a816-bc377ee84de5", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some properties of the state may or may not be defined. Is lgripper1 of robot1 is free part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6817a746-60fe-4294-aee0-f85e681fdf4b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is present in room4 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b548d654-449e-46b9-b833-cd69b1e0daa4", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is using rgripper1 to load ball7 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "64e6d75c-0229-47cb-ac29-eed00f39d8f0", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's lgripper1 is broken part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ffa71442-79d6-4145-8f7e-7129bc5db6fa", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is currently engaged in room4 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "993206d4-d9c5-4798-a612-6866e4585922", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, is action, robot1 moves from room4 to room5, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4511a901-22cd-48df-a341-3526ae9c5493", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is action, room4 and room1 are checked by robot1, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "348eefee-a58c-4ae1-ab14-708ed08edb46", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is action, ball7 is dropped in room2 with rgripper1 by robot1, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2252f05f-0dc7-41f3-84b9-39fefdb62483", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, is action, room2 and room3 are checked by robot1, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "bfd06524-99e2-4943-8d7f-d5344ca179e2", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball4, ball5, ball6, lgripper1 and room2, is not part of the domain? Write None if all are defined.", "answer": "ball5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "465e6f9d-6aef-4d1a-acfa-c3441dfb9bee", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball2, ball3, ball5, ball6, ball7, lgripper1, rgripper1, robot1, room1, room3 and room6, is not part of the domain? Write None if all are defined.", "answer": "room6", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "129fa3c4-7da0-49e7-a19f-bd40ec8dd1a7", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room4, ball2 is present at room2, ball3 is present at room5, ball4 is present at room1, ball5 is located at room2, ball6 is present at room3 and robot1 is at room4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5e276a17-f3c6-49ca-bb4e-7c785b84ff78", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is moved to room4, ball2 is present at room2, ball3 is at room5 and robot1 is present in room4, is not defined? Write None if all are defined.", "answer": "ball1 is moved to room4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1647e787-6156-4dc5-864c-bd4d18b32825", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball2 and rgripper1 of robot1 is not carrying ball6, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "27a2a09f-8da3-4a63-a723-4223434c1503", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not at room2, ball1 is not at room5, ball2 is not present at room1, ball2 is not present at room3, ball4 is not located at room4, ball4 is not present at room3, ball4 is not present at room5, ball5 is not at room3, ball5 is not present at room1, ball6 is not located at room2, ball7 is not at room1, ball7 is not located at room2, ball7 is not located at room4, robot1 is not at room5, robot1 is not present in room1 and robot1 is not present in room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0f5fe7e8-31d4-4c8e-88ad-76080ffdc8de", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4 and robot1 is not carrying ball3 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball2 is not loaded using robot1's rgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e3f8ec3c-979c-4ca8-afb1-06f359567aff", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not at room2, ball2 is not present at room5, ball3 isn't moved to room2, ball3 is not present at room4 and robot1 is not located at room3, is not defined? Write None if all are defined.", "answer": "ball3 isn't moved to room2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "663d77a5-387e-49fa-a3e5-5c23fe6accdd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball2 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball3, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball6 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "7f38d166-2d99-4e24-86b7-916905f56be6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is free and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "2d2f89c3-007a-4dd0-b57b-8ca4e206b26b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not located at room2, ball1 is present at room4, ball2 is not at room4, ball2 is not at room5, ball2 is not located at room1, ball4 is not at room3, ball4 is present at room1, ball5 is not at room3, ball5 is not located at room1, ball5 is not present at room4, ball5 is present at room2, ball6 is not located at room1, ball7 is not at room2, ball7 is not located at room5, ball7 is not present at room4, robot1 is not at room1, robot1 is not at room2, robot1 is not at room5, robot1 is not present in room3 and robot1 is present in room4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "e3670320-24ff-4d49-ad85-be80c2fbddbf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball6, robot1 is carrying ball7 with rgripper1, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball4 with lgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not using lgripper1 to load ball4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "fbabbf76-d616-4948-ae61-93ef0de00e7e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3 and lgripper1 of robot1 drops ball1 in room4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is broken and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 is broken", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d19abd61-4837-47a0-86cc-e75d70800dcf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not located at room5, ball1 is not present at room1, ball1 is present at room4, ball2 is not present at room4, ball3 is not located at room1, ball3 is not present at room4, ball4 is not located at room5, ball5 is not at room5, ball5 is not located at room3, ball6 is not located at room5, ball7 is not located at room4, ball7 is not present at room1, robot1 is at room4, robot1 is not located at room3 and robot1 is not present in room5, is not defined? Write None if all are defined.", "answer": "robot1 is currently engaged in room4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4faf2532-6a47-4ba9-864c-280b9fe09210", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4 and ball1 is dropped in room4 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "aa9c443b-e5b6-40d9-b223-1aa1610ce2dc", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, ball6 is destroyed using robot1's rgripper1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3 and in room4, robot1's lgripper1 drops ball1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "in room3, ball6 is destroyed using robot1's rgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0d516f8e-ad54-4f8f-a5af-9a7a86c7f1f6", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some objects may or may not be defined. Is lgripper1 part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "933ff0d7-7a8d-4210-bb25-f7acc990ae0a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is ball8 part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "16297c6e-a226-44e7-a7af-b4f1cb24477a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is carrying ball5 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4cde43e6-417a-4057-9a43-f5237b70b045", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's lgripper1 is not free part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "012f9ccf-9bab-47dc-bbbf-ff2c0633ba62", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball6 is at room3 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "1b16c472-fd12-444d-95ba-fc1901602994", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is using rgripper1 to load ball5 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f14a1b1b-c9ce-499c-a114-84cfc294b82a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's lgripper1 is not broken part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "4cbea14a-0cbe-4fe8-888a-93e79c225e34", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. Is in room2, robot1 is engaged part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f506df6b-960a-41aa-978f-0cf94be04948", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves from room2 to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is action, from room2, robot1 moves to room3, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "af227a33-43c6-46f6-8633-4be48f28b074", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, is action, room2 and room5 are checked by robot1, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "124fdc50-40db-47cb-8f08-3ced255d2f86", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, is action, ball2 is dropped in room1 with rgripper1 by robot1, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "208f870c-9cc9-4769-9d34-2aecbf6bb20e", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, is action, in room2, ball6 is destroyed using robot1's lgripper1, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5faa5ed0-7588-4e71-9594-cf0427e82afe", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball2, ball3, ball4, ball5, ball6, ball7, lgripper1, rgripper1, robot1, room1, room2, room3, room4 and room5, is not part of the domain? Write None if all are defined.", "answer": "room5", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "00611e16-c97a-427d-b3cb-a87a3a95303b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves to room5 from room1, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball2, ball4, ball8, lgripper1, room2 and room3, is not part of the domain? Write None if all are defined.", "answer": "ball8", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ec39b05e-003d-46e4-b6b9-4a1405969c4c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, lgripper1 of robot1 is carrying ball2 and rgripper1 of robot1 is carrying ball5, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "46ddf2f7-1862-423f-b799-31852bfc03c3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is present at room4, ball3 is located at room5 and ball4 is located at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "8f3023df-266a-464f-96fa-db11919bbda3", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, from room2, robot1's rgripper1 picks up ball4, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is being carried by robot1's lgripper1 and ball5 is being carried by robot1's rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is loading ball5 with rgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "6095537e-50bc-4855-b909-12e74e711e4a", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, from room1, robot1's lgripper1 picks up ball1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is present at room4, ball3 is present at room5, ball4 is located at room1, ball6 is moved to room3, ball7 is present at room4 and robot1 is located at room2, is not defined? Write None if all are defined.", "answer": "ball6 is moved to room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "b043e1ab-8911-4196-b231-d39f02462ad9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball7 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball4 and robot1 is not carrying ball1 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "49ae5849-f52d-4117-b390-c9401e86a159", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_10", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not available, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "d5eda593-31f1-4645-bb60-a810306d264b", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's rgripper1 drops ball6, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not at room2, ball1 is not at room5, ball1 is not located at room1, ball2 is not at room2, ball2 is not present at room3, ball2 is not present at room4, ball2 is not present at room5, ball3 is not at room3, ball3 is not located at room2, ball4 is not at room2, ball4 is not located at room4, ball4 is not present at room5, ball5 is not at room1, ball5 is not at room2, ball5 is not located at room3, ball5 is not located at room4, ball5 is not located at room5, ball6 is not at room1, ball6 is not at room5, ball6 is not present at room4, ball7 is not at room2, ball7 is not present at room5, robot1 is not at room1, robot1 is not at room4, robot1 is not located at room3 and robot1 is not present in room5, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "ff107c10-14ec-4cf4-a225-8c992a0f553c", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, robot1 moves to room4 from room3, lgripper1 of robot1 drops ball1 in room4, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball3 is not loaded using robot1's rgripper1, ball7 is not being carried by robot1's rgripper1 and rgripper1 of robot1 is not carrying ball1, is not defined? Write None if all are defined.", "answer": "ball3 is not loaded using robot1's rgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "a5841910-62d5-4c6d-8c63-c9b77529da07", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_14", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, in room4, robot1's rgripper1 drops ball7, from room4, robot1 moves to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1's lgripper1 is not free and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "robot1's lgripper1 is not broken", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "eccb1b75-20f8-47e7-a20f-e7b69a3e8562", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, lgripper1 of robot1 picks up ball1 in room1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room4, lgripper1 of robot1 drops ball1 in room4, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, ball2 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room1, ball2 is not at room1, ball2 is not at room4, ball2 is not present at room2, ball3 is not transported to room1, ball3 is not present at room2, ball3 is not present at room3, ball4 is not present at room2, ball4 is not present at room3, ball4 is not present at room4, ball5 is not at room3, ball5 is not at room4, ball5 is not located at room2, ball5 is not located at room5, ball5 is not present at room1, ball6 is not present at room5, ball7 is not at room5, ball7 is not located at room2, robot1 is not present in room1 and robot1 is not present in room3, is not defined? Write None if all are defined.", "answer": "ball3 is not transported to room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "af11b9c6-6769-4914-959f-dfb2513705d9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves from room5 to room2, rgripper1 of robot1 picks up ball4 in room2, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball7, robot1 moves from room3 to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball2 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "462a76ce-63e4-4347-9fc5-0acda2c176c8", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves to room2 from room4, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "5b11b548-0808-457b-af66-756265b3cfb9", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball3 in room1, robot1 moves from room1 to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball7 in room3, robot1 moves from room3 to room4, ball1 is dropped in room4 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room3, ball1 is not at room5, ball1 is not located at room1, ball2 is not at room1, ball2 is not at room3, ball2 is not located at room5, ball2 is not present at room4, ball3 is at room5, ball3 is not at room1, ball3 is not located at room4, ball4 is not at room4, ball4 is not located at room2, ball4 is not located at room5, ball4 is present at room1, ball5 is not at room5, ball5 is not located at room4, ball5 is not present at room2, ball5 is not present at room3, ball6 is located at room3, ball6 is not at room4, ball6 is not present at room2, ball7 is not at room5, ball7 is not located at room1, robot1 is not located at room1, robot1 is not located at room3, robot1 is not located at room4 and robot1 is not present in room5, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "63cbf513-b091-45b5-a32e-736ff193adbf", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves from room5 to room2, ball4 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball3 is not being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball2 and lgripper1 of robot1 is not carrying ball1, is not defined? Write None if all are defined.", "answer": "robot1 is loading ball2 with lgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "f610ee3b-98a7-443e-905e-8e86b080cb91", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, lgripper1 of robot1 picks up ball1 in room1, ball3 is picked from room1 with rgripper1 by robot1, robot1 moves to room5 from room1, ball3 is dropped in room5 with rgripper1 by robot1, robot1 moves to room2 from room5, from room2, robot1's rgripper1 picks up ball4, from room2, robot1 moves to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball7 in room4, robot1 moves to room2 from room4, ball2 is picked from room2 with lgripper1 by robot1 and ball5 is picked from room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not available and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 is not broken", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "0c17cbfc-a659-489a-964f-3983e68f0a25", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves to room1 from room4, ball1 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room1, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, from room5, robot1 moves to room2, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room4, lgripper1 of robot1 drops ball1 in room4, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, from room2, robot1's lgripper1 picks up ball2 and rgripper1 of robot1 picks up ball5 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is at room4, ball1 is not at room1, ball1 is not transported to room2, ball1 is not located at room3, ball1 is not present at room5, ball2 is not located at room3, ball2 is not present at room1, ball2 is not present at room2, ball3 is not at room3, ball3 is not at room4, ball3 is not located at room1, ball3 is not present at room2, ball3 is present at room5, ball4 is not at room3, ball4 is not located at room5, ball4 is not present at room4, ball4 is present at room1, ball5 is not at room5, ball5 is not located at room4, ball5 is not present at room2, ball5 is not present at room3, ball6 is not located at room1, ball6 is not present at room2, ball6 is not present at room4, ball7 is at room4, ball7 is not at room2, ball7 is not located at room3, ball7 is not present at room1, ball7 is not present at room5, robot1 is at room2, robot1 is not located at room1, robot1 is not present in room3 and robot1 is not present in room5, is not defined? Write None if all are defined.", "answer": "ball1 is not transported to room2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "9b7e2420-9f99-4bde-b047-966ad40315ee", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room4, robot1 moves to room1, ball1 is picked from room1 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, in room5, robot1's rgripper1 drops ball3, robot1 moves to room2 from room5, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's rgripper1 drops ball4, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room3, robot1 moves to room4 from room3, in room4, robot1's lgripper1 drops ball1, ball7 is dropped in room4 with rgripper1 by robot1, from room4, robot1 moves to room2, ball2 is picked from room2 with lgripper1 by robot1 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
{"id": "12988200-d769-4eec-aa20-a8e94fa650fd", "domain_name": "grippers", "instance_id": "Instance_2", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room4 to room1, from room1, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball3, from room1, robot1 moves to room5, rgripper1 of robot1 drops ball3 in room5, robot1 moves to room2 from room5, rgripper1 of robot1 picks up ball4 in room2, from room2, robot1 moves to room1, rgripper1 of robot1 drops ball4 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, rgripper1 of robot1 drops ball6 in room3, ball7 is picked from room3 with rgripper1 by robot1, room3 and room4 are checked by robot1, in room4, robot1's lgripper1 drops ball1, in room4, robot1's rgripper1 drops ball7, robot1 moves from room4 to room2, lgripper1 of robot1 picks up ball2 in room2 and from room2, robot1's rgripper1 picks up ball5 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "room3 and room4 are checked by robot1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["at(ball5,room2)", "at(ball3,room1)", "at(ball6,room1)", "at_robby(robot1,room4)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball7,room3)", "at(ball1,room1)", "at(ball4,room2)", "at(ball2,room2)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at(ball1,room3)", "-at(ball5,room1)", "-carry(robot1,ball4,rgripper1)", "-at_robby(robot1,room2)", "-at(ball2,room1)", "-at(ball7,room5)", "-at(ball3,room4)", "-carry(robot1,ball3,rgripper1)", "-at_robby(robot1,room1)", "-at(ball6,room3)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball3,room3)", "-carry(robot1,ball3,lgripper1)", "-at(ball1,room4)", "-at(ball6,room5)", "-carry(robot1,ball5,lgripper1)", "-at(ball4,room5)", "-at(ball4,room4)", "-at(ball6,room2)", "-at(ball7,room4)", "-at(ball7,room2)", "-at(ball5,room3)", "-at(ball7,room1)", "-at(ball2,room3)", "-at(ball4,room3)", "-at(ball6,room4)", "-at(ball3,room2)", "-carry(robot1,ball7,rgripper1)", "-at(ball1,room5)", "-carry(robot1,ball4,lgripper1)", "-at_robby(robot1,room5)", "-carry(robot1,ball5,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball1,room2)", "-at_robby(robot1,room3)", "-at(ball2,room4)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball2,rgripper1)", "-at(ball4,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball2,room5)", "-at(ball5,room5)", "-at(ball3,room5)"], "objects": {"robot": ["robot1"], "gripper": ["lgripper1", "rgripper1"], "room": ["room2", "room4", "room1", "room3", "room5"], "object": ["ball4", "ball6", "ball2", "ball1", "ball5", "ball7", "ball3"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room1, ball2 is at room2, ball3 is present at room1, ball4 is present at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room3, lgripper1 of robot1 is free, robot1 is at room4 and robot1's rgripper1 is free.", "action_sequence": ["action_move(robot1,room4,room1)", "action_pick(robot1,ball1,room1,lgripper1)", "action_pick(robot1,ball3,room1,rgripper1)", "action_move(robot1,room1,room5)", "action_drop(robot1,ball3,room5,rgripper1)", "action_move(robot1,room5,room2)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball7,room3,rgripper1)", "action_move(robot1,room3,room4)", "action_drop(robot1,ball1,room4,lgripper1)", "action_drop(robot1,ball7,room4,rgripper1)", "action_move(robot1,room4,room2)", "action_pick(robot1,ball2,room2,lgripper1)", "action_pick(robot1,ball5,room2,rgripper1)", "action_move(robot1,room2,room5)", "action_drop(robot1,ball2,room5,lgripper1)", "action_drop(robot1,ball5,room5,rgripper1)"]}
