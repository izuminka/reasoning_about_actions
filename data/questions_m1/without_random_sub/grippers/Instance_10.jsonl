{"id": "baccbbe2-3a58-4490-8b9a-70adec596941", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: lgripper1 of robot1 is carrying ball4?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fe54c0f5-1f22-4de5-a2d3-a4629087b1ae", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball11 is being carried by robot1's lgripper1, ball3 is being carried by robot1's lgripper1, ball6 is being carried by robot1's lgripper1, ball7 is being carried by robot1's lgripper1, ball9 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball8 and robot1 is carrying ball10 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "625e8890-c8ab-450e-99eb-97e2da42da91", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: ball5 is not being carried by robot1's lgripper1 and robot1 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "faa3f1d5-3d1a-464c-bbb8-8cef68292745", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball1 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b991c62b-c111-47cb-be20-41ae1f0e4eb3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: lgripper1 of robot1 is not carrying ball2 and robot1 is not carrying ball2 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8e62b4c7-cf18-4289-a1ab-e46cb5ff70a3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is not being carried by robot1's rgripper1 and robot1 is not carrying ball4 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "283c9f87-6ab9-44a0-b9a6-8ddf855805f5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's rgripper1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "131a9f3e-3732-4412-8b9f-f7c2c51dd9d1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is free and robot1's rgripper1 is available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "12a32c0f-cdb7-4dcf-b93d-9f9183b76468", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1d6e22d8-5d51-41cf-86c1-c126110651de", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: rgripper1 of robot1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b6ce323e-7900-47ec-ad52-640923134f4e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c5276624-1c16-4ce9-b147-aff98185c1ea", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is present at room3, ball10 is located at room3 and ball11 is located at room3?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "223780d2-fdba-42e0-a1cb-cdb4aeea472e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: ball2 is at room1, ball2 is located at room3 and ball2 is present at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8488400f-cb54-406d-a57e-70baeebfe256", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is not at room1 and ball7 is not at room3?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c74b3635-7ee0-4328-8034-166254a879f2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball9: ball9 is not at room2, ball9 is not located at room1 and ball9 is not present at room3?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "13f40348-674c-4cf4-b8b9-3eb21e9e8818", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball3: ball3 is not located at room2, ball3 is not present at room1 and ball3 is present at room3?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ac9d687c-f051-4864-8ffc-6b25780f476e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1 is located at room2, robot1 is located at room3 and robot1 is not located at room1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6a0e9ea8-cf6e-463e-a66d-165f4a91784f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "68066201-cdb6-4acc-8be0-738f224c584a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, what is the object type for room1 and room3. Write None if there are none.", "answer": "room", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "57ac18a3-4658-4441-a21a-92a20536559e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: robot1 is carrying ball7 with rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "394e1c7f-193e-456f-9708-97c6e699af9e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: lgripper1 of robot1 is carrying ball7 and rgripper1 of robot1 is carrying ball7?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2ee3c5ac-e77c-40ab-b135-2efb0051dbba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: ball2 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2e4d31d7-910d-496c-9383-5f1270e8ce74", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: rgripper1 of robot1 is not carrying ball2 and robot1 is not carrying ball2 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b95e9646-3a31-4e74-af84-ae1b1768de9c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: rgripper1 of robot1 is not carrying ball2 and robot1 is carrying ball2 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4c0f69f6-98ca-4f61-beed-f73b65588298", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball8: lgripper1 of robot1 is carrying ball8 and rgripper1 of robot1 is not carrying ball8?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "db39fece-c3b9-46ea-ab81-3dbac6d51e19", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: rgripper1 of robot1 is not free and robot1's lgripper1 is not free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "19813867-c4a1-42d2-9f93-d57b9456ce81", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is not free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f7cc469e-3bf6-441f-8707-0909002837ab", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: rgripper1 of robot1 is not free and robot1's lgripper1 is free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "19ae9ddf-a2c4-448e-9aaf-d95d8e04941d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: ball5 is present at room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c063b4e2-a0a5-48eb-af7b-5a5a05758788", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room3: ball1 is at room3, ball10 is at room3, ball11 is located at room3, ball2 is present at room3, ball3 is present at room3, ball4 is at room3, ball5 is at room3, ball6 is present at room3, ball7 is present at room3, ball8 is present at room3, ball9 is present at room3 and robot1 is at room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fab334e0-5be9-4940-ab52-cffe3ef011ee", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: ball2 is not at room1, ball2 is not at room2 and ball2 is not present at room3?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "01155d25-c123-41e7-a185-9ec4723ebbf7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not at room3, ball6 is not located at room2 and ball6 is not present at room1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "42776cbe-52b9-4ede-862a-c9a4a6ac5bdc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not at room2, ball6 is not located at room3 and ball6 is present at room1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8168ef6f-105b-4929-976d-bfe26d8a4365", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball8: ball8 is not at room1, ball8 is not located at room2 and ball8 is not located at room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "94aa5f12-a4c7-4c7c-bf4b-9667f0bf7298", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2 and room3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4d6d5852-62a5-4a6c-8f5b-5fd6ef9788e4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for ball10 and ball4. Write None if there are none.", "answer": "object", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "437828e8-c1f2-4225-a570-0df7378f994d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: ball6 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5c2275c9-64b7-45dd-bbca-6efca463e8c7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: ball10 is being carried by robot1's lgripper1, ball11 is being carried by robot1's rgripper1, ball2 is being carried by robot1's lgripper1, ball5 is being carried by robot1's lgripper1, ball6 is being carried by robot1's rgripper1, ball7 is being carried by robot1's lgripper1, ball7 is being carried by robot1's rgripper1, ball8 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball5, robot1 is carrying ball10 with rgripper1, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball8 with lgripper1, robot1 is carrying ball9 with lgripper1 and robot1 is carrying ball9 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b356f364-6fb4-44bb-9d10-ba8221ab6b7e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: ball11 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1 and robot1 is not carrying ball5 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "99dc9510-1cc2-4858-9c30-23b0dabff5fc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: ball1 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1 and robot1 is not carrying ball8 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5e8051a9-ed87-4ae9-b721-97f956a2b89d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not being carried by robot1's lgripper1 and rgripper1 of robot1 is carrying ball6?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "063a67e7-ec0a-41eb-af9d-af5efe621378", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: robot1 is carrying ball2 with lgripper1 and robot1 is not carrying ball2 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8352e2ec-74c1-44de-9b9c-bdff993c4b9f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is not available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "410628fe-dbe9-498e-acd7-f48b8c3e3249", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is not free?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8fa1a539-32b6-4b5d-a57a-c147691967fd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is free?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "82c19064-3519-48c2-8a7d-411a5235fd4b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1 is present in room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c6294195-66e1-44de-8fee-4128f0da999f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball10: ball10 is at room2, ball10 is at room3 and ball10 is located at room1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4ec842b6-304c-4f5c-8ecb-81048d642d10", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is not at room2 and ball7 is not at room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "87379991-fee7-42d3-b655-2c2af72aa276", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball10: ball10 is not at room1, ball10 is not located at room3 and ball10 is not present at room2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cebfebde-649b-4c82-aa2f-03fd0e52ade4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball5: ball5 is not at room3, ball5 is not located at room1 and ball5 is present at room2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a4dafad0-84ac-4ce7-b39a-9ba0e64a06f6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room1: ball1 is not located at room1, ball10 is not located at room1, ball11 is located at room1, ball2 is not located at room1, ball3 is not present at room1, ball4 is not at room1, ball5 is located at room1, ball6 is located at room1, ball7 is present at room1, ball8 is not at room1, ball9 is not located at room1 and robot1 is present in room1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8bae6ea3-ed42-4b0e-8f07-2784d04664d4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball10, ball11, ball2, ball3, ball4, ball5, ball6, ball7, ball8 and ball9", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b2e78b43-493c-48b9-b5ac-199f6807d25d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, what is the object type for lgripper1 and rgripper1. Write None if there are none.", "answer": "gripper", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a9913e76-d3ae-4eba-8377-ba64a844ee7c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball8 is being carried by robot1's lgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2a80db41-3464-4c74-b9e8-742ec476a5ff", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: ball11 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball9 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "76ee2383-2e97-49ff-86b0-6e485c62b322", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: ball4 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with rgripper1 and robot1 is not carrying ball2 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dccdc4c8-39f8-46fe-afe6-fb21dbbc2ff8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: lgripper1 of robot1 is not carrying ball7 and robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "53f3703c-aab2-4b67-bcb6-7b41df21c804", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: ball6 is being carried by robot1's rgripper1, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball9, robot1 is carrying ball1 with rgripper1, robot1 is carrying ball10 with rgripper1, robot1 is carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1 and robot1 is not carrying ball8 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4dae65b5-9873-482f-82e7-3b6ddd8f369b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is not free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "47af01be-6422-440d-ba5d-2427cf59a5f9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is not free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "afb744b3-43d4-462a-974f-2905294476d2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "458961d9-6846-4e57-8224-f8d8b9302dc8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball4: ball4 is present at room1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "354bf3c5-d8a8-4d5f-bf0b-a35fafcf04af", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is at room3, ball6 is located at room1 and ball6 is present at room2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8b97a243-3470-447f-bde6-3d61fb9e3b27", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball6: ball6 is not at room1 and ball6 is not at room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "18adf459-5ccb-4a42-9813-88ed7505e6d1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball2: ball2 is not at room1, ball2 is not at room2 and ball2 is not at room3?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "59e2549f-23c8-46db-a8e5-a679ccdfad54", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball3: ball3 is not present at room1, ball3 is not present at room2 and ball3 is not present at room3?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "12639919-85f8-4d95-a50c-5e716c8aaa00", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball9: ball9 is at room3, ball9 is located at room2 and ball9 is not present at room1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "acb62d33-9ba2-48e9-8ee3-219b9a735730", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "99e3bd70-0751-424b-8469-8a55e905bac9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the object type for robot1. Write None if there are none.", "answer": "robot", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "593381f7-dc3a-4a17-bc60-a8df876b4e48", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball9 is being carried by robot1's lgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4c21a1d2-edf9-4838-99db-def128e939d4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: ball10 is being carried by robot1's lgripper1, ball2 is being carried by robot1's lgripper1, ball3 is being carried by robot1's lgripper1, ball4 is being carried by robot1's lgripper1, ball5 is being carried by robot1's lgripper1, ball7 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is carrying ball6, lgripper1 of robot1 is carrying ball9 and robot1 is carrying ball8 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9c76e857-66af-429e-89a0-148c656e89a9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a319726e-2bf1-4f96-8a2e-6ed67dc78ce8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball11: lgripper1 of robot1 is not carrying ball11 and rgripper1 of robot1 is not carrying ball11?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4315d4cd-a88c-41e5-8724-d3e09ae629bc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball9: lgripper1 of robot1 is carrying ball9 and rgripper1 of robot1 is carrying ball9?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2346f83b-d8ea-417b-9967-795e08132d13", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for rgripper1: robot1's rgripper1 is free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a5950495-2123-4751-8709-f7759ff660e2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: lgripper1 of robot1 is free and robot1's rgripper1 is free?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7cf1c632-5ee0-4956-ab56-b434b7325569", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a6883153-f708-4ef7-8a58-7ef87d8ab45a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for robot1: robot1's lgripper1 is not free and robot1's rgripper1 is not free?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cddcac9c-ad2f-4553-8754-652ed0d027a7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is not available?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5b73395a-5881-448c-829f-7ca6476f1a40", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for lgripper1: robot1's lgripper1 is free?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d5645aef-6996-4c85-ab51-9d1b8a1eac03", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is located at room3, ball10 is located at room3 and ball11 is present at room1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "632c17a8-8cbb-4aad-a2bd-c4cb90a95f39", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball11: ball11 is at room2, ball11 is located at room1 and ball11 is present at room3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b71fc656-ff2d-412c-a5ba-95e123c144e4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is not located at room1, ball1 is not present at room2, ball10 is not located at room1, ball10 is not located at room2, ball11 is not present at room2 and ball11 is not present at room3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "97fbbf6e-39d4-4e04-9560-ec4859140a39", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball7: ball7 is not located at room1, ball7 is not located at room3 and ball7 is not present at room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "561df54b-850a-4c5e-ad11-53fee786eaec", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that the following properties of the state are correct for ball1: ball1 is not located at room1, ball1 is not located at room2, ball1 is present at room3, ball10 is located at room3, ball10 is not present at room1, ball10 is not present at room2, ball11 is at room1, ball11 is not located at room3 and ball11 is not present at room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2b878aa7-6c7d-4a37-b0fa-dc16308de8cf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "iter_1_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that the following properties of the state are correct for room2: ball1 is present at room2, ball10 is located at room2, ball11 is not at room2, ball2 is not located at room2, ball3 is not at room2, ball4 is not located at room2, ball5 is at room2, ball6 is at room2, ball7 is located at room2, ball8 is at room2, ball9 is not located at room2 and robot1 is not at room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "54b24307-2bfa-4045-b455-b957b3716baf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8160f1a3-8a71-485f-9422-3b2297b3a4cd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "object_tracking", "question_name": "question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for ball10, ball3, ball4, ball7 and ball8. Write None if there are none.", "answer": "object", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball2 is located at room1, ball3 is at room3, ball4 is present at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, rgripper1 of robot1 is free, robot1 is at room2 and robot1's lgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ab94c8a2-5779-4da7-a2de-ef61a52d692d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is carrying ball4?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1130a3d3-a191-4406-89ff-5bdde46a1400", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not carrying ball4?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3c1c194e-f2e6-4f6b-b583-d1685a2ec9bb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is it True or False that ball1 is not being carried by robot1's lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "143cb987-a47c-4b29-9e13-b0431e33379b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "18b0037a-8a6b-4f3b-b921-4224881a78a7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that robot1's rgripper1 is not available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b5e8c802-7979-40ab-9a1b-428393aee8ed", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "676332e9-cae4-42bf-955e-9364f87bac2f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that ball3 is present at room3?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "20d727c8-d333-49c5-82ad-d78aa4639443", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball9 is not at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0e0c76bd-2678-48bd-a9c4-98e27e660e65", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is it True or False that ball2 is not at room2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "df15d20a-7a51-4f80-bc77-9a61d90314b5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is carrying ball4?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f11d10b2-6f95-419b-9822-653a13e36638", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1, ball1 is being carried by robot1's rgripper1, ball10 is being carried by robot1's lgripper1, ball10 is being carried by robot1's rgripper1, ball11 is being carried by robot1's lgripper1, ball3 is being carried by robot1's rgripper1, ball6 is being carried by robot1's lgripper1, ball6 is being carried by robot1's rgripper1, ball7 is being carried by robot1's lgripper1, ball8 is being carried by robot1's rgripper1, ball9 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball8, rgripper1 of robot1 is carrying ball7, robot1 is carrying ball11 with rgripper1, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball5 with rgripper1 and robot1 is carrying ball9 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4381f571-9655-410c-92f1-ee6765beaaa2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball3, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball5 with rgripper1 and robot1 is not carrying ball6 with lgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "eb0059fa-1e0d-49ea-a553-78466ad62821", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1 and robot1 is not carrying ball7 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dd0bf3fb-9b04-4cdb-a2c0-3e14f80d7347", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball8, robot1 is carrying ball4 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with rgripper1 and robot1 is not carrying ball9 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4117b5d8-0f59-43fa-b651-3c8e28b88955", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1, ball10 is not being carried by robot1's lgripper1, ball11 is being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball8, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is carrying ball10, rgripper1 of robot1 is carrying ball9, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is carrying ball1 with rgripper1, robot1 is carrying ball11 with rgripper1, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball6 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5c143d90-cd5f-43ff-8180-0db44449cab3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's rgripper1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "10e529dc-8af0-4166-ae60-07bd110dd927", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is free and robot1's rgripper1 is available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "95fe737e-9bcc-4bb9-aeb8-17500736e281", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "149f9b22-e38b-4120-873e-117968c606c4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not free and robot1's rgripper1 is not free?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "be209a3e-ee8c-4f40-a4f9-73e58cd796fb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and rgripper1 of robot1 is free?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9fd480ce-430b-4daf-b1c8-08ff803a9948", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not free and robot1's rgripper1 is not available?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "517ce31e-4c59-4b4d-8694-197a8c3628bf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball10 is located at room3, ball11 is located at room3, ball2 is present at room1, ball3 is located at room3, ball5 is located at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2 and robot1 is located at room2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6f48f322-6745-45fc-9f27-87ed282babe0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room3, ball1 is located at room2, ball10 is at room1, ball10 is at room2, ball10 is located at room3, ball11 is at room1, ball11 is located at room2, ball11 is located at room3, ball2 is located at room1, ball2 is located at room3, ball2 is present at room2, ball3 is at room1, ball3 is located at room2, ball3 is located at room3, ball4 is at room2, ball4 is at room3, ball4 is present at room1, ball5 is at room3, ball5 is located at room1, ball5 is located at room2, ball6 is at room2, ball6 is at room3, ball6 is present at room1, ball7 is at room1, ball7 is at room2, ball7 is located at room3, ball8 is at room2, ball8 is located at room1, ball8 is located at room3, ball9 is at room1, ball9 is located at room3, ball9 is present at room2, robot1 is at room3, robot1 is located at room1 and robot1 is located at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "13149412-3bcd-479a-aca1-21e208ae35c9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room2, ball10 is not at room1, ball10 is not located at room2, ball11 is not at room1, ball11 is not located at room2, ball2 is not at room3, ball2 is not present at room2, ball3 is not present at room1, ball3 is not present at room2, ball4 is not at room2, ball4 is not present at room1, ball4 is not present at room3, ball5 is not at room3, ball5 is not located at room1, ball6 is not present at room2, ball6 is not present at room3, ball7 is not at room1, ball7 is not present at room3, ball8 is not present at room2, ball8 is not present at room3, ball9 is not located at room1, ball9 is not located at room3, robot1 is not at room3 and robot1 is not located at room1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8f0e96be-a812-409b-bc91-1af80afbedcb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not located at room2, ball1 is not located at room3, ball1 is not present at room1, ball10 is not at room1, ball10 is not at room3, ball10 is not located at room2, ball11 is not at room1, ball11 is not at room2, ball11 is not located at room3, ball2 is not at room1, ball2 is not at room3, ball2 is not located at room2, ball3 is not at room3, ball3 is not present at room1, ball3 is not present at room2, ball4 is not located at room1, ball4 is not located at room2, ball4 is not present at room3, ball5 is not located at room2, ball5 is not located at room3, ball5 is not present at room1, ball6 is not located at room3, ball6 is not present at room1, ball6 is not present at room2, ball7 is not at room2, ball7 is not located at room1, ball7 is not located at room3, ball8 is not located at room1, ball8 is not located at room3, ball8 is not present at room2, ball9 is not at room1, ball9 is not located at room3, ball9 is not present at room2, robot1 is not at room3, robot1 is not located at room1 and robot1 is not located at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1e033788-ddfd-499f-a73e-ceba27b0503a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is not located at room2, ball1 is not present at room1, ball10 is at room3, ball10 is not located at room1, ball10 is not present at room2, ball11 is located at room3, ball11 is not at room2, ball11 is not located at room1, ball2 is not at room2, ball2 is not located at room3, ball2 is present at room1, ball3 is not at room2, ball3 is not present at room1, ball3 is present at room3, ball4 is not located at room1, ball4 is not located at room3, ball4 is not present at room2, ball5 is at room2, ball5 is not present at room1, ball5 is not present at room3, ball6 is located at room1, ball6 is not located at room2, ball6 is not present at room3, ball7 is not at room3, ball7 is not present at room1, ball7 is present at room2, ball8 is at room1, ball8 is not located at room2, ball8 is not located at room3, ball9 is at room2, ball9 is not located at room1, ball9 is not present at room3, robot1 is at room2, robot1 is not at room1 and robot1 is not located at room3?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b37abb28-1170-4c50-9d61-7e37e36c0f25", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is not located at room3, ball1 is not present at room2, ball10 is at room2, ball10 is not at room1, ball10 is not located at room3, ball11 is located at room3, ball11 is not at room1, ball11 is not present at room2, ball2 is located at room1, ball2 is not located at room2, ball2 is not present at room3, ball3 is located at room2, ball3 is not at room1, ball3 is not present at room3, ball4 is at room1, ball4 is at room2, ball4 is not located at room3, ball5 is not at room2, ball5 is not present at room1, ball5 is present at room3, ball6 is at room2, ball6 is located at room3, ball6 is present at room1, ball7 is not at room1, ball7 is not present at room3, ball7 is present at room2, ball8 is at room2, ball8 is located at room3, ball8 is not at room1, ball9 is at room3, ball9 is not located at room1, ball9 is not present at room2, robot1 is at room2, robot1 is not present in room1 and robot1 is present in room3?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "600f143d-eeee-4bd6-bb71-3b6f4885de30", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball3? Write None if there are none", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "800d6738-5a4a-4391-aff5-d30fa0db0c4b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball2? Write None if there are none", "answer": "ball2 is not being carried by robot1's lgripper1 and robot1 is not carrying ball2 with rgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2d1a8431-a616-4018-b7b9-2a1fe89b40d3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state,. What are the base properties of the state for ball3? Write None if there are none", "answer": "ball3 is not being carried by robot1's lgripper1 and robot1 is not carrying ball3 with rgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3f7de70a-a58d-4133-b967-af236feb0a42", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "rgripper1 of robot1 is free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b2025633-8fc3-45e6-a5cc-41dceb611364", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "robot1's lgripper1 is not free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0d46ea5e-a0dd-42f9-971d-333576026b3b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "lgripper1 of robot1 is not free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1f03e17c-7b7b-4dde-99bb-87b7ca4ca993", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for robot1? Write None if there are none", "answer": "robot1 is present in room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7fd631d3-7d30-4598-89a6-9b0445218dd2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball3? Write None if there are none", "answer": "ball3 is not present at room1 and ball3 is not present at room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2585c7b0-c069-4650-82f8-605812c13694", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state,. What are the self constraint properties of the state for ball7? Write None if there are none", "answer": "ball7 is at room2, ball7 is not located at room3 and ball7 is not present at room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9d300d9c-c0e7-4a07-b709-1b368d3875f3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball2 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "74bb7e46-b927-499d-8d81-ec8a22ab4873", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not carrying ball2?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "20e2e4b9-4d3c-4717-b113-cc17a1913e1e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not carrying ball6?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "90ac7689-83d2-440f-8df7-ed08327f57ba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f97df2eb-fe15-42fc-aa90-8a4732658461", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is present at room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "676bb651-53ca-4077-b737-e272d877970b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is it True or False that ball1 is not present at room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1d68a504-586e-46cc-9ba3-b27729d1dcb6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is it True or False that ball7 is not at room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "df8f95fc-f805-4a3d-bcfc-70b9cbdb83b0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is being carried by robot1's lgripper1 and ball7 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ce020da6-e07b-49cc-9482-d11f095f474e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is being carried by robot1's lgripper1, ball10 is being carried by robot1's rgripper1, ball11 is being carried by robot1's rgripper1, ball4 is being carried by robot1's rgripper1, ball8 is being carried by robot1's lgripper1, ball8 is being carried by robot1's rgripper1, ball9 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is carrying ball5, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is carrying ball5, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball7, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball7 with lgripper1 and robot1 is carrying ball9 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "139857b8-10c1-438e-8d61-4ff3f5ce472d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball10 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1 and robot1 is not carrying ball6 with lgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dd5db99c-9573-4212-b6cb-0e57c894d440", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7361e9f6-f200-45fe-82ea-a169b426eef5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball8, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball7 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball9 with rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "da0f10f8-49ba-4d6f-ac9c-a40d62e45d0b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1, ball10 is being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball2 is being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball9 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is carrying ball6, lgripper1 of robot1 is carrying ball8, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is carrying ball4, rgripper1 of robot1 is carrying ball8, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball9, robot1 is carrying ball5 with rgripper1, robot1 is not carrying ball10 with rgripper1 and robot1 is not carrying ball5 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c6d86fae-3e50-4c10-9277-2a67056f50f5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is not available and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1a30a89d-b412-45a8-87aa-2a8bee69242a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "255a43e4-06cf-41ae-ac95-fac4c27d4f08", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is not free and robot1's lgripper1 is free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "83da25fe-3e23-441e-98a9-bf07bbbedca4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball10 is located at room3, ball11 is at room3, ball3 is at room3, ball4 is located at room1, ball5 is at room2, ball6 is present at room1, ball8 is at room1, ball9 is present at room2 and robot1 is present in room1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f667171f-b97c-4558-a78b-49d38a98eba0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room3, ball1 is located at room2, ball10 is at room1, ball10 is at room2, ball10 is at room3, ball11 is located at room2, ball11 is located at room3, ball11 is present at room1, ball2 is at room2, ball2 is present at room1, ball2 is present at room3, ball3 is located at room1, ball3 is located at room2, ball3 is located at room3, ball4 is at room3, ball4 is located at room1, ball4 is present at room2, ball5 is at room1, ball5 is located at room2, ball5 is present at room3, ball6 is located at room1, ball6 is located at room2, ball6 is present at room3, ball7 is at room1, ball7 is at room2, ball7 is at room3, ball8 is at room3, ball8 is located at room1, ball8 is present at room2, ball9 is at room1, ball9 is at room3, ball9 is located at room2, robot1 is at room1, robot1 is located at room2 and robot1 is present in room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e85d5c9f-2d74-4aff-9e5c-3892c96e9be4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not located at room1, ball1 is not present at room2, ball10 is not at room2, ball10 is not present at room1, ball11 is not at room1, ball11 is not at room2, ball2 is not located at room2, ball2 is not located at room3, ball2 is not present at room1, ball3 is not at room1, ball3 is not at room2, ball4 is not at room2, ball4 is not present at room3, ball5 is not located at room1, ball5 is not located at room3, ball6 is not at room2, ball6 is not at room3, ball7 is not at room1, ball7 is not at room3, ball7 is not located at room2, ball8 is not at room2, ball8 is not located at room3, ball9 is not located at room1, ball9 is not present at room3, robot1 is not at room3 and robot1 is not located at room2?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "64ef43fc-b02a-4c30-b69c-3639808e196b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, ball1 is not located at room2, ball1 is not present at room1, ball10 is not at room1, ball10 is not at room3, ball10 is not present at room2, ball11 is not at room1, ball11 is not at room2, ball11 is not present at room3, ball2 is not at room3, ball2 is not located at room1, ball2 is not located at room2, ball3 is not at room2, ball3 is not at room3, ball3 is not located at room1, ball4 is not at room2, ball4 is not located at room3, ball4 is not present at room1, ball5 is not located at room1, ball5 is not located at room2, ball5 is not located at room3, ball6 is not at room1, ball6 is not at room2, ball6 is not at room3, ball7 is not located at room1, ball7 is not located at room2, ball7 is not located at room3, ball8 is not located at room1, ball8 is not present at room2, ball8 is not present at room3, ball9 is not at room3, ball9 is not present at room1, ball9 is not present at room2, robot1 is not located at room1, robot1 is not present in room2 and robot1 is not present in room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ac4da5aa-372c-45dc-9687-7ab9aa3e4f91", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room3, ball1 is not at room1, ball1 is not present at room2, ball10 is not located at room1, ball10 is not present at room2, ball10 is present at room3, ball11 is located at room3, ball11 is not present at room1, ball11 is not present at room2, ball2 is not at room2, ball2 is not at room3, ball2 is not located at room1, ball3 is not at room1, ball3 is not present at room2, ball3 is present at room3, ball4 is at room1, ball4 is not located at room2, ball4 is not located at room3, ball5 is not present at room1, ball5 is not present at room3, ball5 is present at room2, ball6 is at room1, ball6 is not at room3, ball6 is not located at room2, ball7 is not at room2, ball7 is not located at room1, ball7 is not located at room3, ball8 is at room1, ball8 is not located at room2, ball8 is not located at room3, ball9 is at room2, ball9 is not at room1, ball9 is not at room3, robot1 is not located at room2, robot1 is not present in room3 and robot1 is present in room1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f67eaefe-d98a-4de3-90a9-471788019caf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is not at room2, ball1 is not located at room1, ball10 is located at room1, ball10 is located at room2, ball10 is not at room3, ball11 is located at room3, ball11 is not at room1, ball11 is not present at room2, ball2 is at room2, ball2 is not located at room3, ball2 is present at room1, ball3 is located at room2, ball3 is not present at room1, ball3 is not present at room3, ball4 is not located at room2, ball4 is not present at room1, ball4 is not present at room3, ball5 is at room2, ball5 is not located at room3, ball5 is present at room1, ball6 is at room2, ball6 is not at room1, ball6 is present at room3, ball7 is located at room1, ball7 is not at room3, ball7 is present at room2, ball8 is not located at room1, ball8 is not present at room2, ball8 is not present at room3, ball9 is at room1, ball9 is not located at room3, ball9 is present at room2, robot1 is at room2, robot1 is located at room1 and robot1 is present in room3?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "70e28e8a-27d1-4c73-9261-d1abc37aa066", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball4? Write None if there are none", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ba71581e-ff28-4c7b-9a5a-4ba726f7d334", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state,. What are the base properties of the state for ball11? Write None if there are none", "answer": "ball11 is not being carried by robot1's lgripper1 and ball11 is not being carried by robot1's rgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "58bf37d2-ee1c-49fe-ba6d-d78ee7041041", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state,. What are the base properties of the state for ball10? Write None if there are none", "answer": "lgripper1 of robot1 is not carrying ball10 and rgripper1 of robot1 is not carrying ball10", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6f894cd1-0183-48c9-8e9b-3648c8766bc1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4731ae30-9004-4fdb-871a-d9477ecfd5fa", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "robot1's lgripper1 is not free", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "77a3ae4f-bcbb-4c20-8ed1-89d1e5b052a0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "robot1's lgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fc47905c-58f9-474c-a0c3-0a089e2abeb5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state,. What are the self constraint properties of the state for robot1? Write None if there are none", "answer": "robot1 is located at room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ce29abda-abc0-47c0-83ca-789e03a45338", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball6? Write None if there are none", "answer": "ball6 is not located at room2 and ball6 is not located at room3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8d5af312-9150-4778-acb0-a7c8f28f8d8f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball4? Write None if there are none", "answer": "ball4 is located at room1, ball4 is not at room2 and ball4 is not present at room3", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "275c97d4-a912-4dc2-a569-d4da1e6ad025", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is carrying ball11?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "bd825379-9564-4c5f-b0e4-215fb83bfd9a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is it True or False that robot1 is not carrying ball11 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "66c01888-3492-4a3d-8803-2d731dea9ed3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is it True or False that ball9 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "21937c46-0036-4310-9572-ca6c29b15d7b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is not free?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "80cfb8ee-c844-45b1-92d8-7c6d3a994bda", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is present in room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "04dd2f40-e1ee-41d7-885a-ef8ebba05765", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is it True or False that ball10 is not at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "791cdedb-4b00-4b87-bac1-312db2f3f0c4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is it True or False that ball6 is not located at room1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "66c7ec50-65c6-485e-a906-bbfcc974a19f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, are all of the following properties of the state True or False: ball11 is being carried by robot1's lgripper1 and ball6 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1e97bc46-0059-43a7-8c39-6b966e6628c0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is being carried by robot1's rgripper1, ball11 is being carried by robot1's lgripper1, ball2 is being carried by robot1's rgripper1, ball3 is being carried by robot1's rgripper1, ball5 is being carried by robot1's rgripper1, ball6 is being carried by robot1's lgripper1, ball8 is being carried by robot1's lgripper1, ball9 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball4, rgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is carrying ball8, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball10 with lgripper1, robot1 is carrying ball11 with rgripper1, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball6 with rgripper1 and robot1 is carrying ball9 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "20b622aa-a09e-4a2f-bb6d-dfd807c71f2e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball9 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0e72fb95-6acc-4864-ad59-3bfc4d43ee6b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1 and robot1 is not carrying ball9 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "08dca676-d57b-4bb9-b308-5a3b644ead7a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball6 with rgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball9 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5a28873a-9db6-423f-a029-59de73afbd57", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties of the state True or False: ball2 is being carried by robot1's lgripper1, ball3 is being carried by robot1's lgripper1, ball6 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball10, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is carrying ball10 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball5 with lgripper1, robot1 is carrying ball9 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1 and robot1 is not carrying ball8 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4d60ae63-9fc4-4c8b-ace8-9ad930d60778", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is not free and robot1's lgripper1 is not available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6c3008a5-2274-486e-b276-be511eb72cbf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and rgripper1 of robot1 is not free?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6c2df768-4671-4c9b-84bc-880a8ccdb8b4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and rgripper1 of robot1 is free?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "faba0258-43f5-4f18-be2b-92d5658443b8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room3, ball10 is present at room3, ball2 is present at room3, ball3 is at room3, ball4 is located at room1, ball5 is at room2, ball7 is present at room1, ball8 is at room1, ball9 is located at room2 and robot1 is at room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7205de6b-e50c-424f-bbc0-a6b41bd0e3a8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is present at room1, ball1 is present at room2, ball10 is located at room1, ball10 is located at room3, ball10 is present at room2, ball11 is at room2, ball11 is located at room1, ball11 is present at room3, ball2 is at room2, ball2 is at room3, ball2 is located at room1, ball3 is at room2, ball3 is present at room1, ball3 is present at room3, ball4 is at room1, ball4 is located at room2, ball4 is present at room3, ball5 is at room3, ball5 is present at room1, ball5 is present at room2, ball6 is located at room1, ball6 is present at room2, ball6 is present at room3, ball7 is at room2, ball7 is located at room1, ball7 is located at room3, ball8 is located at room1, ball8 is located at room2, ball8 is present at room3, ball9 is at room3, ball9 is located at room1, ball9 is located at room2, robot1 is present in room1, robot1 is present in room2 and robot1 is present in room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7539c04e-6f51-48f6-9e33-6ac5da95eb3e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not located at room1, ball1 is not present at room2, ball10 is not located at room2, ball10 is not present at room1, ball11 is not at room2, ball11 is not located at room1, ball11 is not present at room3, ball2 is not at room1, ball2 is not at room2, ball3 is not present at room1, ball3 is not present at room2, ball4 is not located at room2, ball4 is not present at room3, ball5 is not at room1, ball5 is not located at room3, ball6 is not located at room2, ball6 is not present at room1, ball6 is not present at room3, ball7 is not located at room3, ball7 is not present at room2, ball8 is not at room3, ball8 is not located at room2, ball9 is not at room1, ball9 is not present at room3, robot1 is not present in room1 and robot1 is not present in room2?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9173dcbf-dd8e-4670-99d4-515a1b880bec", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room2, ball1 is not located at room3, ball10 is not at room1, ball10 is not located at room2, ball10 is not located at room3, ball11 is not at room3, ball11 is not located at room2, ball11 is not present at room1, ball2 is not at room2, ball2 is not at room3, ball2 is not located at room1, ball3 is not located at room2, ball3 is not located at room3, ball3 is not present at room1, ball4 is not at room1, ball4 is not located at room2, ball4 is not located at room3, ball5 is not at room3, ball5 is not located at room1, ball5 is not located at room2, ball6 is not at room1, ball6 is not located at room2, ball6 is not located at room3, ball7 is not at room3, ball7 is not located at room1, ball7 is not located at room2, ball8 is not present at room1, ball8 is not present at room2, ball8 is not present at room3, ball9 is not at room3, ball9 is not present at room1, ball9 is not present at room2, robot1 is not at room1, robot1 is not located at room2 and robot1 is not located at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "208234bc-4457-4856-92da-999a14bd7dcf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room3, ball1 is not at room2, ball1 is not located at room1, ball10 is at room3, ball10 is not at room1, ball10 is not at room2, ball11 is not at room1, ball11 is not located at room3, ball11 is not present at room2, ball2 is at room3, ball2 is not at room2, ball2 is not present at room1, ball3 is located at room3, ball3 is not at room1, ball3 is not present at room2, ball4 is not at room3, ball4 is not present at room2, ball4 is present at room1, ball5 is at room2, ball5 is not at room1, ball5 is not at room3, ball6 is not at room2, ball6 is not located at room1, ball6 is not present at room3, ball7 is located at room1, ball7 is not located at room3, ball7 is not present at room2, ball8 is located at room1, ball8 is not located at room2, ball8 is not present at room3, ball9 is located at room2, ball9 is not at room3, ball9 is not located at room1, robot1 is not present in room1, robot1 is not present in room2 and robot1 is present in room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9421cec5-76bb-4c94-b453-8e1221d60a56", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not located at room1, ball1 is not located at room3, ball1 is not present at room2, ball10 is located at room1, ball10 is located at room2, ball10 is present at room3, ball11 is not present at room3, ball11 is present at room1, ball11 is present at room2, ball2 is located at room2, ball2 is located at room3, ball2 is not at room1, ball3 is at room3, ball3 is not located at room1, ball3 is not located at room2, ball4 is at room2, ball4 is not located at room1, ball4 is not present at room3, ball5 is not located at room1, ball5 is not present at room2, ball5 is present at room3, ball6 is located at room1, ball6 is not present at room2, ball6 is present at room3, ball7 is not at room2, ball7 is not located at room1, ball7 is not present at room3, ball8 is at room2, ball8 is not present at room1, ball8 is present at room3, ball9 is at room2, ball9 is located at room3, ball9 is not at room1, robot1 is at room1, robot1 is located at room3 and robot1 is not at room2?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b0391b17-1efb-4968-8e1c-0d45c1ece3ba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball8? Write None if there are none", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "36855ca0-9f31-46b4-a887-3a1878d7a25d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state,. What are the base properties of the state for robot1? Write None if there are none", "answer": "ball1 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball8 with rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0f40ca78-0b73-4d81-8602-23c64e5b991f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state,. What are the base properties of the state for ball4? Write None if there are none", "answer": "ball4 is not being carried by robot1's lgripper1 and rgripper1 of robot1 is not carrying ball4", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a9a025b1-05b5-4ed6-9d43-159f013c4429", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f0ca5282-b900-4eab-b1bb-bbb414fdae83", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "lgripper1 of robot1 is not free and rgripper1 of robot1 is not free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3b50a5f5-e8ea-47bd-b5d5-00ef204b3bcc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "lgripper1 of robot1 is not free and robot1's rgripper1 is not free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1cb78743-9531-44ec-9534-dbee4088eb65", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state,. What are the self constraint properties of the state for ball7? Write None if there are none", "answer": "ball7 is present at room1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a5debaf8-6995-49ea-973f-e56d0c95dd5b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state,. What are the self constraint properties of the state for ball1? Write None if there are none", "answer": "ball1 is not at room1, ball1 is not located at room2, ball10 is not present at room1, ball10 is not present at room2, ball11 is not located at room1, ball11 is not located at room3 and ball11 is not present at room2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cce981fe-70e0-4178-940d-f618ac0e8d9a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball7? Write None if there are none", "answer": "ball7 is located at room1, ball7 is not located at room3 and ball7 is not present at room2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0eee2e96-ed35-4e1a-ae90-5ef5d349e37c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is carrying ball8?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1358a6ed-3ce3-476d-b55a-2e16004e449a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball8 is not being carried by robot1's lgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ff9f3560-f2d1-4f88-afc1-de99710297c1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "da3dc16f-f238-4772-b948-0f252c73d0ad", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "416811a7-433e-490b-a0c0-e322045894f6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is it True or False that ball4 is present at room1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "edd28c20-5885-4b76-97bc-b50a84095ada", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is not at room3?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "81fcf09f-f6f1-4f0d-ad6f-6b8eabfe44a5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball1 is not located at room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2cff95b4-3e47-45c9-8ed5-c5d90476b75f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is carrying ball3 and robot1 is carrying ball8 with lgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "be6adcae-02e5-4319-a0d9-29f0a3cd86f7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is being carried by robot1's lgripper1, ball2 is being carried by robot1's lgripper1, ball2 is being carried by robot1's rgripper1, ball3 is being carried by robot1's rgripper1, ball5 is being carried by robot1's lgripper1, ball6 is being carried by robot1's lgripper1, ball8 is being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball11, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball4, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball8, robot1 is carrying ball10 with rgripper1, robot1 is carrying ball11 with rgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball5 with rgripper1, robot1 is carrying ball7 with lgripper1, robot1 is carrying ball7 with rgripper1, robot1 is carrying ball9 with lgripper1 and robot1 is carrying ball9 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e4e684e7-c6db-412c-88f0-2bb97b0e5dba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with lgripper1 and robot1 is not carrying ball7 with lgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9f22897d-d028-4c0c-ae7e-a10be4656ac7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball8 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1c92f38c-5f0f-45c6-b5ca-30c2b8570da4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball8 is being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with rgripper1 and robot1 is not carrying ball8 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f013125c-d644-4128-a9e4-30da1a8bfe5d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's rgripper1, ball3 is being carried by robot1's rgripper1, ball6 is being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is carrying ball4, rgripper1 of robot1 is carrying ball5, rgripper1 of robot1 is not carrying ball8, robot1 is carrying ball10 with lgripper1, robot1 is carrying ball10 with rgripper1, robot1 is carrying ball5 with lgripper1, robot1 is carrying ball7 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "83dd1b4a-5b18-469a-b112-9e9d38432808", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and robot1's rgripper1 is not free?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "39251544-9136-4570-81c1-f23ae7eacb71", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and robot1's rgripper1 is not available?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2f79747e-fdb6-4cd9-ae1c-78bbcc9973cd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and rgripper1 of robot1 is free?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5c99945c-7428-43c6-bc2b-81beb8497db9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is located at room3, ball10 is present at room3, ball11 is at room1, ball2 is present at room3, ball4 is located at room1, ball5 is at room2, ball6 is present at room3, ball7 is located at room1, ball9 is at room2 and robot1 is at room1?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8dab4285-ec5d-446b-97f3-e953bd3a6ec3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room2, ball1 is present at room3, ball10 is at room2, ball10 is located at room3, ball10 is present at room1, ball11 is located at room2, ball11 is present at room1, ball11 is present at room3, ball2 is at room2, ball2 is located at room1, ball2 is located at room3, ball3 is present at room1, ball3 is present at room2, ball3 is present at room3, ball4 is at room3, ball4 is present at room1, ball4 is present at room2, ball5 is at room2, ball5 is located at room3, ball5 is present at room1, ball6 is at room3, ball6 is located at room1, ball6 is present at room2, ball7 is at room2, ball7 is located at room1, ball7 is present at room3, ball8 is located at room2, ball8 is present at room1, ball8 is present at room3, ball9 is located at room1, ball9 is located at room2, ball9 is located at room3, robot1 is at room1, robot1 is present in room2 and robot1 is present in room3?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5f500d1d-4992-491e-a1e6-3f254619e612", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not present at room2, ball10 is not at room2, ball10 is not located at room1, ball11 is not at room2, ball11 is not at room3, ball2 is not located at room1, ball2 is not present at room2, ball3 is not at room3, ball3 is not located at room2, ball3 is not present at room1, ball4 is not located at room2, ball4 is not present at room3, ball5 is not located at room1, ball5 is not located at room3, ball6 is not at room1, ball6 is not at room2, ball7 is not at room3, ball7 is not present at room2, ball8 is not at room1, ball8 is not located at room2, ball8 is not present at room3, ball9 is not at room1, ball9 is not at room3, robot1 is not at room3 and robot1 is not present in room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5d4447d5-3a5a-481a-ae46-6c5a1f4ff516", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not located at room2, ball1 is not present at room3, ball10 is not located at room1, ball10 is not located at room2, ball10 is not located at room3, ball11 is not at room2, ball11 is not present at room1, ball11 is not present at room3, ball2 is not at room1, ball2 is not at room2, ball2 is not present at room3, ball3 is not located at room2, ball3 is not located at room3, ball3 is not present at room1, ball4 is not located at room1, ball4 is not located at room3, ball4 is not present at room2, ball5 is not at room2, ball5 is not located at room1, ball5 is not present at room3, ball6 is not at room1, ball6 is not located at room2, ball6 is not present at room3, ball7 is not at room2, ball7 is not located at room1, ball7 is not located at room3, ball8 is not located at room1, ball8 is not present at room2, ball8 is not present at room3, ball9 is not present at room1, ball9 is not present at room2, ball9 is not present at room3, robot1 is not at room3, robot1 is not present in room1 and robot1 is not present in room2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b4e13215-fe5b-430d-b841-c248b4045c61", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room3, ball1 is not at room1, ball1 is not present at room2, ball10 is located at room3, ball10 is not located at room2, ball10 is not present at room1, ball11 is at room1, ball11 is not at room3, ball11 is not located at room2, ball2 is at room3, ball2 is not located at room2, ball2 is not present at room1, ball3 is not at room3, ball3 is not located at room1, ball3 is not present at room2, ball4 is not at room2, ball4 is not located at room3, ball4 is present at room1, ball5 is at room2, ball5 is not at room3, ball5 is not located at room1, ball6 is not located at room1, ball6 is not located at room2, ball6 is present at room3, ball7 is located at room1, ball7 is not present at room2, ball7 is not present at room3, ball8 is not at room1, ball8 is not at room2, ball8 is not located at room3, ball9 is located at room2, ball9 is not at room1, ball9 is not located at room3, robot1 is at room1, robot1 is not at room2 and robot1 is not located at room3?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "47f902db-3c03-4e63-b90d-752a3d5b737e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room2, ball1 is not at room3, ball1 is not present at room1, ball10 is located at room2, ball10 is not at room3, ball10 is not present at room1, ball11 is not located at room1, ball11 is not located at room2, ball11 is not present at room3, ball2 is at room2, ball2 is located at room1, ball2 is not located at room3, ball3 is at room1, ball3 is not present at room2, ball3 is not present at room3, ball4 is at room3, ball4 is not at room2, ball4 is present at room1, ball5 is located at room1, ball5 is not located at room2, ball5 is not present at room3, ball6 is not at room1, ball6 is not at room2, ball6 is not at room3, ball7 is at room1, ball7 is at room2, ball7 is located at room3, ball8 is located at room1, ball8 is not located at room3, ball8 is present at room2, ball9 is located at room3, ball9 is not present at room1, ball9 is not present at room2, robot1 is at room1, robot1 is not at room2 and robot1 is not present in room3?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9d3c6d90-99ef-4faa-938c-923adbf6e9b6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for lgripper1? Write None if there are none", "answer": "ball8 is being carried by robot1's lgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "87655c66-9704-4c2e-8d91-014f50ebc800", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state,. What are the base properties of the state for lgripper1? Write None if there are none", "answer": "ball11 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1 and robot1 is not carrying ball4 with lgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "99be4d1c-06f3-4d23-9cd1-9c6dba264127", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state,. What are the base properties of the state for ball3? Write None if there are none", "answer": "ball3 is being carried by robot1's rgripper1 and ball3 is not being carried by robot1's lgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "678d1099-9c8c-46fc-a125-7cbd6289671a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7de2e5fb-6677-4cb5-a86f-663fe877734a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "lgripper1 of robot1 is not free and robot1's rgripper1 is not free", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "48012140-86ba-4f7a-a367-a5af81bfea94", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state,. What are the derived properties of the state for robot1? Write None if there are none", "answer": "rgripper1 of robot1 is not free and robot1's lgripper1 is not free", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ac2a9c70-b5b7-4851-af2e-8e1c851109e9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state,. What are the self constraint properties of the state for ball3? Write None if there are none", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "444e1058-e144-4176-be98-df5ad1d4a915", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state,. What are the self constraint properties of the state for room1? Write None if there are none", "answer": "ball1 is not located at room1, ball10 is not present at room1, ball2 is not located at room1, ball3 is not located at room1, ball5 is not present at room1, ball6 is not at room1, ball8 is not at room1 and ball9 is not at room1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f4f83536-e194-41cc-9eb7-a07582ccf1e0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball8? Write None if there are none", "answer": "ball8 is not at room2, ball8 is not located at room3 and ball8 is not present at room1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b59addd6-b809-4dbf-9aa8-2583a082cfdf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is carrying ball9?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "21a7dc49-8005-42ba-8b83-a767d7cc0088", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6a5e1cf9-24db-4415-84cb-f59b4f1aee49", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is not being carried by robot1's lgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4aab3f55-b4d0-4f3d-847a-295e0a107421", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fc9e29fc-2127-42ee-8175-9783874853cf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that robot1's rgripper1 is not available?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "eb44edc5-7233-445e-9430-9f75e3b3746f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that robot1's lgripper1 is not available?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0e067a87-530d-4ec0-83e1-252116d07bac", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is it True or False that ball5 is at room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5285b03a-2b51-4794-8c48-51dd0bd600c7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is not present at room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5f6bf360-8909-47f4-81c2-6cef3f3837e6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is it True or False that ball4 is not present at room3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f1cd1bb5-b6cd-4401-a6c7-5db8bf0b50da", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball9 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "17cb4fa0-f16e-44c9-ba39-0458874de2eb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's lgripper1, ball1 is being carried by robot1's rgripper1, ball10 is being carried by robot1's rgripper1, ball4 is being carried by robot1's lgripper1, ball5 is being carried by robot1's lgripper1, ball5 is being carried by robot1's rgripper1, ball6 is being carried by robot1's rgripper1, ball8 is being carried by robot1's lgripper1, ball9 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball10, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is carrying ball11, rgripper1 of robot1 is carrying ball2, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is carrying ball4, robot1 is carrying ball11 with lgripper1, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball7 with rgripper1, robot1 is carrying ball8 with rgripper1 and robot1 is carrying ball9 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "57220634-995e-4d98-996b-2c46bfa28017", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not being carried by robot1's rgripper1, ball11 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8c0629c4-aff1-47ef-bdf1-925ecf2f38cf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's rgripper1, ball10 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with rgripper1 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9d4956d9-8468-4cd0-b3f3-8e21733c5b1d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_5", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's rgripper1, ball6 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball9, robot1 is carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with lgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6556c333-67fb-46f1-97c3-88f2f4a725d7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_6", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is being carried by robot1's rgripper1, ball1 is not being carried by robot1's lgripper1, ball10 is being carried by robot1's rgripper1, ball2 is being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball8 is not being carried by robot1's lgripper1, ball9 is being carried by robot1's rgripper1, lgripper1 of robot1 is carrying ball9, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is carrying ball11, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball8, robot1 is carrying ball10 with lgripper1, robot1 is carrying ball11 with lgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball7 with rgripper1, robot1 is not carrying ball4 with rgripper1 and robot1 is not carrying ball5 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "18ad5950-4913-46c9-9c6c-ae2e466a7a2f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "eea844c6-d131-4276-860c-c0d0eccd64dd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: robot1's lgripper1 is free and robot1's rgripper1 is available?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "44956975-3f74-4961-8f87-856762ba3032", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_9", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "011ab935-b400-4f9a-bbbb-d2851cccfeaf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_10", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and robot1's rgripper1 is not free?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a0eaf1e4-2e01-48de-bfc2-7eb72a87090b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_11", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: lgripper1 of robot1 is not free and robot1's rgripper1 is available?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0dfe3f27-9a08-435d-94fa-eb15fb7748a5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_12", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is not free and robot1's lgripper1 is not free?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4b9d1775-0ad3-4b6e-8707-be9793bd59ce", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_13", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is present at room3, ball10 is located at room3, ball11 is located at room1, ball2 is present at room3, ball3 is at room2, ball4 is at room1, ball5 is present at room2, ball6 is at room3, ball7 is located at room1, ball8 is located at room2 and robot1 is at room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1d4d3939-c191-4aa3-a23e-c4c243776581", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_14", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is at room2, ball1 is present at room3, ball10 is located at room3, ball10 is present at room1, ball10 is present at room2, ball11 is located at room1, ball11 is located at room2, ball11 is located at room3, ball2 is at room1, ball2 is at room2, ball2 is at room3, ball3 is at room1, ball3 is located at room2, ball3 is located at room3, ball4 is at room2, ball4 is located at room1, ball4 is present at room3, ball5 is at room3, ball5 is located at room1, ball5 is located at room2, ball6 is at room3, ball6 is located at room1, ball6 is present at room2, ball7 is located at room1, ball7 is present at room2, ball7 is present at room3, ball8 is located at room3, ball8 is present at room1, ball8 is present at room2, ball9 is at room3, ball9 is located at room2, ball9 is present at room1, robot1 is at room1, robot1 is at room3 and robot1 is located at room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "34361110-c7a7-4aff-850a-ecc894c33eca", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_15", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room2, ball10 is not at room1, ball10 is not located at room2, ball11 is not located at room2, ball11 is not present at room3, ball2 is not at room1, ball2 is not present at room2, ball3 is not at room1, ball3 is not at room3, ball4 is not at room3, ball4 is not located at room2, ball5 is not located at room1, ball5 is not present at room3, ball6 is not at room2, ball6 is not located at room1, ball7 is not at room2, ball7 is not present at room3, ball8 is not located at room3, ball8 is not present at room1, ball9 is not at room2, ball9 is not located at room1, ball9 is not present at room3, robot1 is not located at room3 and robot1 is not present in room1?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5df9b690-4cf4-4ae9-9ab2-6a6953df92dd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_16", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not located at room2, ball1 is not present at room3, ball10 is not at room1, ball10 is not at room2, ball10 is not located at room3, ball11 is not at room1, ball11 is not at room2, ball11 is not located at room3, ball2 is not at room1, ball2 is not at room2, ball2 is not present at room3, ball3 is not at room2, ball3 is not located at room1, ball3 is not present at room3, ball4 is not at room2, ball4 is not at room3, ball4 is not located at room1, ball5 is not at room2, ball5 is not located at room1, ball5 is not located at room3, ball6 is not at room1, ball6 is not at room2, ball6 is not at room3, ball7 is not at room3, ball7 is not located at room1, ball7 is not present at room2, ball8 is not at room2, ball8 is not located at room1, ball8 is not present at room3, ball9 is not at room1, ball9 is not at room2, ball9 is not present at room3, robot1 is not at room2, robot1 is not located at room1 and robot1 is not located at room3?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "83c189ea-0d35-4c4b-aca3-8640391241ba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_17", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room1, ball1 is not at room2, ball1 is present at room3, ball10 is located at room3, ball10 is not present at room1, ball10 is not present at room2, ball11 is at room1, ball11 is not at room2, ball11 is not present at room3, ball2 is located at room3, ball2 is not at room2, ball2 is not present at room1, ball3 is located at room2, ball3 is not located at room3, ball3 is not present at room1, ball4 is at room1, ball4 is not at room2, ball4 is not at room3, ball5 is not located at room1, ball5 is not located at room3, ball5 is present at room2, ball6 is not at room1, ball6 is not at room2, ball6 is present at room3, ball7 is at room1, ball7 is not at room2, ball7 is not located at room3, ball8 is located at room2, ball8 is not located at room1, ball8 is not present at room3, ball9 is not at room3, ball9 is not located at room2, ball9 is not present at room1, robot1 is located at room2, robot1 is not located at room1 and robot1 is not present in room3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1876a13b-e3ef-406a-b57a-40a383e95513", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_2_question_18", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is at room1, ball1 is not located at room2, ball1 is not present at room3, ball10 is not at room2, ball10 is present at room1, ball10 is present at room3, ball11 is at room1, ball11 is not present at room2, ball11 is present at room3, ball2 is not at room1, ball2 is not located at room2, ball2 is not located at room3, ball3 is not at room1, ball3 is not at room2, ball3 is not at room3, ball4 is not at room1, ball4 is present at room2, ball4 is present at room3, ball5 is not located at room3, ball5 is present at room1, ball5 is present at room2, ball6 is at room3, ball6 is not located at room1, ball6 is present at room2, ball7 is at room2, ball7 is not at room3, ball7 is present at room1, ball8 is not located at room2, ball8 is present at room1, ball8 is present at room3, ball9 is located at room2, ball9 is not at room3, ball9 is present at room1, robot1 is at room3, robot1 is not at room1 and robot1 is present in room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6516df0e-6131-446e-8dd6-3067f05329bc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_1", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state,. What are the base properties of the state for robot1? Write None if there are none", "answer": "lgripper1 of robot1 is carrying ball9", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a9f03a6b-a04c-4be6-b675-1b8e4a7ca0f8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_2", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state,. What are the base properties of the state for ball1? Write None if there are none", "answer": "ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball1, robot1 is not carrying ball1 with lgripper1 and robot1 is not carrying ball11 with rgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "79befd9c-5a70-4846-8ef5-5108948486d0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_3", "fluent_type": "base_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the base properties of the state for ball6? Write None if there are none", "answer": "ball6 is not being carried by robot1's rgripper1 and lgripper1 of robot1 is not carrying ball6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3791a3be-b012-43d9-ac88-c887008ef60d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_4", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0ccc6f43-ed23-437f-a01b-0ec9e58a63df", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_5", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for lgripper1? Write None if there are none", "answer": "robot1's lgripper1 is not available", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "51e44f97-6e23-45a3-a934-671e75fbe424", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_6", "fluent_type": "derived_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the derived properties of the state for rgripper1? Write None if there are none", "answer": "rgripper1 of robot1 is free", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0a870e05-e33c-4c7c-b157-66ae76865855", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_7", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for ball4? Write None if there are none", "answer": "ball4 is present at room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1582f238-ef04-4004-9d94-cc6f036b0a94", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_8", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state,. What are the self constraint properties of the state for room1? Write None if there are none", "answer": "ball1 is not located at room1, ball10 is not located at room1, ball2 is not present at room1, ball3 is not located at room1, ball5 is not located at room1, ball6 is not located at room1, ball8 is not present at room1, ball9 is not located at room1 and robot1 is not located at room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "824f030a-be71-415b-9ede-582d7afc3673", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "fluent_tracking", "question_name": "iter_3_question_9", "fluent_type": "persistent_fluents", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state,. What are the self constraint properties of the state for room1? Write None if there are none", "answer": "ball1 is not at room1, ball10 is not located at room1, ball11 is at room1, ball2 is not present at room1, ball3 is not at room1, ball4 is at room1, ball5 is not located at room1, ball6 is not at room1, ball7 is located at room1, ball8 is not located at room1, ball9 is not at room1 and robot1 is not at room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is located at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is present at room1, ball7 is present at room2, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is free, robot1 is present in room2 and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "037953cb-9604-4e01-a466-36d1fc115a4d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball1 is located at room3, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room1, ball1 is not located at room2, ball10 is located at room3, ball10 is not at room2, ball10 is not present at room1, ball11 is not at room1, ball11 is not present at room2, ball11 is present at room3, ball2 is at room1, ball2 is not at room3, ball2 is not located at room2, ball3 is located at room3, ball3 is not located at room1, ball3 is not present at room2, ball4 is not at room1, ball4 is not at room2, ball4 is not present at room3, ball5 is at room2, ball5 is not located at room3, ball5 is not present at room1, ball6 is at room1, ball6 is not at room2, ball6 is not present at room3, ball7 is located at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room3, ball7 is not present at room1, ball8 is at room1, ball8 is not being carried by robot1's lgripper1, ball8 is not located at room2, ball8 is not located at room3, ball9 is located at room2, ball9 is not being carried by robot1's lgripper1, ball9 is not located at room3, ball9 is not present at room1, lgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is free, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, robot1 is at room2, robot1 is carrying ball4 with lgripper1, robot1 is not at room3, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room1 and robot1's lgripper1 is not free, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d60c0df6-7679-43be-8f03-73167788172f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball1 is not being carried by robot1's rgripper1, ball1 is not present at room2, ball1 is not present at room3, ball1 is present at room1, ball10 is at room3, ball10 is being carried by robot1's rgripper1, ball10 is not located at room1, ball10 is present at room2, ball11 is at room2, ball11 is located at room3, ball11 is not present at room1, ball2 is being carried by robot1's rgripper1, ball2 is not present at room1, ball2 is not present at room2, ball2 is not present at room3, ball3 is at room1, ball3 is not at room2, ball3 is not located at room3, ball4 is located at room2, ball4 is located at room3, ball4 is not at room1, ball4 is not being carried by robot1's rgripper1, ball5 is at room2, ball5 is being carried by robot1's lgripper1, ball5 is not located at room3, ball5 is present at room1, ball6 is at room1, ball6 is located at room2, ball6 is located at room3, ball7 is at room3, ball7 is being carried by robot1's lgripper1, ball7 is not at room1, ball7 is present at room2, ball8 is at room2, ball8 is not at room1, ball8 is not at room3, ball9 is being carried by robot1's lgripper1, ball9 is not at room2, ball9 is not located at room1, ball9 is present at room3, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is carrying ball8, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not free, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball8 with lgripper1, robot1 is located at room1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room2, robot1 is not present in room3 and robot1's lgripper1 is available, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3e3f21a1-5b2c-4a0b-844c-0ef8aca5900c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is present at room3, ball10 is at room3, ball11 is located at room3, ball2 is present at room1, ball3 is present at room3, ball4 is being carried by robot1's lgripper1, ball5 is located at room2, ball6 is present at room1, ball7 is at room2, ball8 is located at room1, ball9 is present at room2, rgripper1 of robot1 is free and robot1 is located at room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "44f9cd5f-91f2-49da-b13e-eef7c20683f7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not located at room2, ball1 is not present at room1, ball10 is not located at room1, ball10 is not present at room2, ball11 is not being carried by robot1's lgripper1, ball11 is not located at room1, ball11 is not present at room2, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room2, ball2 is not located at room3, ball3 is not at room1, ball3 is not being carried by robot1's rgripper1, ball3 is not present at room2, ball4 is not at room3, ball4 is not located at room1, ball4 is not present at room2, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball5 is not present at room1, ball5 is not present at room3, ball6 is not at room2, ball6 is not at room3, ball6 is not being carried by robot1's rgripper1, ball7 is not located at room3, ball7 is not present at room1, ball8 is not at room2, ball8 is not at room3, ball8 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not located at room1, ball9 is not located at room3, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball9, lgripper1 of robot1 is not free, robot1 is not at room3, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball9 with rgripper1 and robot1 is not present in room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "95e48a1b-e6cd-46a7-a3d7-661c44c63923", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not present at room1, ball10 is not at room1, ball10 is not at room2, ball10 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball11 is not located at room1, ball11 is not present at room2, ball2 is not at room3, ball2 is not located at room2, ball3 is not at room2, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball3 is not present at room1, ball4 is not at room1, ball4 is not at room3, ball4 is not present at room2, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room3, ball5 is not present at room1, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room2, ball6 is not present at room3, ball7 is not at room1, ball7 is not at room3, ball7 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, ball8 is not located at room2, ball8 is not present at room3, ball9 is not at room1, ball9 is not being carried by robot1's lgripper1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball6, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room3, robot1 is not present in room1 and robot1's lgripper1 is not available", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6cf319d5-e453-41b6-93c6-d7b96bcb0343", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, are all of the following properties: ball1 is not at room1, ball1 is not at room2, ball1 is not being carried by robot1's lgripper1, ball1 is present at room3, ball10 is located at room3, ball10 is not at room1, ball10 is not at room2, ball11 is located at room3, ball11 is not located at room1, ball11 is not located at room2, ball2 is not at room3, ball2 is not present at room1, ball2 is not present at room2, ball3 is not located at room1, ball3 is not located at room2, ball3 is present at room3, ball4 is not at room2, ball4 is not located at room3, ball4 is present at room1, ball5 is at room2, ball5 is not at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room1, ball6 is located at room1, ball6 is not being carried by robot1's rgripper1, ball6 is not present at room2, ball6 is not present at room3, ball7 is being carried by robot1's rgripper1, ball7 is not at room1, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room2, ball7 is not located at room3, ball8 is at room1, ball8 is not at room2, ball8 is not being carried by robot1's lgripper1, ball8 is not located at room3, ball9 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, ball9 is not located at room3, ball9 is not present at room1, ball9 is present at room2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, robot1 is carrying ball2 with lgripper1, robot1 is located at room1, robot1 is not at room3, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not located at room2, robot1's lgripper1 is not available and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b9da49f3-ff62-4b6e-8c3d-7ca16d8b9808", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, are all of the following properties: ball1 is at room2, ball1 is not located at room3, ball1 is not present at room1, ball10 is not at room3, ball10 is not located at room1, ball10 is not located at room2, ball11 is not at room3, ball11 is not present at room1, ball11 is not present at room2, ball2 is located at room1, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room3, ball2 is not present at room2, ball3 is being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball3 is not located at room1, ball3 is not located at room2, ball3 is not located at room3, ball4 is not located at room2, ball4 is not present at room1, ball4 is not present at room3, ball5 is at room1, ball5 is located at room3, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room2, ball6 is at room2, ball6 is not at room3, ball6 is not being carried by robot1's lgripper1, ball6 is present at room1, ball7 is being carried by robot1's lgripper1, ball7 is being carried by robot1's rgripper1, ball7 is not at room1, ball7 is not at room2, ball7 is not at room3, ball8 is located at room3, ball8 is not being carried by robot1's lgripper1, ball8 is not present at room1, ball8 is present at room2, ball9 is at room1, ball9 is at room2, ball9 is being carried by robot1's lgripper1, ball9 is not present at room3, lgripper1 of robot1 is carrying ball10, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball8, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball9, robot1 is carrying ball10 with rgripper1, robot1 is carrying ball11 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is located at room2, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is present in room3, robot1's lgripper1 is available and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "17511fd8-2f94-459a-859a-5f742a310246", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is at room3, ball10 is present at room3, ball11 is located at room3, ball3 is located at room3, ball4 is present at room1, ball5 is present at room2, ball6 is located at room1, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is carrying ball2, robot1 is at room1 and robot1 is carrying ball7 with rgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2da8d8b4-b7f0-471c-a1f7-963d30d401ac", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not located at room2, ball10 is not at room1, ball10 is not located at room2, ball11 is not at room1, ball11 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball11 is not located at room2, ball2 is not located at room1, ball2 is not located at room3, ball2 is not present at room2, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room1, ball3 is not located at room2, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room2, ball4 is not present at room3, ball5 is not at room1, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room3, ball6 is not being carried by robot1's lgripper1, ball6 is not present at room2, ball6 is not present at room3, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room1, ball7 is not located at room2, ball7 is not present at room3, ball8 is not at room3, ball8 is not located at room2, ball9 is not at room1, ball9 is not being carried by robot1's lgripper1, ball9 is not located at room3, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room3, robot1 is not present in room2, robot1's lgripper1 is not available and robot1's rgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e30cc79f-529c-4f0b-a8f3-2a655378516e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball1 is not located at room1, ball10 is not present at room1, ball10 is not present at room2, ball11 is not located at room1, ball11 is not present at room2, ball2 is not located at room1, ball2 is not present at room2, ball2 is not present at room3, ball3 is not at room1, ball3 is not being carried by robot1's lgripper1, ball3 is not present at room2, ball4 is not being carried by robot1's lgripper1, ball4 is not present at room2, ball4 is not present at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room3, ball5 is not present at room1, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room2, ball6 is not located at room3, ball7 is not at room1, ball7 is not at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room3, ball8 is not at room2, ball8 is not located at room3, ball9 is not at room1, ball9 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball6, robot1 is not at room2, robot1 is not at room3, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1's lgripper1 is not available and robot1's rgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0521abc8-77a9-4ac1-af43-0947b70d67ea", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties: ball1 is not being carried by robot1's lgripper1, ball1 is not located at room1, ball1 is not located at room2, ball1 is present at room3, ball10 is located at room3, ball10 is not being carried by robot1's rgripper1, ball10 is not present at room1, ball10 is not present at room2, ball11 is not at room2, ball11 is not being carried by robot1's rgripper1, ball11 is not located at room3, ball11 is not present at room1, ball2 is located at room3, ball2 is not present at room1, ball2 is not present at room2, ball3 is at room3, ball3 is not at room1, ball3 is not being carried by robot1's rgripper1, ball3 is not present at room2, ball4 is located at room1, ball4 is not at room2, ball4 is not at room3, ball5 is located at room2, ball5 is not located at room3, ball5 is not present at room1, ball6 is not at room2, ball6 is not at room3, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room1, ball7 is at room1, ball7 is not being carried by robot1's lgripper1, ball7 is not present at room2, ball7 is not present at room3, ball8 is located at room1, ball8 is not being carried by robot1's rgripper1, ball8 is not located at room2, ball8 is not present at room3, ball9 is at room2, ball9 is not at room1, ball9 is not at room3, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball11 with lgripper1, robot1 is carrying ball6 with rgripper1, robot1 is located at room3, robot1 is not at room1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room2, robot1's lgripper1 is not available and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "abbaaa46-388f-4957-85a7-382fdc6fa05d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, are all of the following properties: ball1 is at room2, ball1 is not at room1, ball1 is not at room3, ball10 is being carried by robot1's rgripper1, ball10 is not at room2, ball10 is not present at room1, ball10 is not present at room3, ball11 is not being carried by robot1's rgripper1, ball11 is not present at room2, ball11 is present at room1, ball11 is present at room3, ball2 is at room2, ball2 is not at room3, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room1, ball3 is not at room2, ball3 is not located at room1, ball3 is not located at room3, ball4 is not at room3, ball4 is not located at room1, ball4 is not present at room2, ball5 is located at room1, ball5 is located at room2, ball5 is not present at room3, ball6 is located at room1, ball6 is located at room3, ball6 is not being carried by robot1's lgripper1, ball6 is present at room2, ball7 is at room3, ball7 is being carried by robot1's rgripper1, ball7 is not at room2, ball7 is not located at room1, ball8 is being carried by robot1's rgripper1, ball8 is not at room1, ball8 is not present at room2, ball8 is present at room3, ball9 is not at room1, ball9 is not at room3, ball9 is not located at room2, lgripper1 of robot1 is carrying ball1, lgripper1 of robot1 is carrying ball11, lgripper1 of robot1 is carrying ball3, lgripper1 of robot1 is carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball9, robot1 is at room3, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball4 with rgripper1, robot1 is carrying ball9 with lgripper1, robot1 is not at room1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is present in room2, robot1's lgripper1 is not available and robot1's rgripper1 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "aa4415d8-7c26-42b2-ad12-dbf002c0bc21", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is at room3, ball10 is present at room3, ball2 is located at room3, ball3 is present at room3, ball4 is present at room1, ball5 is at room2, ball6 is being carried by robot1's rgripper1, ball7 is at room1, ball8 is present at room1, ball9 is present at room2, robot1 is carrying ball11 with lgripper1 and robot1 is located at room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "774e2690-e0cc-4a5d-b08c-8e5e97bf907c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not present at room1, ball1 is not present at room2, ball10 is not at room1, ball10 is not being carried by robot1's lgripper1, ball10 is not located at room2, ball11 is not at room2, ball11 is not at room3, ball11 is not located at room1, ball2 is not located at room1, ball2 is not present at room2, ball3 is not at room1, ball3 is not located at room2, ball4 is not at room3, ball4 is not being carried by robot1's lgripper1, ball4 is not present at room2, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room3, ball5 is not present at room1, ball6 is not located at room2, ball6 is not present at room1, ball6 is not present at room3, ball7 is not at room2, ball7 is not at room3, ball7 is not being carried by robot1's lgripper1, ball8 is not at room2, ball8 is not present at room3, ball9 is not at room3, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not present in room1, robot1 is not present in room2 and robot1's rgripper1 is not free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8a8c49a0-d460-43a7-8046-b1dc6c490639", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not present at room1, ball10 is not being carried by robot1's lgripper1, ball10 is not located at room2, ball10 is not present at room1, ball11 is not at room1, ball11 is not being carried by robot1's rgripper1, ball11 is not present at room2, ball11 is not present at room3, ball2 is not at room1, ball2 is not at room2, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room2, ball3 is not present at room1, ball4 is not at room3, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room2, ball5 is not at room1, ball5 is not located at room3, ball6 is not at room2, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room3, ball6 is not present at room1, ball7 is not at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room3, ball8 is not at room2, ball8 is not located at room3, ball9 is not at room1, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not free, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1 and robot1 is not present in room2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "966bc196-d1cf-4211-82ae-fa758ce76c7a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, are all of the following properties: ball1 is located at room3, ball1 is not at room1, ball1 is not at room2, ball10 is at room3, ball10 is not at room1, ball10 is not located at room2, ball11 is not being carried by robot1's lgripper1, ball11 is not located at room3, ball11 is not present at room2, ball11 is present at room1, ball2 is at room3, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room1, ball2 is not located at room2, ball3 is not at room1, ball3 is not being carried by robot1's lgripper1, ball3 is not present at room2, ball3 is not present at room3, ball4 is at room1, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room3, ball4 is not present at room2, ball5 is located at room2, ball5 is not at room1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball5 is not present at room3, ball6 is located at room3, ball6 is not at room1, ball6 is not present at room2, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room3, ball7 is not present at room2, ball7 is present at room1, ball8 is not located at room2, ball8 is not located at room3, ball8 is not present at room1, ball9 is at room2, ball9 is not located at room1, ball9 is not located at room3, lgripper1 of robot1 is carrying ball8, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball9, robot1 is carrying ball3 with rgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not present in room2, robot1 is not present in room3, robot1 is present in room1, robot1's lgripper1 is not available and robot1's rgripper1 is not available, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fe2cb182-b78d-4586-845a-fff23b105953", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball1 is at room1, ball1 is not at room3, ball1 is not located at room2, ball10 is not at room1, ball10 is not at room2, ball10 is not being carried by robot1's rgripper1, ball10 is not present at room3, ball11 is located at room1, ball11 is not present at room3, ball11 is present at room2, ball2 is located at room3, ball2 is not being carried by robot1's rgripper1, ball2 is present at room1, ball2 is present at room2, ball3 is located at room2, ball3 is not located at room1, ball3 is not present at room3, ball4 is not at room1, ball4 is not being carried by robot1's rgripper1, ball4 is not present at room2, ball4 is not present at room3, ball5 is located at room2, ball5 is not at room1, ball5 is not at room3, ball6 is at room3, ball6 is located at room1, ball6 is not at room2, ball7 is being carried by robot1's lgripper1, ball7 is located at room3, ball7 is not being carried by robot1's rgripper1, ball7 is present at room1, ball7 is present at room2, ball8 is at room3, ball8 is not present at room1, ball8 is not present at room2, ball9 is at room1, ball9 is located at room2, ball9 is located at room3, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is carrying ball5, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is carrying ball1, rgripper1 of robot1 is carrying ball3, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is carrying ball8, rgripper1 of robot1 is carrying ball9, robot1 is at room1, robot1 is carrying ball11 with rgripper1, robot1 is carrying ball3 with lgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball9 with lgripper1, robot1 is located at room2, robot1 is located at room3, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball8 with lgripper1, robot1's lgripper1 is available and robot1's rgripper1 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f3b13ffa-3be1-4a89-be52-b9584cd3466e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is at room3, ball10 is located at room3, ball11 is located at room1, ball2 is at room3, ball4 is located at room1, ball5 is present at room2, ball6 is located at room3, ball7 is located at room1, ball9 is present at room2, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball8 with lgripper1 and robot1 is present in room1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "70a42eb3-56bb-4fd8-91b6-69de9929ebd8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not being carried by robot1's lgripper1, ball1 is not located at room1, ball1 is not present at room2, ball10 is not being carried by robot1's rgripper1, ball10 is not present at room1, ball10 is not present at room2, ball11 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball11 is not located at room2, ball11 is not present at room3, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room2, ball2 is not present at room1, ball3 is not at room2, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball3 is not present at room1, ball4 is not present at room2, ball4 is not present at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball5 is not present at room1, ball5 is not present at room3, ball6 is not at room1, ball6 is not being carried by robot1's rgripper1, ball6 is not present at room2, ball7 is not at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not located at room3, ball8 is not at room2, ball8 is not at room3, ball8 is not being carried by robot1's rgripper1, ball8 is not located at room1, ball9 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, ball9 is not located at room1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball4, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not located at room2, robot1 is not located at room3, robot1's lgripper1 is not available and robot1's rgripper1 is not available", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "33f1a6c5-d924-4df8-976d-945770bf2e30", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not being carried by robot1's lgripper1, ball1 is not present at room1, ball10 is not present at room1, ball10 is not present at room2, ball11 is not at room2, ball11 is not present at room3, ball2 is not located at room1, ball2 is not located at room2, ball3 is not at room1, ball3 is not present at room2, ball3 is not present at room3, ball4 is not at room3, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room3, ball5 is not present at room1, ball6 is not located at room2, ball6 is not present at room1, ball7 is not at room2, ball7 is not being carried by robot1's rgripper1, ball7 is not present at room3, ball8 is not at room2, ball8 is not at room3, ball8 is not present at room1, ball9 is not being carried by robot1's lgripper1, ball9 is not located at room3, ball9 is not present at room1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not free, robot1 is not at room3, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room2 and robot1's lgripper1 is not available", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "aa7b792d-7219-4d03-bca2-da1f86041d04", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball1 is not at room2, ball1 is not present at room1, ball1 is present at room3, ball10 is located at room3, ball10 is not at room1, ball10 is not at room2, ball10 is not being carried by robot1's rgripper1, ball11 is at room1, ball11 is not located at room3, ball11 is not present at room2, ball2 is at room3, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room1, ball2 is not located at room2, ball3 is located at room2, ball3 is not at room3, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room1, ball4 is not at room3, ball4 is not being carried by robot1's rgripper1, ball4 is not present at room2, ball4 is present at room1, ball5 is at room2, ball5 is not at room3, ball5 is not present at room1, ball6 is at room3, ball6 is not at room2, ball6 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball6 is not present at room1, ball7 is at room1, ball7 is not present at room2, ball7 is not present at room3, ball8 is at room2, ball8 is not at room1, ball8 is not at room3, ball9 is not at room1, ball9 is not at room3, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room2, lgripper1 of robot1 is carrying ball9, lgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is free, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, robot1 is at room2, robot1 is not at room3, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not located at room1 and robot1's lgripper1 is not available, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "90800b08-8c1c-42de-9f2e-efbfeef90cb7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, are all of the following properties: ball1 is not being carried by robot1's rgripper1, ball1 is not present at room2, ball1 is not present at room3, ball1 is present at room1, ball10 is located at room3, ball10 is not located at room1, ball10 is not located at room2, ball11 is being carried by robot1's lgripper1, ball11 is located at room2, ball11 is not located at room3, ball11 is present at room1, ball2 is at room3, ball2 is not present at room2, ball2 is present at room1, ball3 is at room2, ball3 is located at room1, ball3 is not being carried by robot1's lgripper1, ball3 is present at room3, ball4 is located at room1, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball4 is not located at room3, ball5 is at room3, ball5 is being carried by robot1's lgripper1, ball5 is not located at room1, ball5 is not present at room2, ball6 is at room1, ball6 is at room3, ball6 is being carried by robot1's lgripper1, ball6 is not present at room2, ball7 is at room1, ball7 is not at room2, ball7 is not being carried by robot1's lgripper1, ball7 is present at room3, ball8 is located at room1, ball8 is not at room3, ball8 is not present at room2, ball9 is at room1, ball9 is at room2, ball9 is not being carried by robot1's lgripper1, ball9 is present at room3, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is free, rgripper1 of robot1 is carrying ball8, rgripper1 of robot1 is carrying ball9, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not free, robot1 is carrying ball10 with lgripper1, robot1 is carrying ball10 with rgripper1, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball6 with rgripper1, robot1 is carrying ball8 with lgripper1, robot1 is not at room1, robot1 is not at room3, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball7 with rgripper1 and robot1 is not present in room2, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "090e07c9-ac5e-4c46-878d-30e4128b6816", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball1 is at room3, ball10 is present at room3, ball11 is at room1, ball2 is located at room3, ball3 is located at room2, ball4 is at room1, ball5 is present at room2, ball6 is at room3, ball7 is at room1, ball8 is present at room2, ball9 is being carried by robot1's lgripper1, rgripper1 of robot1 is free and robot1 is present in room2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4a82bac0-c608-4866-9801-2331ad027737", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball1 is not present at room1, ball10 is not at room2, ball10 is not present at room1, ball11 is not at room3, ball11 is not present at room2, ball2 is not at room2, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room1, ball3 is not at room3, ball3 is not located at room1, ball4 is not at room2, ball4 is not being carried by robot1's lgripper1, ball4 is not present at room3, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room3, ball5 is not present at room1, ball6 is not at room2, ball6 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball6 is not located at room1, ball7 is not at room2, ball7 is not at room3, ball7 is not being carried by robot1's rgripper1, ball8 is not located at room3, ball8 is not present at room1, ball9 is not located at room1, ball9 is not present at room2, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not located at room1 and robot1 is not located at room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "25c0fa4a-27cf-4d98-99db-24f9a71095fb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "state_tracking", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "ball1 is not located at room1, ball1 is not located at room2, ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball10 is not present at room1, ball10 is not present at room2, ball11 is not present at room2, ball11 is not present at room3, ball2 is not at room1, ball2 is not at room2, ball2 is not being carried by robot1's lgripper1, ball3 is not present at room1, ball3 is not present at room3, ball4 is not at room3, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball5 is not being carried by robot1's lgripper1, ball5 is not present at room1, ball5 is not present at room3, ball6 is not at room2, ball6 is not present at room1, ball7 is not at room3, ball7 is not present at room2, ball8 is not at room1, ball8 is not being carried by robot1's rgripper1, ball8 is not present at room3, ball9 is not at room2, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not present in room1 and robot1 is not present in room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is located at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is at room2, ball8 is located at room1, ball9 is located at room2, robot1 is at room2, robot1's lgripper1 is free and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "bd69a238-1d49-4055-94a0-784add8b3eea", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c065e7c7-7851-4d25-b81d-faa417fffa45", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: rgripper1 of robot1 drops ball7 in room3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1206a9ad-9243-4fa2-b0fd-d95f81bddefc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2. Is the action: ball4 is picked from room2 with lgripper1 by robot1 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6b84ed9a-47ae-4e08-a183-a057e4f68622", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: rgripper1 of robot1 drops ball8 in room2. Is the action: in room2, robot1's rgripper1 drops ball8 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "90bc6fd9-12b2-4b60-bb44-365feab7fe7b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "034ae1df-1d78-49a1-9c2d-706e43cfb822", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball1 is picked from room3 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "rgripper1 of robot1 picks up ball1 in room3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ec143d8e-177b-42a4-b75f-97d1cf2953a0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball5 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room3 from room2, lgripper1 of robot1 drops ball4 in room2, robot1 moves to room1 from room2 and from room2, robot1's rgripper1 picks up ball9", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1bb57b71-5c91-4f68-983c-bb5749609081", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room1, robot1's rgripper1 drops ball6, lgripper1 of robot1 picks up ball4 in room3, ball9 is picked from room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room2, lgripper1 of robot1 picks up ball5 in room3, in room3, robot1's rgripper1 drops ball1, from room3, robot1's rgripper1 picks up ball5, from room1, robot1's rgripper1 picks up ball1, from room3, robot1 moves to room1, from room3, robot1's rgripper1 picks up ball10, ball11 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball8, in room1, robot1's rgripper1 drops ball4, in room2, robot1's lgripper1 drops ball3, from room2, robot1's lgripper1 picks up ball6, from room1, robot1's rgripper1 picks up ball8, ball3 is picked from room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room3, robot1's rgripper1 drops ball6, in room1, robot1's rgripper1 drops ball3, ball4 is dropped in room1 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball7, from room2, robot1's rgripper1 picks up ball6, rgripper1 of robot1 picks up ball1 in room2, in room3, robot1's lgripper1 drops ball2, robot1 moves to room2 from room3, lgripper1 of robot1 picks up ball5 in room1, robot1 moves to room2 from room1, ball1 is picked from room3 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, from room3, robot1's lgripper1 picks up ball2, from room2, robot1's lgripper1 picks up ball5, ball4 is dropped in room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room2, ball9 is dropped in room3 with rgripper1 by robot1, ball2 is dropped in room3 with rgripper1 by robot1, ball8 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball5 in room1, ball9 is dropped in room3 with lgripper1 by robot1, in room3, robot1's lgripper1 drops ball11, in room2, robot1's lgripper1 drops ball7, ball11 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 drops ball10 in room2, rgripper1 of robot1 drops ball11 in room1, in room2, robot1's rgripper1 drops ball9, ball5 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball11 in room3, rgripper1 of robot1 picks up ball2 in room1, lgripper1 of robot1 drops ball3 in room3, ball5 is dropped in room3 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball8, ball4 is picked from room2 with lgripper1 by robot1, in room2, robot1's rgripper1 drops ball1, lgripper1 of robot1 drops ball1 in room3, ball7 is picked from room3 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball10, lgripper1 of robot1 drops ball9 in room1, ball6 is picked from room3 with rgripper1 by robot1, from room2, robot1's rgripper1 picks up ball3, ball10 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball9, from room3, robot1's rgripper1 picks up ball11, ball7 is dropped in room1 with rgripper1 by robot1, in room2, robot1's rgripper1 drops ball11, rgripper1 of robot1 picks up ball9 in room3, lgripper1 of robot1 picks up ball3 in room2, from room3, robot1's rgripper1 picks up ball2, from room3, robot1's lgripper1 picks up ball3, in room3, robot1's rgripper1 drops ball7, ball5 is dropped in room1 with rgripper1 by robot1, in room1, robot1's rgripper1 drops ball1, ball11 is picked from room2 with rgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, in room3, robot1's lgripper1 drops ball10, lgripper1 of robot1 picks up ball7 in room3, in room1, robot1's lgripper1 drops ball1, ball4 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room2, from room2, robot1's rgripper1 picks up ball10, lgripper1 of robot1 picks up ball10 in room1, ball8 is picked from room2 with lgripper1 by robot1, from room3, robot1's rgripper1 picks up ball4, lgripper1 of robot1 picks up ball7 in room1, rgripper1 of robot1 drops ball10 in room1, ball10 is picked from room3 with lgripper1 by robot1, ball8 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room1, ball9 is dropped in room1 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, in room3, robot1's rgripper1 drops ball10, rgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball1 in room2, ball4 is picked from room1 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, rgripper1 of robot1 drops ball10 in room2, ball3 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 picks up ball4 in room1, in room2, robot1's lgripper1 drops ball5, ball7 is dropped in room3 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball11, in room1, robot1's lgripper1 drops ball10, from room1, robot1 moves to room3, rgripper1 of robot1 picks up ball8 in room3, lgripper1 of robot1 picks up ball9 in room3, in room1, robot1's lgripper1 drops ball7, rgripper1 of robot1 drops ball2 in room2, rgripper1 of robot1 drops ball5 in room2, lgripper1 of robot1 drops ball8 in room3, ball8 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room1, lgripper1 of robot1 drops ball3 in room1, ball8 is picked from room3 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball6 in room1, rgripper1 of robot1 drops ball6 in room2, from room2, robot1's lgripper1 picks up ball9, from room3, robot1's lgripper1 picks up ball1, ball6 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball2 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball6 in room3, ball11 is picked from room1 with rgripper1 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball5, ball4 is dropped in room2 with rgripper1 by robot1, from room2, robot1's rgripper1 picks up ball4 and from room1, robot1's rgripper1 picks up ball3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fe5b2c31-cca6-4df2-9c69-09e988b8e6b8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2 and robot1 moves to room1 from room2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dc60a14e-1862-48b2-8f21-d75f73841bc7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room3 with lgripper1 by robot1, from room2, robot1 moves to room1, from room2, robot1's rgripper1 picks up ball7, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cd0ae4a0-af5d-4b3c-a420-4d3d292977d2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1. Is the action: ball4 is dropped in room1 with lgripper1 by robot1 executable at step 4, True or False?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8440ec35-c6f5-40b4-9368-fea32d1ef6da", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, in room2, robot1's rgripper1 drops ball9, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1. Is the action: rgripper1 of robot1 drops ball9 in room2 executable at step 2, True or False?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "99b7f213-3c67-4a43-8710-ee862bd83cd6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b14efd71-362b-489e-934d-b91406fa5dda", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball10 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "lgripper1 of robot1 picks up ball10 in room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "58a069f5-4a43-4e72-9fa2-1eb0893d86c9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room1 to room2, rgripper1 of robot1 drops ball7 in room1, robot1 moves to room3 from room1 and ball2 is dropped in room1 with lgripper1 by robot1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a6422401-c122-43ab-9ebf-df5bd294cd03", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room1, robot1's rgripper1 drops ball6, ball4 is picked from room3 with lgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room2, lgripper1 of robot1 picks up ball5 in room3, rgripper1 of robot1 drops ball1 in room3, rgripper1 of robot1 picks up ball5 in room3, ball1 is picked from room1 with rgripper1 by robot1, from room3, robot1 moves to room1, ball10 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 drops ball11 in room1, in room1, robot1's rgripper1 drops ball2, ball8 is dropped in room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball4 in room1, in room2, robot1's lgripper1 drops ball3, lgripper1 of robot1 picks up ball6 in room2, ball5 is picked from room2 with rgripper1 by robot1, ball8 is picked from room1 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball3, ball2 is picked from room1 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 drops ball3 in room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball7 in room2, ball6 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room2, in room3, robot1's lgripper1 drops ball2, robot1 moves to room2 from room3, ball5 is picked from room1 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball1, ball8 is picked from room1 with lgripper1 by robot1, ball2 is picked from room3 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, robot1 moves to room3 from room2, ball7 is dropped in room2 with rgripper1 by robot1, ball9 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 drops ball2 in room3, ball8 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball5 in room1, in room3, robot1's lgripper1 drops ball9, ball11 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 drops ball7 in room2, ball11 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 drops ball10 in room2, rgripper1 of robot1 drops ball11 in room1, ball9 is dropped in room2 with rgripper1 by robot1, ball5 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball11 in room3, ball2 is picked from room1 with rgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room3 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball4 in room2, ball1 is dropped in room2 with rgripper1 by robot1, in room3, robot1's lgripper1 drops ball1, rgripper1 of robot1 picks up ball7 in room3, from room1, robot1's rgripper1 picks up ball10, in room1, robot1's lgripper1 drops ball9, rgripper1 of robot1 picks up ball6 in room3, from room2, robot1's rgripper1 picks up ball3, lgripper1 of robot1 picks up ball10 in room2, rgripper1 of robot1 drops ball3 in room2, from room1, robot1's rgripper1 picks up ball9, from room3, robot1's rgripper1 picks up ball11, ball11 is dropped in room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball9 in room3, ball3 is picked from room2 with lgripper1 by robot1, from room3, robot1's rgripper1 picks up ball2, from room3, robot1's lgripper1 picks up ball3, ball7 is dropped in room3 with rgripper1 by robot1, in room1, robot1's rgripper1 drops ball5, ball1 is dropped in room1 with rgripper1 by robot1, ball11 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball1 in room1, in room3, robot1's lgripper1 drops ball10, ball7 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 drops ball1 in room1, rgripper1 of robot1 drops ball4 in room3, ball2 is picked from room2 with rgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball10 in room1, from room2, robot1's lgripper1 picks up ball8, ball4 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room1, ball10 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 picks up ball10 in room3, in room3, robot1's rgripper1 drops ball8, from room1, robot1's rgripper1 picks up ball7, ball9 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 drops ball3 in room3, in room3, robot1's rgripper1 drops ball10, rgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball1, rgripper1 of robot1 picks up ball4 in room1, in room2, robot1's lgripper1 drops ball1, in room2, robot1's rgripper1 drops ball10, in room2, robot1's lgripper1 drops ball4, ball3 is picked from room3 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, lgripper1 of robot1 drops ball5 in room2, lgripper1 of robot1 drops ball7 in room3, lgripper1 of robot1 picks up ball11 in room2, lgripper1 of robot1 drops ball10 in room1, from room3, robot1's rgripper1 picks up ball8, lgripper1 of robot1 picks up ball9 in room3, lgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 drops ball2 in room2, in room2, robot1's rgripper1 drops ball5, lgripper1 of robot1 drops ball8 in room3, rgripper1 of robot1 drops ball8 in room1, from room1, robot1's lgripper1 picks up ball11, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball3 in room1, from room3, robot1's lgripper1 picks up ball8, lgripper1 of robot1 drops ball11 in room2, from room1, robot1's lgripper1 picks up ball6, ball6 is dropped in room2 with rgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball1, in room2, robot1's lgripper1 drops ball6, from room1, robot1's rgripper1 picks up ball6, ball2 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball6 in room3, ball11 is picked from room1 with rgripper1 by robot1, lgripper1 of robot1 drops ball6 in room1, ball5 is dropped in room1 with lgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 drops ball4 in room2, from room2, robot1's rgripper1 picks up ball4 and rgripper1 of robot1 picks up ball3 in room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "15cdb05d-ffcc-4f8c-995e-3cfeb4582ff5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball11 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, from room2, robot1 moves to room1, lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1 and robot1 moves from room1 to room3. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8a0d3aec-1d92-44b5-8d83-85fdf9a7247a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball11 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, lgripper1 of robot1 picks up ball2 in room3, rgripper1 of robot1 picks up ball6 in room1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room1 to room3 and robot1 moves from room2 to room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f569437b-a490-4576-92e9-11fdc178875c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1. Is the action: from room2, robot1's rgripper1 picks up ball7 executable at step 2, True or False?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cbd040fd-f629-473d-a1eb-b10500a4c756", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, ball10 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3. Is the action: from room2, robot1's rgripper1 picks up ball10 executable at step 8, True or False?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ead06ba6-37bb-4ace-ab66-dec8bbbc9d58", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ac2bf890-397b-4d12-b81d-90390e4e4c2f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: rgripper1 of robot1 picks up ball6 in room3, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "rgripper1 of robot1 picks up ball6 in room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1241684b-9d44-48c4-87f8-b028b63c6375", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves to room1 from room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1 moves to room2 and in room3, robot1's lgripper1 drops ball11", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5f7a9221-3cd7-42ee-ae8c-bdb4bf1ac087", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "rgripper1 of robot1 drops ball6 in room1, ball4 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room1, from room2, robot1's lgripper1 picks up ball2, ball5 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball5 in room3, ball1 is picked from room1 with rgripper1 by robot1, ball10 is picked from room3 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball11, ball2 is dropped in room1 with rgripper1 by robot1, ball8 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, in room2, robot1's lgripper1 drops ball3, from room2, robot1's lgripper1 picks up ball6, rgripper1 of robot1 picks up ball5 in room2, ball8 is picked from room1 with rgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, lgripper1 of robot1 drops ball4 in room1, from room2, robot1's lgripper1 picks up ball7, rgripper1 of robot1 picks up ball6 in room2, ball1 is picked from room2 with rgripper1 by robot1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball5 in room1, robot1 moves to room2 from room1, ball7 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room3, lgripper1 of robot1 picks up ball8 in room1, lgripper1 of robot1 picks up ball2 in room3, ball5 is picked from room2 with lgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, robot1 moves from room2 to room3, rgripper1 of robot1 drops ball7 in room2, ball9 is dropped in room3 with rgripper1 by robot1, ball2 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball8 in room2, rgripper1 of robot1 picks up ball5 in room1, lgripper1 of robot1 drops ball9 in room3, in room2, robot1's lgripper1 drops ball7, lgripper1 of robot1 picks up ball11 in room3, lgripper1 of robot1 drops ball10 in room2, in room1, robot1's rgripper1 drops ball11, rgripper1 of robot1 drops ball9 in room2, lgripper1 of robot1 drops ball5 in room3, lgripper1 of robot1 drops ball6 in room3, ball11 is dropped in room3 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball2, in room3, robot1's lgripper1 drops ball3, ball5 is dropped in room3 with rgripper1 by robot1, lgripper1 of robot1 drops ball9 in room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 drops ball1 in room2, lgripper1 of robot1 drops ball1 in room3, from room3, robot1's rgripper1 picks up ball7, from room1, robot1's rgripper1 picks up ball10, in room1, robot1's lgripper1 drops ball9, rgripper1 of robot1 picks up ball6 in room3, from room2, robot1's rgripper1 picks up ball3, lgripper1 of robot1 picks up ball10 in room2, rgripper1 of robot1 drops ball3 in room2, ball9 is picked from room1 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball11, in room1, robot1's rgripper1 drops ball7, in room2, robot1's rgripper1 drops ball11, rgripper1 of robot1 picks up ball9 in room3, lgripper1 of robot1 picks up ball3 in room2, rgripper1 of robot1 picks up ball2 in room3, from room3, robot1's lgripper1 picks up ball3, ball7 is dropped in room3 with rgripper1 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 drops ball1 in room1, ball11 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball1 in room1, ball10 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball7, in room1, robot1's lgripper1 drops ball1, ball4 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room2, rgripper1 of robot1 picks up ball10 in room2, lgripper1 of robot1 picks up ball10 in room1, lgripper1 of robot1 picks up ball8 in room2, rgripper1 of robot1 picks up ball4 in room3, ball7 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball10 in room1, from room3, robot1's lgripper1 picks up ball10, in room3, robot1's rgripper1 drops ball8, from room1, robot1's rgripper1 picks up ball7, ball9 is dropped in room1 with rgripper1 by robot1, in room3, robot1's rgripper1 drops ball3, in room3, robot1's rgripper1 drops ball10, in room2, robot1's rgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball1, from room1, robot1's rgripper1 picks up ball4, lgripper1 of robot1 drops ball1 in room2, in room2, robot1's rgripper1 drops ball10, lgripper1 of robot1 drops ball4 in room2, from room3, robot1's rgripper1 picks up ball3, lgripper1 of robot1 picks up ball4 in room1, lgripper1 of robot1 drops ball5 in room2, in room3, robot1's lgripper1 drops ball7, from room2, robot1's lgripper1 picks up ball11, ball10 is dropped in room1 with lgripper1 by robot1, robot1 moves to room3 from room1, ball8 is picked from room3 with rgripper1 by robot1, from room3, robot1's lgripper1 picks up ball9, ball7 is dropped in room1 with lgripper1 by robot1, in room2, robot1's rgripper1 drops ball2, ball5 is dropped in room2 with rgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, ball8 is dropped in room1 with rgripper1 by robot1, ball11 is picked from room1 with lgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball3, ball8 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 drops ball11 in room2, lgripper1 of robot1 picks up ball6 in room1, in room2, robot1's rgripper1 drops ball6, ball9 is picked from room2 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball1, in room2, robot1's lgripper1 drops ball6, rgripper1 of robot1 picks up ball6 in room1, in room1, robot1's lgripper1 drops ball2, in room2, robot1's lgripper1 drops ball2, ball6 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 picks up ball11 in room1, lgripper1 of robot1 drops ball6 in room1, in room1, robot1's lgripper1 drops ball5, from room2, robot1's rgripper1 picks up ball9, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1 and ball3 is picked from room1 with rgripper1 by robot1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4943be4c-02d6-4b57-a164-5736169b80e5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is picked from room3 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, from room1, robot1's rgripper1 picks up ball6, from room2, robot1 moves to room1, from room2, robot1's lgripper1 picks up ball4, in room1, robot1's rgripper1 drops ball7, in room3, robot1's rgripper1 drops ball6, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, lgripper1 of robot1 picks up ball8 in room1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room1 to room3 and robot1 moves from room3 to room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "371b3148-4346-4272-8a16-c8c6465945da", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball2 is dropped in room3 with lgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room2, robot1's lgripper1 picks up ball4, from room3, robot1's lgripper1 picks up ball11, in room1, robot1's rgripper1 drops ball7, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room3, robot1 moves from room2 to room1 and robot1 moves to room1 from room3. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "82ca29af-9201-48b3-9d95-dcbf7692279c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1. Is the action: lgripper1 of robot1 picks up ball2 in room1 executable at step 5, True or False?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c2d04098-39cf-4ffd-b557-83cbf4e87565", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1. Is the action: in room1, robot1's lgripper1 drops ball3 executable at step 13, True or False?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "40c0edd5-a52e-4ad2-8a9b-767a9b3a4d44", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3bbce496-3992-4dbb-b403-17bbecc7df8e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, from room2, robot1's rgripper1 picks up ball8, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "rgripper1 of robot1 picks up ball8 in room2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "603e474f-a8af-4668-aead-d19a4bf1fb4e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "lgripper1 of robot1 drops ball8 in room1, rgripper1 of robot1 drops ball3 in room1, robot1 moves to room2 from room1 and from room1, robot1 moves to room3", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "33af7c4d-4704-4119-a8f9-0b3317a9162f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "in room1, robot1's rgripper1 drops ball6, ball4 is picked from room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room1, ball2 is picked from room2 with lgripper1 by robot1, ball5 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball1, from room3, robot1's rgripper1 picks up ball5, from room1, robot1's rgripper1 picks up ball1, from room3, robot1 moves to room1, ball10 is picked from room3 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball11, ball2 is dropped in room1 with rgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball3 is dropped in room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball5, rgripper1 of robot1 picks up ball8 in room1, ball3 is picked from room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room3, robot1's rgripper1 drops ball6, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room2, ball1 is picked from room2 with rgripper1 by robot1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1 moves to room2, ball5 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room3, robot1's rgripper1 picks up ball1, from room1, robot1's lgripper1 picks up ball8, lgripper1 of robot1 picks up ball2 in room3, ball5 is picked from room2 with lgripper1 by robot1, in room3, robot1's lgripper1 drops ball4, from room2, robot1 moves to room3, in room2, robot1's rgripper1 drops ball7, in room3, robot1's rgripper1 drops ball9, rgripper1 of robot1 drops ball2 in room3, rgripper1 of robot1 picks up ball8 in room2, from room1, robot1's rgripper1 picks up ball5, in room3, robot1's lgripper1 drops ball9, lgripper1 of robot1 drops ball11 in room3, lgripper1 of robot1 drops ball7 in room2, from room3, robot1's lgripper1 picks up ball11, in room2, robot1's lgripper1 drops ball10, rgripper1 of robot1 drops ball11 in room1, in room2, robot1's rgripper1 drops ball9, ball5 is dropped in room3 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball11 is dropped in room3 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball2, ball3 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room3 with rgripper1 by robot1, in room2, robot1's lgripper1 drops ball9, lgripper1 of robot1 drops ball8 in room2, ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 drops ball1 in room2, in room3, robot1's lgripper1 drops ball1, rgripper1 of robot1 picks up ball7 in room3, from room1, robot1's rgripper1 picks up ball10, lgripper1 of robot1 drops ball9 in room1, from room3, robot1's rgripper1 picks up ball6, from room2, robot1's rgripper1 picks up ball3, ball10 is picked from room2 with lgripper1 by robot1, in room2, robot1's rgripper1 drops ball3, from room1, robot1's rgripper1 picks up ball9, rgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball7 in room1, ball11 is dropped in room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball9 in room3, from room2, robot1's lgripper1 picks up ball3, ball2 is picked from room3 with rgripper1 by robot1, from room3, robot1's lgripper1 picks up ball3, rgripper1 of robot1 drops ball7 in room3, rgripper1 of robot1 drops ball5 in room1, in room1, robot1's rgripper1 drops ball1, from room2, robot1's rgripper1 picks up ball11, lgripper1 of robot1 picks up ball1 in room1, ball10 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room3, in room1, robot1's lgripper1 drops ball1, ball4 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, ball8 is picked from room2 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 picks up ball7 in room1, in room1, robot1's rgripper1 drops ball10, ball10 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball8, rgripper1 of robot1 picks up ball7 in room1, rgripper1 of robot1 drops ball9 in room1, in room3, robot1's rgripper1 drops ball3, rgripper1 of robot1 drops ball10 in room3, ball8 is dropped in room2 with rgripper1 by robot1, lgripper1 of robot1 picks up ball1 in room2, from room1, robot1's rgripper1 picks up ball4, in room2, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball10 in room2, in room2, robot1's lgripper1 drops ball4, from room3, robot1's rgripper1 picks up ball3, ball4 is picked from room1 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball5, ball7 is dropped in room3 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball11, in room1, robot1's lgripper1 drops ball10, ball8 is picked from room3 with rgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room3, ball7 is dropped in room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball2 in room2, ball5 is dropped in room2 with rgripper1 by robot1, in room3, robot1's lgripper1 drops ball8, rgripper1 of robot1 drops ball8 in room1, ball11 is picked from room1 with lgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball3 in room1, from room3, robot1's lgripper1 picks up ball8, in room2, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball6 in room1, in room2, robot1's rgripper1 drops ball6, from room2, robot1's lgripper1 picks up ball9, ball1 is picked from room3 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball6, ball6 is picked from room1 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball2, ball2 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball6 in room3, ball11 is picked from room1 with rgripper1 by robot1, lgripper1 of robot1 drops ball6 in room1, lgripper1 of robot1 drops ball5 in room1, rgripper1 of robot1 picks up ball9 in room2, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1 and ball3 is picked from room1 with rgripper1 by robot1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "74ff0f1c-aedb-4c33-b181-54b05f15e580", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball2 is picked from room1 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room3, from room2, robot1's lgripper1 picks up ball4, from room3, robot1's lgripper1 picks up ball11, from room3, robot1's rgripper1 picks up ball3, in room1, robot1's lgripper1 drops ball4, in room2, robot1's rgripper1 drops ball3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room2 to room1, robot1 moves from room3 to room1 and robot1 moves to room2 from room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "64aae963-cc1d-4246-8654-dd1d5d3c8d83", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball3 is dropped in room2 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, from room1, robot1's lgripper1 picks up ball8, from room2, robot1's lgripper1 picks up ball9, from room2, robot1's rgripper1 picks up ball7, from room3, robot1 moves to room1, from room3, robot1's lgripper1 picks up ball11, from room3, robot1's rgripper1 picks up ball3, in room1, robot1's lgripper1 drops ball7, in room1, robot1's rgripper1 drops ball7, in room2, robot1's lgripper1 drops ball8, in room3, robot1's lgripper1 drops ball2, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, robot1 moves from room2 to room1 and robot1 moves to room2 from room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "54d14591-d840-43e8-860d-871e6c0a8ed1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3. Is the action: from room1, robot1 moves to room2 executable at step 16, True or False?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "bd7ba48b-91b7-48a8-a8be-f69d5c3ed511", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball10 is dropped in room1 with lgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2. Is the action: ball10 is dropped in room1 with lgripper1 by robot1 executable at step 12, True or False?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "14884509-63f7-4b24-9fa2-f04b753083ce", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9be31291-9922-4822-9f6d-1ef6fc11c016", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, rgripper1 of robot1 picks up ball11 in room2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "rgripper1 of robot1 picks up ball11 in room2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a4ffd229-429d-4897-b447-3d055a1f1fa2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "from room2, robot1's rgripper1 picks up ball5, from room2, robot1 moves to room3, from room2, robot1's rgripper1 picks up ball8, in room2, robot1's lgripper1 drops ball9, rgripper1 of robot1 picks up ball3 in room2 and robot1 moves to room1 from room2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5396ffaa-1ac4-4006-942f-0695b1e87222", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "action_executability", "question_name": "question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "rgripper1 of robot1 drops ball6 in room1, lgripper1 of robot1 picks up ball4 in room3, from room1, robot1's lgripper1 picks up ball9, lgripper1 of robot1 picks up ball2 in room2, lgripper1 of robot1 picks up ball5 in room3, in room3, robot1's rgripper1 drops ball1, from room3, robot1's rgripper1 picks up ball5, from room1, robot1's rgripper1 picks up ball1, robot1 moves from room3 to room1, ball10 is picked from room3 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball11, ball2 is dropped in room1 with rgripper1 by robot1, in room1, robot1's lgripper1 drops ball8, rgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 drops ball3 in room2, ball6 is picked from room2 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball8, lgripper1 of robot1 picks up ball3 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 drops ball3 in room1, in room1, robot1's lgripper1 drops ball4, from room2, robot1's lgripper1 picks up ball7, ball6 is picked from room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball1 in room2, ball2 is dropped in room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball5 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, from room2, robot1's rgripper1 picks up ball7, ball1 is picked from room3 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, ball2 is picked from room3 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, in room3, robot1's lgripper1 drops ball4, in room2, robot1's rgripper1 drops ball7, ball9 is dropped in room3 with rgripper1 by robot1, ball2 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball5 in room1, in room3, robot1's lgripper1 drops ball9, ball11 is dropped in room3 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball7, ball11 is picked from room3 with lgripper1 by robot1, in room2, robot1's lgripper1 drops ball10, ball11 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room2 with rgripper1 by robot1, lgripper1 of robot1 drops ball5 in room3, lgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 drops ball11 in room3, rgripper1 of robot1 picks up ball2 in room1, in room3, robot1's lgripper1 drops ball3, rgripper1 of robot1 drops ball5 in room3, in room2, robot1's lgripper1 drops ball8, ball4 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper1 by robot1, in room3, robot1's lgripper1 drops ball1, from room3, robot1's rgripper1 picks up ball7, from room1, robot1's rgripper1 picks up ball10, in room1, robot1's lgripper1 drops ball9, rgripper1 of robot1 picks up ball6 in room3, lgripper1 of robot1 picks up ball10 in room2, ball3 is dropped in room2 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball9, rgripper1 of robot1 picks up ball11 in room3, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 drops ball11 in room2, ball9 is picked from room3 with rgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball2 in room3, from room3, robot1's lgripper1 picks up ball3, in room3, robot1's rgripper1 drops ball7, rgripper1 of robot1 drops ball5 in room1, ball1 is dropped in room1 with rgripper1 by robot1, from room2, robot1's rgripper1 picks up ball11, from room1, robot1's lgripper1 picks up ball1, lgripper1 of robot1 drops ball10 in room3, ball7 is picked from room3 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball4 in room3, from room2, robot1's rgripper1 picks up ball2, rgripper1 of robot1 picks up ball10 in room2, lgripper1 of robot1 picks up ball10 in room1, from room2, robot1's lgripper1 picks up ball8, rgripper1 of robot1 picks up ball4 in room3, from room1, robot1's lgripper1 picks up ball7, in room1, robot1's rgripper1 drops ball10, lgripper1 of robot1 picks up ball10 in room3, ball8 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball9 is dropped in room1 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 drops ball10 in room3, ball8 is dropped in room2 with rgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball4, in room2, robot1's lgripper1 drops ball1, rgripper1 of robot1 drops ball10 in room2, lgripper1 of robot1 drops ball4 in room2, ball3 is picked from room3 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball4, in room2, robot1's lgripper1 drops ball5, lgripper1 of robot1 drops ball7 in room3, ball11 is picked from room2 with lgripper1 by robot1, in room1, robot1's lgripper1 drops ball10, robot1 moves to room3 from room1, from room3, robot1's rgripper1 picks up ball8, lgripper1 of robot1 picks up ball9 in room3, lgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 drops ball2 in room2, in room2, robot1's rgripper1 drops ball5, in room3, robot1's lgripper1 drops ball8, ball8 is dropped in room1 with rgripper1 by robot1, from room1, robot1's lgripper1 picks up ball11, ball3 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, ball11 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball6 in room1, in room2, robot1's rgripper1 drops ball6, from room2, robot1's lgripper1 picks up ball9, ball1 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, lgripper1 of robot1 drops ball2 in room1, lgripper1 of robot1 drops ball2 in room2, from room3, robot1's lgripper1 picks up ball6, rgripper1 of robot1 picks up ball11 in room1, ball6 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 drops ball5 in room1, ball9 is picked from room2 with rgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, rgripper1 of robot1 picks up ball4 in room2 and rgripper1 of robot1 picks up ball3 in room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is located at room3, ball4 is located at room2, ball5 is present at room2, ball6 is located at room1, ball7 is present at room2, ball8 is located at room1, ball9 is located at room2, lgripper1 of robot1 is free, rgripper1 of robot1 is free and robot1 is at room2.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d2bad255-4828-4278-b43e-0c824b93a172", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that ball7 is being carried by robot1's rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2f8fab67-4b50-4bc8-b2ae-fbcd0124f848", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 picks up ball7 in room2, is it True or False that robot1 is not carrying ball7 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2789acec-1172-458b-9532-3868ef010820", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, if rgripper1 of robot1 picks up ball7 in room2, is it True or False that robot1 is carrying ball7 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dde7fa5b-6056-4491-9412-a685bdd35c26", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that ball2 is being carried by robot1's lgripper1?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "eb1e03f7-8361-43db-99fe-5d1e66b3f3e7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that robot1's rgripper1 is not available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4b40a994-f8ca-4469-80cf-b5a49e4b07fe", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, if rgripper1 of robot1 picks up ball7 in room2, is it True or False that robot1's rgripper1 is free?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "34e3389b-c797-4afd-ad57-a184c37e390b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, if rgripper1 of robot1 picks up ball7 in room2, is it True or False that robot1's rgripper1 is not available?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d52e582f-c655-4eba-b961-3baadd49d0fa", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that robot1's lgripper1 is not free?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "51a74506-65ec-446a-a87d-a1b62f944497", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that ball7 is not located at room2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7e28fc86-1fc9-4d03-8fd6-ff9d55e2a5d0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that ball7 is located at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f8fe64ee-6b2a-48ac-b054-a68472f63841", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that ball7 is not located at room2?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "846a98ed-2a07-429e-8b4d-04969d5b9d74", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that ball8 is at room2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "490af382-2e74-48ff-a12f-dca8c87074b5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if from room2, robot1's rgripper1 picks up ball7, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cc79e593-2e2c-4240-9523-1b17631f7be6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, if ball7 is picked from room2 with rgripper1 by robot1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d72649b5-2355-45fa-9733-23eb21a2d519", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if ball7 is picked from room2 with rgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is at room3, ball10 is at room3, ball11 is at room3, ball2 is located at room1, ball3 is at room3, ball5 is located at room2, ball6 is at room1, ball8 is at room1, ball9 is present at room2, lgripper1 of robot1 is carrying ball4, rgripper1 of robot1 is carrying ball7 and robot1 is present in room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "38237ab3-4c73-44db-9d88-ef70cbb778b5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, if ball7 is picked from room2 with rgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not being carried by robot1's rgripper1, ball1 is not located at room2, ball1 is not present at room1, ball10 is not at room2, ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball10 is not located at room1, ball11 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball11 is not located at room1, ball11 is not present at room2, ball2 is not at room3, ball2 is not present at room2, ball3 is not at room1, ball3 is not present at room2, ball4 is not at room1, ball4 is not located at room2, ball4 is not present at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room1, ball5 is not present at room3, ball6 is not at room3, ball6 is not located at room2, ball7 is not at room2, ball7 is not at room3, ball7 is not present at room1, ball8 is not at room2, ball8 is not at room3, ball8 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not located at room3, robot1 is not present in room1, robot1's lgripper1 is not available and robot1's rgripper1 is not free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9a0128eb-eae7-4d6c-84c2-6f34e0105c7a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 picks up ball7 in room2, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is located at room3, ball1 is not at room1, ball1 is not located at room2, ball10 is at room3, ball10 is not being carried by robot1's lgripper1, ball10 is not located at room2, ball10 is not present at room1, ball11 is at room3, ball11 is not located at room2, ball11 is not present at room1, ball2 is at room1, ball2 is not being carried by robot1's rgripper1, ball2 is not located at room2, ball2 is not present at room3, ball3 is at room3, ball3 is not present at room1, ball3 is not present at room2, ball4 is being carried by robot1's lgripper1, ball4 is not at room2, ball4 is not located at room1, ball4 is not present at room3, ball5 is at room2, ball5 is not at room1, ball5 is not present at room3, ball6 is not at room2, ball6 is not present at room3, ball6 is present at room1, ball7 is not at room2, ball7 is not located at room1, ball7 is not present at room3, ball8 is at room1, ball8 is not at room3, ball8 is not being carried by robot1's rgripper1, ball8 is not located at room2, ball9 is located at room2, ball9 is not located at room3, ball9 is not present at room1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball9, robot1 is at room2, robot1 is not at room3, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not located at room1, robot1's lgripper1 is not available and robot1's rgripper1 is not free", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a49a75bd-556b-4454-a8ce-2c8774ca7dcf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if ball7 is dropped in room1 with rgripper1 by robot1, is it True or False that ball7 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a2f44906-77cd-4263-ad76-d56250aae19e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that rgripper1 of robot1 is carrying ball7?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "27a70e5f-c4db-4aef-ba82-a77cfb9be08b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, if in room1, robot1's rgripper1 drops ball7, is it True or False that robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b32cf6da-80bf-4a78-80ef-7bae89fb0a5a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that robot1 is carrying ball8 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fa7fe91f-0bf2-4137-acc2-c3af08a982d3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that robot1's rgripper1 is free?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "04ebe275-c683-466f-b185-d2d2af9741ef", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if ball7 is dropped in room1 with rgripper1 by robot1, is it True or False that robot1's rgripper1 is not free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "86a6aad4-c848-42ec-a908-c2bc952cfa28", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, if in room1, robot1's rgripper1 drops ball7, is it True or False that robot1's rgripper1 is available?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "73069c30-2098-4c01-837d-a17a3c4cf729", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that lgripper1 of robot1 is not free?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6f31d3e4-876b-4cbf-a786-0d0333f9e2df", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that ball7 is present at room1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b223b183-d71e-4569-aaa8-3589426f9590", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, if in room1, robot1's rgripper1 drops ball7, is it True or False that ball7 is not present at room1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e0335a3f-2657-4ab0-b1ad-e207ea4e72f5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, if in room1, robot1's rgripper1 drops ball7, is it True or False that ball7 is at room1?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cd99ef42-8ab7-41fb-a66d-ab10261e35d6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that ball9 is present at room1?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d983a078-93f3-466d-84cc-71647b0a996f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if in room1, robot1's rgripper1 drops ball7, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1640230c-2d33-4aef-bc85-914805af2f1f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fb8d88c9-9ab5-4990-bdbe-1d01e79bc02b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is present at room3, ball10 is at room3, ball11 is located at room3, ball2 is being carried by robot1's lgripper1, ball3 is present at room3, ball4 is located at room1, ball5 is located at room2, ball6 is present at room1, ball7 is present at room1, ball8 is present at room1, ball9 is located at room2, rgripper1 of robot1 is free and robot1 is present in room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f9d97d03-8891-4e23-bcfe-f093411e943f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, if rgripper1 of robot1 drops ball7 in room1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not being carried by robot1's lgripper1, ball1 is not located at room2, ball10 is not at room1, ball10 is not located at room2, ball11 is not at room1, ball11 is not present at room2, ball2 is not at room3, ball2 is not located at room2, ball2 is not present at room1, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room1, ball3 is not located at room2, ball4 is not being carried by robot1's rgripper1, ball4 is not present at room2, ball4 is not present at room3, ball5 is not at room1, ball5 is not located at room3, ball6 is not at room2, ball6 is not at room3, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room2, ball7 is not located at room3, ball8 is not at room3, ball8 is not present at room2, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room1, ball9 is not present at room3, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball8, robot1 is not at room3, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not present in room2 and robot1's lgripper1 is not available", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ffc2eb0b-cc90-48d5-aaf1-edcd5b7182e3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, if in room1, robot1's rgripper1 drops ball7, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is at room3, ball1 is not being carried by robot1's lgripper1, ball1 is not located at room2, ball1 is not present at room1, ball10 is at room3, ball10 is not being carried by robot1's lgripper1, ball10 is not present at room1, ball10 is not present at room2, ball11 is not at room1, ball11 is not at room2, ball11 is present at room3, ball2 is not at room1, ball2 is not located at room2, ball2 is not located at room3, ball3 is not at room1, ball3 is not present at room2, ball3 is present at room3, ball4 is at room1, ball4 is not being carried by robot1's lgripper1, ball4 is not located at room2, ball4 is not located at room3, ball5 is not at room3, ball5 is not present at room1, ball5 is present at room2, ball6 is at room1, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room3, ball6 is not present at room2, ball7 is not at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not present at room3, ball7 is present at room1, ball8 is at room1, ball8 is not located at room2, ball8 is not present at room3, ball9 is located at room2, ball9 is not at room1, ball9 is not at room3, lgripper1 of robot1 is carrying ball2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is free, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball9, robot1 is at room1, robot1 is not at room2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not located at room3 and robot1's lgripper1 is not free", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "18912508-94c4-4d94-8238-8a339c3b878a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if in room3, robot1's rgripper1 drops ball6, is it True or False that ball6 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7db536eb-3fb5-4dc9-b0ff-0015058e6bf7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball6 in room3, is it True or False that rgripper1 of robot1 is carrying ball6?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "52e7c866-01ce-4f2c-8052-3cee07054937", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, if rgripper1 of robot1 drops ball6 in room3, is it True or False that ball6 is not being carried by robot1's rgripper1?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "19e81dcd-3098-4593-abb1-d27bc1e742b0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if ball6 is dropped in room3 with rgripper1 by robot1, is it True or False that lgripper1 of robot1 is not carrying ball5?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9c342e65-5043-46c5-bb3c-87142c10744e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball6 in room3, is it True or False that robot1's rgripper1 is free?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a3ec5a24-e112-423c-b913-9edd9a0efc25", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, if ball6 is dropped in room3 with rgripper1 by robot1, is it True or False that rgripper1 of robot1 is not free?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "da4f7ab5-df50-4822-ad73-14a1a9d13553", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if in room3, robot1's rgripper1 drops ball6, is it True or False that robot1's rgripper1 is available?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "109dd630-d8db-4935-95b8-ff4a3a361a8e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if ball6 is dropped in room3 with rgripper1 by robot1, is it True or False that robot1's rgripper1 is not available?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "51c164f1-b67c-4482-bb34-c235c9d9485d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, if ball6 is dropped in room3 with rgripper1 by robot1, is it True or False that ball6 is present at room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b2dc94c6-5884-49db-999c-a4380ecb7215", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, if rgripper1 of robot1 drops ball6 in room3, is it True or False that ball6 is not present at room3?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "934fbc37-bd30-4a47-895b-60ae6b770499", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if in room3, robot1's rgripper1 drops ball6, is it True or False that ball6 is at room3?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4d88d975-31b5-4479-81dc-834ced559a56", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if in room3, robot1's rgripper1 drops ball6, is it True or False that ball7 is located at room1?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "81580195-05a5-4020-9322-4ff451f7ffab", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, if in room3, robot1's rgripper1 drops ball6, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "19a2c671-3cbe-4f19-a2e8-5d10e7ed22b3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, if ball6 is dropped in room3 with rgripper1 by robot1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "811ab398-4f44-484d-ada6-77268039c4c8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, if rgripper1 of robot1 drops ball6 in room3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is at room3, ball10 is at room3, ball11 is being carried by robot1's lgripper1, ball2 is located at room3, ball3 is present at room3, ball4 is located at room1, ball5 is at room2, ball6 is located at room3, ball7 is present at room1, ball8 is located at room1, ball9 is at room2, robot1 is at room3 and robot1's rgripper1 is free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "390752d4-ff2f-4a93-b611-2d0ccaa0674c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, if ball6 is dropped in room3 with rgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not being carried by robot1's lgripper1, ball1 is not located at room2, ball1 is not present at room1, ball10 is not at room2, ball10 is not being carried by robot1's lgripper1, ball10 is not present at room1, ball11 is not at room2, ball11 is not at room3, ball11 is not located at room1, ball2 is not present at room1, ball2 is not present at room2, ball3 is not located at room2, ball3 is not present at room1, ball4 is not at room3, ball4 is not located at room2, ball5 is not being carried by robot1's rgripper1, ball5 is not located at room3, ball5 is not present at room1, ball6 is not being carried by robot1's rgripper1, ball6 is not located at room1, ball6 is not present at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not present at room2, ball7 is not present at room3, ball8 is not at room3, ball8 is not present at room2, ball9 is not being carried by robot1's lgripper1, ball9 is not located at room1, ball9 is not located at room3, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball7, robot1 is not at room1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not present in room2 and robot1's lgripper1 is not available", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9b1e351b-36b0-40cb-aece-1e61fe602131", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, if in room3, robot1's rgripper1 drops ball6, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is located at room3, ball1 is not located at room2, ball1 is not present at room1, ball10 is at room3, ball10 is not at room2, ball10 is not being carried by robot1's lgripper1, ball10 is not present at room1, ball11 is not located at room3, ball11 is not present at room1, ball11 is not present at room2, ball2 is located at room3, ball2 is not at room2, ball2 is not being carried by robot1's lgripper1, ball2 is not located at room1, ball3 is not being carried by robot1's lgripper1, ball3 is not present at room1, ball3 is not present at room2, ball3 is present at room3, ball4 is not at room3, ball4 is not being carried by robot1's lgripper1, ball4 is not present at room2, ball4 is present at room1, ball5 is at room2, ball5 is not at room3, ball5 is not present at room1, ball6 is at room3, ball6 is not being carried by robot1's lgripper1, ball6 is not located at room2, ball6 is not present at room1, ball7 is not at room2, ball7 is not present at room3, ball7 is present at room1, ball8 is not located at room2, ball8 is not present at room3, ball8 is present at room1, ball9 is not at room1, ball9 is not present at room3, ball9 is present at room2, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball8, robot1 is carrying ball11 with lgripper1, robot1 is located at room3, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not located at room2, robot1 is not present in room1, robot1's lgripper1 is not free and robot1's rgripper1 is free", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0fef337b-3bcd-4725-a37d-0cff515ae4ad", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if robot1 moves to room2 from room1, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e6891d14-a54d-4f2b-9aaa-c8eb7299e7db", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, if from room1, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d13dc4eb-cad0-42e4-a7d4-71a1d50c5053", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if from room1, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "99cfd2ef-7586-4665-a056-6ed342b1986f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if robot1 moves from room1 to room2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "66baabe9-5727-4311-9989-f4b0d541f094", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if from room1, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2f732960-4feb-46ec-9a62-a7691856806d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if robot1 moves to room2 from room1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4039c3d6-4167-4497-9195-7e0e79426f1e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if from room1, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "bf414048-7f4e-405a-802b-4088a81c12c9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if robot1 moves to room2 from room1, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "16d1d088-51fd-4603-a0e6-9ae21d018c3e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room2, is it True or False that robot1 is not present in room1 and robot1 is present in room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "080172cb-e8ee-4155-bfad-2906206ea1eb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, if robot1 moves from room1 to room2, is it True or False that robot1 is at room1 and robot1 is present in room2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dcee2f3f-eb11-4767-98fd-97955f3486f9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room2, is it True or False that robot1 is not located at room1 and robot1 is present in room2?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7f6ac116-1df6-4b90-be24-41d0eb74de90", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room2, is it True or False that ball11 is not present at room3 and ball6 is not at room2?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ff4b234e-7dd2-4129-93b4-daca1556286d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, if from room1, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "39e73bd2-019a-46ca-a39f-d98eb524e9c4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if from room1, robot1 moves to room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "86312a1b-da86-4f36-b07c-41ffbbd49dad", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, if from room1, robot1 moves to room2, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is located at room3, ball10 is at room3, ball11 is present at room1, ball2 is present at room3, ball3 is being carried by robot1's rgripper1, ball4 is at room1, ball5 is at room2, ball6 is present at room3, ball7 is present at room1, ball8 is being carried by robot1's lgripper1, ball9 is present at room2 and robot1 is present in room2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4a36a7d2-ddcb-4af3-be23-3f71dc74b7f1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, if robot1 moves to room2 from room1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not at room1, ball1 is not at room2, ball1 is not being carried by robot1's rgripper1, ball10 is not being carried by robot1's lgripper1, ball10 is not located at room1, ball10 is not located at room2, ball11 is not located at room2, ball11 is not present at room3, ball2 is not being carried by robot1's lgripper1, ball2 is not present at room1, ball2 is not present at room2, ball3 is not at room2, ball3 is not located at room1, ball3 is not located at room3, ball4 is not being carried by robot1's rgripper1, ball4 is not located at room2, ball4 is not located at room3, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room1, ball5 is not located at room3, ball6 is not at room1, ball6 is not being carried by robot1's lgripper1, ball6 is not present at room2, ball7 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's rgripper1, ball7 is not located at room2, ball7 is not located at room3, ball8 is not at room1, ball8 is not located at room2, ball8 is not present at room3, ball9 is not at room3, ball9 is not being carried by robot1's rgripper1, ball9 is not located at room1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball9, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not present in room1, robot1 is not present in room3 and robot1's rgripper1 is not free", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "80669d46-6bdc-4697-8062-fc1d32677fb7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room2 from room1, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is not at room2, ball1 is not located at room1, ball1 is present at room3, ball10 is at room3, ball10 is not at room1, ball10 is not being carried by robot1's rgripper1, ball10 is not present at room2, ball11 is located at room1, ball11 is not being carried by robot1's rgripper1, ball11 is not present at room2, ball11 is not present at room3, ball2 is at room3, ball2 is not at room2, ball2 is not present at room1, ball3 is being carried by robot1's rgripper1, ball3 is not located at room1, ball3 is not present at room2, ball3 is not present at room3, ball4 is at room1, ball4 is not at room3, ball4 is not located at room2, ball5 is at room2, ball5 is not being carried by robot1's lgripper1, ball5 is not located at room1, ball5 is not present at room3, ball6 is not at room2, ball6 is not located at room1, ball6 is present at room3, ball7 is at room1, ball7 is not at room3, ball7 is not being carried by robot1's rgripper1, ball7 is not present at room2, ball8 is not at room1, ball8 is not located at room3, ball8 is not present at room2, ball9 is not being carried by robot1's rgripper1, ball9 is not located at room1, ball9 is not located at room3, ball9 is present at room2, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball8, robot1 is at room2, robot1 is carrying ball8 with lgripper1, robot1 is not at room3, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not present in room1, robot1's lgripper1 is not free and robot1's rgripper1 is not available", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1b1b749b-9be9-484d-be42-a034282719c0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_1", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, if robot1 moves from room2 to room3, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "375fc2fe-0c5c-413c-9316-ced846de71c9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_2", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room2 to room3, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0122f047-3879-4f72-afbf-1918e5243b6d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_3", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, if robot1 moves to room3 from room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1127476f-17d9-4948-9eb2-8398bacdc159", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_4", "fluent_type": "base_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room2 to room3, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "624f2607-a822-41ce-85e6-ae5cb92eb21a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_5", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, if robot1 moves to room3 from room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "aaf49078-565b-4a81-b378-7b5b0902c4c1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_6", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room3 from room2, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c38c7c4a-5b2a-4ed1-9878-b0acf30f24d5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_7", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves to room3 from room2, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "468c3bed-3d1f-442b-95da-5018b56b0284", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_8", "fluent_type": "derived_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room2 to room3, is it True or False that no properties of the state change?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "42075bbb-9174-4e85-890c-c2d85f3fca18", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_9", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, if robot1 moves to room3 from room2, is it True or False that robot1 is located at room3 and robot1 is not present in room2?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d737bbc4-2c19-441c-b134-2e28b14b88e4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_10", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, if robot1 moves to room3 from room2, is it True or False that robot1 is not located at room3 and robot1 is not present in room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "96be4c90-ea7d-4fc4-b9de-2b443d009959", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_11", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, if from room2, robot1 moves to room3, is it True or False that robot1 is not at room2 and robot1 is present in room3?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "62be8e33-4986-4a07-849f-af6983daa31b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_12", "fluent_type": "persistent_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if from room2, robot1 moves to room3, is it True or False that ball11 is at room3 and ball8 is not present at room2?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "43a2dcc6-d7e7-46cb-bce2-cffa831a48bc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_13", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, if robot1 moves from room2 to room3, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "31aedc57-7660-4b9f-8ead-fab8b680b9af", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_1_question_15", "fluent_type": "static_fluents", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if from room2, robot1 moves to room3, is it True or False that no properties of the state change?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "64fb3219-64aa-4fe4-8ea2-303fbea0d162", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, if robot1 moves from room2 to room3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball1 is at room3, ball10 is located at room3, ball11 is at room1, ball2 is located at room3, ball3 is present at room2, ball4 is present at room1, ball5 is located at room2, ball6 is present at room3, ball7 is located at room1, ball8 is at room2, ball9 is being carried by robot1's lgripper1, rgripper1 of robot1 is free and robot1 is located at room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0197894b-02a2-42e5-88d6-8b5b007fd1dd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room2 to room3, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "ball1 is not being carried by robot1's rgripper1, ball1 is not located at room2, ball1 is not present at room1, ball10 is not at room2, ball10 is not being carried by robot1's rgripper1, ball10 is not present at room1, ball11 is not at room3, ball11 is not being carried by robot1's rgripper1, ball11 is not located at room2, ball2 is not at room1, ball2 is not present at room2, ball3 is not at room1, ball3 is not being carried by robot1's lgripper1, ball3 is not located at room3, ball4 is not located at room2, ball4 is not present at room3, ball5 is not located at room3, ball5 is not present at room1, ball6 is not at room1, ball6 is not being carried by robot1's rgripper1, ball6 is not located at room2, ball7 is not located at room3, ball7 is not present at room2, ball8 is not at room1, ball8 is not being carried by robot1's lgripper1, ball8 is not located at room3, ball9 is not at room1, ball9 is not located at room2, ball9 is not located at room3, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball9, robot1 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1 and robot1 is not located at room2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b9cbd257-065e-4713-9305-e1b1e565ef86", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "effects", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, if robot1 moves from room2 to room3, what would be all of the properties of the state? Write None if there are none.", "answer": "ball1 is located at room3, ball1 is not being carried by robot1's lgripper1, ball1 is not located at room1, ball1 is not located at room2, ball10 is located at room3, ball10 is not located at room1, ball10 is not present at room2, ball11 is located at room1, ball11 is not at room2, ball11 is not being carried by robot1's rgripper1, ball11 is not present at room3, ball2 is located at room3, ball2 is not being carried by robot1's rgripper1, ball2 is not present at room1, ball2 is not present at room2, ball3 is located at room2, ball3 is not at room1, ball3 is not at room3, ball3 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is at room1, ball4 is not at room3, ball4 is not being carried by robot1's lgripper1, ball4 is not present at room2, ball5 is at room2, ball5 is not at room1, ball5 is not being carried by robot1's rgripper1, ball5 is not present at room3, ball6 is not at room1, ball6 is not at room2, ball6 is not being carried by robot1's lgripper1, ball6 is present at room3, ball7 is at room1, ball7 is not at room2, ball7 is not located at room3, ball8 is located at room2, ball8 is not being carried by robot1's rgripper1, ball8 is not located at room1, ball8 is not located at room3, ball9 is not at room2, ball9 is not at room3, ball9 is not being carried by robot1's rgripper1, ball9 is not present at room1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not free, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball6, robot1 is at room3, robot1 is carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not located at room2, robot1 is not present in room1 and robot1's rgripper1 is available", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is present at room3, ball10 is at room3, ball11 is present at room3, ball2 is at room1, ball3 is present at room3, ball4 is present at room2, ball5 is at room2, ball6 is at room1, ball7 is present at room2, ball8 is located at room1, ball9 is at room2, robot1 is at room2, robot1's lgripper1 is available and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8e870bf7-f7e8-413b-bb48-4778964be09c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7e9d5480-c255-4af7-845b-a6da75c83c72", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is the number of objects equal to 14? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0e4cfb9e-0be1-4b22-aa70-3a2bdf4ba236", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c389e05e-a110-45b5-8f67-6ba6e4a333a9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f8f0cfec-157f-41d8-aa4b-e8be27b2c2ed", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 132? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ce6496f8-df0e-411d-b39f-1269fff3d8e5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is the number of inexecutable actions equal to 152? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "130a32ee-9924-4593-a9c3-412218e1fb8f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 13? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "31540101-09c6-4fd1-9379-be39a9126b03", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is the number of valid properties of the state equal to 14? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ea539dc2-7d59-4dfd-bf80-047615d6a458", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 47? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3830a128-a915-44f4-bab0-c0164bda4896", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 40? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cd8ddc58-8977-4756-8792-956656dd0e44", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "505a2cfa-1f8d-44f0-ab28-bff35c41bcf0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of base properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "12a4588d-fb4b-4bc7-810e-9577a1aac1ee", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d50315d3-6cd5-4402-af63-96d2d2b1656c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, is the number of derived properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "418844a6-89c4-4203-a527-0529d80cfe57", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0626d00c-eb2b-4d98-b5b6-36117112596c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0b66abc4-032e-4d21-9d85-931fc05d15ee", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e4c19f3d-77d1-4d11-a089-4716676a75d6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "827d8b93-623e-4201-b67a-8bb351f20d73", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0d3d9c00-5f62-4bc5-adb7-d167507c7791", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "611f0494-1231-495b-bbd1-061783fa1527", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "132", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "feade7f8-bee3-494d-924c-dd96f3460415", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "13", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8d52341a-6dde-4fff-9fa5-c912ed0b0cba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "47", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "083586f3-fef8-4061-9a37-6645253edf61", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c3f6f17c-09f6-43c8-81ca-776f6ee78bbd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2d62a534-9a23-405c-861f-231ad2c860e1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c405dbbe-091c-4ca8-8b38-8580caf18d90", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "49ed34d3-48e1-435d-a38d-c61952dd5e78", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "965ad9d9-ba71-4213-8c7a-36c78d63b9b4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2a9fd070-8c4b-4e3a-8c78-23762a845a9b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is dropped in room2 with lgripper1 by robot1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ddc645c1-8389-4de7-98ee-0a9fcc79ce2e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a999bb43-b6bc-4783-ba93-e6dd508c04f3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ddd589cd-ae89-4037-b614-7e48bc9b96ca", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fe38ab38-f02f-4d08-81b7-3d3d74e5ef0e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fcff59c9-7fd6-4696-8bdd-99760d0d5d1c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is the number of inexecutable actions equal to 134? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "041a525d-dbe5-4f03-8b65-6f1c0883b6f4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is the number of inexecutable actions equal to 119? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ff25e784-3037-4b8e-9a65-141cd5a2f2d4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of valid properties of the state equal to 12? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ec3ee715-3623-427d-8a97-dce8ed849164", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 10? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f23c4101-e521-4ef6-87d2-f30d0b5f8e20", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 48? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dbee19e3-d1f0-4128-b0bd-14be23cf491a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 40? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3072f11f-52e2-4eec-bec0-dcce716808a0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "74d7c2ab-4bd1-4c0c-aabb-f0bc1a3b16f1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d35c9cc8-85ea-4043-b137-af5e23648bce", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7977bcc7-fc1c-4a84-bad3-a85889c36656", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "aaa235bc-af5b-488b-ada9-80e1fa76e695", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a04ea00a-56d0-4cb7-98b0-18ca71b81cd1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1e71666a-1028-4736-bbb0-12af1d70b08f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "19434a8e-0851-4be1-99ec-b7e24d205c95", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "535281ee-ff55-4a28-8ca8-986ad9518c57", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c30d5a18-c02a-4971-9719-d17c429a08bc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "4", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4a291ff0-45bf-4ec5-b060-57adaf7003d3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "134", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "17343691-1473-4d31-a5d2-10bb87d0f4dc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "12", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5c3ba821-d6b1-4209-b227-7108ff951b6d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "48", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2da51357-7f79-4e16-b16b-eaa19e4f9455", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "032a9b2a-aabf-4a66-9017-f04dfdf9a11c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6896fb1a-c254-49de-8380-243e1ec4c5a6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "44a33625-c455-44fa-9cba-cdba3892d122", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cf24ed1b-8222-4d54-9765-9757d7d9b001", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0aa416ed-9302-44d0-8c11-a2dc7f2d037b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b90adfeb-21b8-47ec-b14d-c18b71d2cbd9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 drops ball8 in room3, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "0", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "69cdcb3d-a0e8-4dd9-bd94-35976234c50c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a4432a28-be1a-49c6-9220-c52a303763d5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of objects equal to 21? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ef9a377f-8d64-427a-a70b-912870e6cbfc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5f7b01a3-efae-44cf-b555-cb2a77a5c635", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "718eb5d7-5ccf-4ce0-9c1c-fef0506adb63", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is the number of inexecutable actions equal to 134? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "07df72e6-7666-4e63-abf0-626060d0e1e5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of inexecutable actions equal to 155? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ad24d98e-344a-4905-8395-e24fd1587b3e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 12? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c8e3e670-a22e-48e1-9899-71036524e30b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "072cc199-3f3e-466c-ba6a-f28c4fa04e00", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 48? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e0ede004-2619-44f2-9485-fa39ee834105", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 44? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "905e4496-9083-415e-aec1-ab5dfe8451e6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dccc04cc-389f-4393-8058-e0879082a354", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f8f82d19-7c4a-4ddf-8c7b-f6a01ac75671", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "949dadc0-2362-451c-9306-0a85b572256a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d147da71-47e3-4d91-a807-0f5013b09d6a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "64d3f77c-8ef7-48d2-8f4a-b3571f681352", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "da971e48-4478-489c-8aef-b45e8a0a5496", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ab4e8999-8406-475b-bef4-9b461d519364", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is the number of static properties of the state equal to 3? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "eaa3df57-0fbf-4085-b08a-576dad0d3205", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "03135e6a-2270-46d9-a83f-2e8a2ee2d628", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "4", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "873bef5d-7b87-4c3c-b71a-65d002aa3974", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "134", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2e71f69c-4b2c-4438-a6d4-0837a19deaee", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "12", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1ea76c93-a346-4fa1-8569-8908817f5079", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "48", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e922c810-a401-41f9-8041-3694e8acb7b4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "83b2794a-bbdb-4da0-b30c-9b9de503077b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "494ec77d-b8ce-411f-8f64-f73b900dbbca", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8aeb2c80-6e72-478f-926a-b6c7c83e8fca", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4f4f23ec-e2a8-400e-8bc9-b2b8ccb1c815", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c52d3208-a8fe-49b5-babd-6e30ddecbc7d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8df75429-8abf-4824-bcf3-f5b0681acd9e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 picks up ball10 in room2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "8", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4f5ef4be-e2d5-48f2-9403-b5aa57dd6448", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6821a6c7-c45f-47dc-90e5-dd92aa5df336", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c1026980-817c-46d1-a94c-f91ebce7d3ba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "df1c6eb4-6b9a-4634-822d-58d49133853f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ae0c7ffe-8ebf-4755-91f1-fe1c903fc023", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is the number of inexecutable actions equal to 134? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e5aa0081-d45d-470d-a249-b4b5506bad0d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is the number of inexecutable actions equal to 139? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b1068022-694d-4fe1-8560-5c632a220df8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is the number of valid properties of the state equal to 12? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a5f16cb4-3644-4132-98e9-3d8a26d427f5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is the number of valid properties of the state equal to 10? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5ab97c24-fc38-4a65-8d86-d499a43ccc31", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 48? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "05b9c2a7-f502-4ff9-bacd-7a1a154d75ab", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 38? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4d917aa6-3376-465b-afc8-9c3ae506e5fb", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "03506dec-911b-4e70-9997-417468cdceba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d0b30668-5815-4593-b2e3-dcb00f3a6a2f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "439b0e61-9294-4c6b-9f02-7eeab3f7ea49", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "358320ba-feea-4f99-ba9b-18463e181f53", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d5ec03e4-f81a-41c7-a89e-0a8f43864dd9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of self constraint properties of the state equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9060d7fc-411c-423e-b3a2-816fe6ede3ef", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4cdf9d65-f349-4801-870d-8a9c48648ebc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f45f1c08-0122-43db-8c55-5d8679fd9aa9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4c7c97ac-f736-4ef4-b8bf-5a6407418d21", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "4", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "21c359b4-4039-4994-97c0-62baef01818e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "134", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a11dc907-25c9-4289-bdbe-83ba98a777a1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "12", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "65ef3f90-ac92-4950-9cd6-f7bb734c65d8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "48", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "da8e6732-4484-4129-9be7-266bc16ed3b4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "15414b0e-13eb-4609-a8cc-274412101be1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "acf2ba48-44bd-4093-a3d7-7e4cffb2f51a", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4f0cacde-61e2-4369-9d16-fd7a215bc5ba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3b48c5b1-4732-440c-850e-b9cf240c276f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e6cb14f2-942d-49c7-b961-4782c5452439", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 14?", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c3cedcb0-eeca-40a4-b9d3-5c5b2db92260", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "5", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "65b2eee8-74dc-4ecc-bc65-f80e7fa5cc0b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "65a41671-6716-49e3-b73d-6625b1729aff", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of objects equal to 14? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1ab9212c-ccb6-45ae-b693-66a05e82f7ef", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "76ae240e-4e35-4131-958b-217751f1108b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f6ed6127-5a36-4528-94b0-e3899e55ea6f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_5", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of inexecutable actions equal to 132? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4e2987ef-cf21-4e06-8244-678a31f558a6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_6", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 120? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b5ea2d12-e998-42dd-a06f-417f29e2810c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_7", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of valid properties of the state equal to 13? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "27c52df9-f9cb-412c-a535-fad8e83002cc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_8", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of valid properties of the state equal to 15? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "55fb24e2-f295-4235-b257-a72d814d3d98", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 47? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f967e56c-74aa-466e-b280-43d7d4debf20", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of valid properties of the state that involve negations equal to 37? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1c66b53c-913e-4b06-afc7-d557eeac5336", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of base properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a7c62b9e-3843-4894-9317-80c11b43cd9d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_12", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of base properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7e965541-24a9-456b-b3ed-7ac0facadc06", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_13", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is the number of derived properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2f354e1e-452f-43e2-8f0b-cad1eda11a2d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_14", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of derived properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8a27cc21-0721-4a85-8cbd-e46db137b973", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_15", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of self constraint properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f3a64888-d20d-4d83-9900-9e97816eeb2e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_16", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is the number of self constraint properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fa65e88d-789a-4335-bb68-49917a1ad95c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_17", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 2? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "49b21aed-793b-461d-890e-23f7e33490f9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_1_question_18", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is the number of static properties of the state equal to 1? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8623decf-11ff-4c44-89cd-9af45d6d2efe", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of objects? Write as an integer. Write None if there are none.", "answer": "17", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "20636c65-74db-412d-b03c-8f680ae0ad9f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of executable actions? Write as an integer. Write None if there are none.", "answer": "6", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1839f142-5ebc-43a1-92d2-7e98a791dd89", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as an integer. Write None if there are none.", "answer": "132", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "58e44eea-0e18-4ede-9935-9b9e83e19b29", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as an integer. Write None if there are none.", "answer": "13", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "62dd13da-b0d8-42e4-ae04-a0ba65db3517", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as an integer. Write None if there are none.", "answer": "47", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d0d6db98-5367-4c31-80b5-fba85ea4e562", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_6", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, what is the total number of base properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3684c7ff-a2b6-489a-b860-2fd66ad291fc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of derived properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "960a3664-6619-43d5-95cc-42e002d761ab", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_8", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, what is the total number of self constraint properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "00ff0dd4-7ab2-47ea-bd48-424a90278e59", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, what is the total number of static properties of the state? Write as an integer. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "894ee177-e0f6-4c29-9ef2-422089a0314e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "62cff235-8046-496a-a253-9dfa31cd9da4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2fa1d8a7-74e0-4830-9094-fc63435ae55f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "numerical_reasoning", "question_name": "question_4", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's rgripper1 drops ball1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. How many actions are there before the first inexecutable action? Write as an integer. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball2 is present at room1, ball3 is present at room3, ball4 is at room2, ball5 is located at room2, ball6 is at room1, ball7 is at room2, ball8 is present at room1, ball9 is present at room2, robot1 is present in room2, robot1's lgripper1 is available and robot1's rgripper1 is free.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e2306804-b0f8-4705-a96c-444ba98e109e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some objects may or may not be defined. Is rgripper1 part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1a489239-db0c-409c-b3a6-37e75ec61808", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some objects may or may not be defined. Is robot2 part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "606e2b9c-d37e-4d61-8524-5c5f65d85983", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is carrying ball4 with lgripper1 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "30519174-5e0d-47ea-9345-6af62c03a4c1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's rgripper1 is available part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "19e0c83e-4a76-4c25-953f-bfa186082ca5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is located at room2 part of the state? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0c66b5fc-89de-41f4-a9c4-038a919cfd0c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball4 is loaded using robot1's lgripper1 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "891f0a8e-a2bc-4b25-a044-6c58282ebaa3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is broken part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "49faae25-ad4c-4a58-ad88-fff39c95cd7d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball2 is moved to room1 part of the state? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dbbf4418-3083-4a77-8a7e-76d318d5d5d3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is action, from room2, robot1's rgripper1 picks up ball7, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8e7d047e-563d-4053-9dbc-c1a580ccba05", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is action, rgripper1 of robot1 inspects the ball5 in room2, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9e4ce3fc-b19a-4042-86de-daab639b0cc7", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is action, from room1, robot1's lgripper1 picks up ball4, part of the domain? True or False", "answer": "True", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b02c3708-f7df-4f8a-98a0-e8a6e147f147", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, is action, ball4 is inspected in room1 with lgripper1 by robot1, part of the domain? True or False", "answer": "False", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "10bede90-b943-4588-9df5-b1179e0b1975", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball10, ball4, ball6, ball8, ball9, rgripper1, robot1 and room3, is not part of the domain? Write None if all are defined.", "answer": "ball6", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ef3e422a-9a55-41b7-a309-e490d30c82c0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball10, ball11, ball3, ball4, ball6, ball7, ball8, ball9, lgripper1, room2, room3 and room4, is not part of the domain? Write None if all are defined.", "answer": "room4", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2a73f40c-088f-445d-9506-33bbe61966a5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is present at room1, ball5 is present at room2, ball8 is located at room1 and robot1 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5ec4a36f-e22d-485a-9fe1-be8f6a227a2c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is present at room3, ball10 is at room3, ball3 is present at room3, ball5 is present at room2, ball6 is at room1, ball7 is located at room2 and ball8 is located at room1, is not defined? Write None if all are defined.", "answer": "ball7 is transported to room2", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6c41b6bf-9274-4617-9f13-8f6d77cd3fd5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball2, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball8 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3701304b-54db-4b2b-8a9e-4499577aad30", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room2, ball1 is not present at room1, ball10 is not at room1, ball11 is not at room2, ball11 is not present at room1, ball2 is not located at room2, ball2 is not present at room3, ball3 is not located at room2, ball3 is not present at room1, ball4 is not present at room1, ball5 is not at room1, ball5 is not present at room3, ball6 is not at room2, ball6 is not at room3, ball7 is not located at room1, ball7 is not located at room3, ball8 is not present at room2, ball8 is not present at room3, ball9 is not at room1 and robot1 is not present in room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dd35a3a0-22df-4a3f-9039-8e89460eeb30", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball7 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not using lgripper1 to load ball3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1586311b-aaef-475a-975c-3b7c32df7aba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not located at room2, ball11 is not present at room2, ball2 is not at room2, ball2 is not located at room3, ball3 is not at room2, ball3 is not present at room1, ball6 is not located at room3, ball7 is not at room1 and ball9 is not at room3, is not defined? Write None if all are defined.", "answer": "ball6 isn't moved to room3", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a2280ce7-e8a0-4f1d-8b51-84203f16f478", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball10 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's lgripper1, ball4 is being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball6, lgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball8 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fb54b95d-b659-489e-8992-6a29658fa692", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not available and robot1's rgripper1 is free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "74b2b264-3330-4d49-808f-ffd37cca23d0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room2, ball10 is not located at room1, ball11 is at room3, ball11 is not present at room1, ball3 is not at room1, ball3 is not at room2, ball4 is not at room1, ball4 is not at room3, ball4 is not located at room2, ball5 is located at room2, ball7 is not present at room1, ball8 is not at room2, ball8 is present at room1, ball9 is not at room1 and robot1 is located at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a469a926-24cc-45db-8b30-bcfebd6b657b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is not carrying ball8 and ball1 is not loaded using robot1's lgripper1, is not defined? Write None if all are defined.", "answer": "ball1 is not loaded using robot1's lgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "41080385-ea01-49d2-9352-a8cbb38f7ae5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is not free and rgripper1 of robot1 is free, is not defined? Write None if all are defined.", "answer": "robot1's rgripper1 is broken", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7471e5c7-60c5-4b68-a777-52f1e3558519", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room1, ball1 is not at room2, ball10 is not at room1, ball10 is not located at room2, ball10 is present at room3, ball11 is located at room3, ball11 is not located at room2, ball11 is not present at room1, ball2 is not at room2, ball2 is not present at room3, ball2 is present at room1, ball3 is located at room3, ball3 is not at room1, ball4 is not present at room1, ball4 is not present at room2, ball4 is not present at room3, ball5 is not located at room1, ball5 is not located at room3, ball5 is present at room2, ball6 is not at room3, ball6 is not present at room2, ball7 is at room2, ball7 is not at room1, ball8 is not located at room2, ball8 is not present at room3, ball8 is present at room1, ball9 is at room2, ball9 is not located at room3, robot1 is not at room1 and robot1 is not located at room3, is not defined? Write None if all are defined.", "answer": "ball4 is not transported to room1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "28d01577-9078-4664-aba8-9f3662a1cd96", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ff7377da-5754-43f6-bd20-5ebf5660bbaf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed:  and in room2, ball4 is inspected using robot1's lgripper1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "in room2, ball4 is inspected using robot1's lgripper1", "plan_length": 1, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "29fce2fe-bf79-4e80-99d5-6c9089b7c080", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some objects may or may not be defined. Is ball1 part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "01f73728-db49-4e50-b8d9-25964f9d44de", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some objects may or may not be defined. Is room4 part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "664212b1-bd95-4f24-b29a-415b6118fb28", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball2 is being carried by robot1's lgripper1 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "beb418eb-31be-437e-91a8-415f0b204b28", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's rgripper1 is not available part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e4668792-ea3e-4141-bac9-203a8ddd05fa", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball4 is at room1 part of the state? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1d20ae51-654b-4fc7-a854-011143d29bde", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball7 is loaded using robot1's rgripper1 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "33dcf7d8-3c02-4310-8d23-8c9cc36c66d4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some properties of the state may or may not be defined. Is lgripper1 of robot1 is not broken part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8b2a65a7-4676-442b-a824-12ac1db33c54", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball8 is moved to room1 part of the state? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b1cd74dc-b884-4d57-b99a-d79fbf37d8b1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, is action, lgripper1 of robot1 drops ball2 in room1, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "527e2ff4-07b1-4e95-8bc3-9efb233bc4d8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is action, ball2 is destroyed in room1 with lgripper1 by robot1, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ee28f80d-5c7d-485f-ab8b-554be2be6334", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is action, rgripper1 of robot1 picks up ball8 in room1, part of the domain? True or False", "answer": "True", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "906132f7-9e3e-47eb-b642-1260794db056", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is action, in room3, ball3 is destroyed using robot1's rgripper1, part of the domain? True or False", "answer": "False", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d180cd01-8331-4465-9539-be4d76e04e9b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball10, ball2, ball3, ball4, ball5, ball6, ball9, robot1, room1 and room3, is not part of the domain? Write None if all are defined.", "answer": "robot1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9e76f5b7-e09d-494a-b86d-6d6a83e6658c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball10, ball12, ball2, ball3, ball7, ball8, ball9, lgripper1, rgripper1, robot1, room1, room2 and room3, is not part of the domain? Write None if all are defined.", "answer": "ball12", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3d0ec7be-c6de-4dda-8576-93d03c522e75", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, rgripper1 of robot1 is carrying ball7 and robot1 is carrying ball2 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2006fc74-9001-4596-aaa2-82c5b2d9f309", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is present at room3, ball10 is present at room3, ball11 is at room3, ball3 is located at room3, ball4 is present at room1, ball5 is at room2, ball8 is at room1 and ball9 is located at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4b2295a1-9686-4ba2-84fb-92f26b732bb0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball7 is being carried by robot1's rgripper1 and robot1 is using lgripper1 to load ball2, is not defined? Write None if all are defined.", "answer": "robot1 is using lgripper1 to load ball2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "edc47155-02e4-4a2a-a9ea-caf4b490df5c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is located at room3, ball10 is present at room3, ball11 is at room3, ball3 is at room3, ball4 is located at room1, ball5 is present at room2, ball6 is located at room1, ball9 is at room2 and robot1 is at room1, is not defined? Write None if all are defined.", "answer": "ball5 is moved to room2", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a1b585ef-5460-4a01-ba96-0f4fd8b07736", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball8 with rgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "896450c7-f9e9-4071-b63e-6390a94c2b49", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_10", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1's lgripper1 is not free and robot1's rgripper1 is not available, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "00a58b3b-1db3-4170-a20f-0eaa290c103e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not present at room1, ball11 is not present at room2, ball2 is not at room2, ball3 is not at room1, ball3 is not present at room2, ball4 is not at room2, ball5 is not at room3, ball7 is not present at room3, ball8 is not present at room3, ball9 is not located at room3 and robot1 is not at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8ce89574-bfa6-489b-8679-3aea30cf41ce", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's lgripper1, ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball5 is not loaded using robot1's lgripper1, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball9 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball5 is not loaded using robot1's lgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "208f2b1f-49b8-45c5-abda-d894649e41de", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_14", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1's lgripper1 is not available and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "robot1's rgripper1 is not broken", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d62577bf-e36c-4742-bc45-b02dcf8f23f1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not present at room1, ball1 is not present at room2, ball10 is not located at room2, ball10 is not present at room1, ball11 is not at room2, ball11 is not present at room1, ball2 is not located at room3, ball2 is not present at room1, ball3 is not present at room2, ball4 is not present at room3, ball5 is not located at room3, ball6 is not present at room3, ball7 is not located at room2, ball7 is not located at room3, ball7 is not present at room1, ball8 is not present at room3, ball9 is not at room3, robot1 is not located at room2 and robot1 is not located at room3, is not defined? Write None if all are defined.", "answer": "in room3, robot1 isn't engaged", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d0a1c5c4-2e14-4278-9717-e48846a09b86", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball10 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball3, lgripper1 of robot1 is not carrying ball7, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8e5dedbf-ad66-45a2-bb33-3a4258ee5e90", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not available and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4818dc05-8e4a-4a11-80f8-020762635ef2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is at room3, ball1 is not at room1, ball10 is located at room3, ball10 is not at room2, ball10 is not located at room1, ball11 is not located at room1, ball11 is not located at room2, ball2 is not present at room2, ball2 is not present at room3, ball3 is not at room2, ball3 is not located at room1, ball3 is present at room3, ball4 is at room1, ball4 is not at room3, ball4 is not present at room2, ball5 is not at room1, ball5 is not present at room3, ball5 is present at room2, ball6 is located at room1, ball6 is not at room3, ball7 is not at room3, ball7 is not located at room2, ball8 is not present at room2, ball9 is located at room2, robot1 is located at room1, robot1 is not present in room2 and robot1 is not present in room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4f9e55b4-cf95-4d1f-84d7-755358cc4132", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not being carried by robot1's lgripper1, ball11 is not being carried by robot1's lgripper1, ball3 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball6, robot1 is carrying ball7 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball6 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball11 is not loaded using robot1's lgripper1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4f3984ec-4fd2-47c8-901f-6047cc7c86ff", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1 and from room1, robot1's lgripper1 picks up ball2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not free and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "robot1's rgripper1 is not broken", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "27b970f7-2c7b-4c09-9e43-a0714ccdfa61", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4 and lgripper1 of robot1 picks up ball2 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is located at room3, ball1 is not located at room1, ball1 is not located at room2, ball11 is located at room3, ball11 is not present at room1, ball2 is not present at room3, ball3 is present at room3, ball4 is not present at room3, ball5 is not located at room3, ball6 is at room1, ball6 is not located at room2, ball8 is not located at room2, ball8 is not located at room3, ball8 is present at room1, ball9 is present at room2, robot1 is located at room1, robot1 is not located at room2 and robot1 is not located at room3, is not defined? Write None if all are defined.", "answer": "ball8 is transported to room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d8300276-83d9-4fb3-a346-40daf3f7ef2b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1 and ball2 is picked from room1 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6b6c823d-689f-47f8-ad19-c60d13354410", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 inspects the ball2 in room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 inspects the ball2 in room1", "plan_length": 5, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "190769b1-c5ce-478f-ac76-a1df203fb74b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some objects may or may not be defined. Is ball7 part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f3a5438c-ba08-4c4e-bc3e-084642ddd9d5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some objects may or may not be defined. Is ball12 part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b67c122c-a638-4deb-97aa-e74d15b0d4b2", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is carrying ball11 with lgripper1 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4d58ef57-2546-4838-b08b-afccd53489e6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is not free part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6ab8f13f-aeb9-4280-a882-addba7e4fe01", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball2 is located at room3 part of the state? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3012cdcf-ac54-405a-acd3-6beca0f1978b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is using rgripper1 to load ball6 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "438fabac-287f-42d6-95c2-1cf8a0212909", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is not broken part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9d7fe705-e638-44ad-867e-4c2316eecc83", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball3 is transported to room3 part of the state? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d7929179-8002-4a2d-adae-8318431a1d29", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is action, from room3, robot1 moves to room2, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "80cac2d4-b271-4a14-9bea-4c87772b8d31", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, is action, in room3, ball6 is destroyed using robot1's rgripper1, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d3d7a284-4371-4e84-8c58-dc5c65a8af66", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is action, lgripper1 of robot1 picks up ball5 in room3, part of the domain? True or False", "answer": "True", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7f7a61e7-f2f6-4b10-bdf3-4695e8ab8a96", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, is action, in room2, ball10 is inspected using robot1's rgripper1, part of the domain? True or False", "answer": "False", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "863d70b1-c625-4d20-b48c-4bf54c37cf5b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball4 and room3, is not part of the domain? Write None if all are defined.", "answer": "room3", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "752280ca-3e30-475b-8fda-bac05ec70c82", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball10, ball12, ball5, room1 and room2, is not part of the domain? Write None if all are defined.", "answer": "ball12", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a30b54d3-8b77-420d-be09-c5238d7dc839", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is carrying ball11 with lgripper1 and robot1 is carrying ball6 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9301282e-51a2-4189-9958-15bcdf1e996f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is present at room3, ball10 is present at room3, ball2 is at room3, ball4 is at room1, ball5 is located at room2, ball7 is present at room1, ball8 is at room1, ball9 is present at room2 and robot1 is present in room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4375c9d8-db45-43b5-8c27-3797746d6606", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball11 is being carried by robot1's lgripper1 and robot1 is carrying ball6 with rgripper1, is not defined? Write None if all are defined.", "answer": "ball6 is loaded using robot1's rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "40b0be12-87d4-4af9-a522-299b0838b1d0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is located at room3, ball5 is located at room2 and ball9 is at room2, is not defined? Write None if all are defined.", "answer": "ball9 is transported to room2", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6d995334-0f1f-4e8b-9de1-adfdb57d21e9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball11 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball1, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball8 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a91d6636-fe31-4195-b4b7-4d792d78ce20", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_10", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, lgripper1 of robot1 is not free and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2719f656-4c56-471e-950f-d2d54ebd06c9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room1, ball1 is not located at room2, ball10 is not at room2, ball10 is not present at room1, ball11 is not located at room1, ball11 is not present at room2, ball2 is not located at room1, ball3 is not located at room2, ball5 is not at room3, ball6 is not at room2, ball7 is not present at room3, ball8 is not at room2, ball8 is not present at room3, ball9 is not located at room3 and robot1 is not present in room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "85818ae7-b3ec-40fc-a8bc-b20b6e573045", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not being carried by robot1's rgripper1, ball10 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball8, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball4 with rgripper1 and robot1 is not carrying ball7 with rgripper1, is not defined? Write None if all are defined.", "answer": "ball8 is not loaded using robot1's rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a816ca4f-900c-4acc-a885-a3a5b5d67ca3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_14", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not available, is not defined? Write None if all are defined.", "answer": "robot1's lgripper1 is not broken", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cf28e5fd-0f9a-4338-a3c7-8f4bc5de7fad", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room2, ball1 is not present at room1, ball10 is not located at room1, ball11 is not at room1, ball11 is not present at room2, ball2 is not present at room2, ball3 is not at room2, ball3 is not located at room1, ball4 is not present at room2, ball4 is not present at room3, ball5 is not located at room3, ball5 is not present at room1, ball6 is not located at room3, ball6 is not present at room1, ball6 is not present at room2, ball7 is not at room2, ball7 is not present at room3, ball8 is not at room2, ball8 is not present at room3, ball9 is not at room1, ball9 is not located at room3, robot1 is not located at room1 and robot1 is not present in room2, is not defined? Write None if all are defined.", "answer": "ball10 is not transported to room1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "658be9fc-dbb6-4536-8cc6-70b09f71e79d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not being carried by robot1's rgripper1, ball2 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball4, lgripper1 of robot1 is not carrying ball5, lgripper1 of robot1 is not carrying ball7, lgripper1 of robot1 is not carrying ball8, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is carrying ball6, rgripper1 of robot1 is not carrying ball7, robot1 is carrying ball11 with lgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball3 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "afed4453-32f8-48e8-8baa-186a02531ec0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not available, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c78258dd-5255-4605-9d61-7d953feabce0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room1, ball1 is present at room3, ball10 is at room3, ball10 is not present at room1, ball10 is not present at room2, ball11 is not located at room3, ball11 is not present at room1, ball11 is not present at room2, ball2 is at room3, ball2 is not present at room1, ball2 is not present at room2, ball3 is not located at room1, ball3 is not present at room2, ball3 is present at room3, ball4 is at room1, ball4 is not at room3, ball5 is located at room2, ball5 is not located at room3, ball5 is not present at room1, ball6 is not at room1, ball6 is not located at room2, ball6 is not located at room3, ball7 is not located at room3, ball7 is not present at room2, ball7 is present at room1, ball8 is located at room1, ball8 is not at room3, ball8 is not present at room2, ball9 is at room2, ball9 is not present at room1, ball9 is not present at room3, robot1 is located at room3, robot1 is not located at room2 and robot1 is not present in room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1b1eb8f2-4d7a-4773-8832-05f6a1989845", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball11 is not being carried by robot1's rgripper1 and ball2 is not loaded using robot1's rgripper1, is not defined? Write None if all are defined.", "answer": "ball2 is not loaded using robot1's rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ba59fafd-910b-4f2f-bd23-834807f57e71", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3 and from room3, robot1's lgripper1 picks up ball11 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, lgripper1 of robot1 is not free and rgripper1 of robot1 is not free, is not defined? Write None if all are defined.", "answer": "rgripper1 of robot1 is not broken", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "513f1736-bced-466e-a06d-e51d46f22d56", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball4 is not present at room3, ball4 is present at room1, ball6 is not at room1, ball7 is not at room2, ball8 is located at room1, ball9 is located at room2, ball9 is not present at room1 and robot1 is not present in room1, is not defined? Write None if all are defined.", "answer": "ball4 is moved to room1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "41faa08a-9069-4e00-b905-a4667e8bfbca", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, ball2 is dropped in room3 with lgripper1 by robot1 and ball11 is picked from room3 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "779bdf97-a75f-49f4-9d4b-b546a2f827d0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, in room2, ball7 is inspected using robot1's rgripper1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2 and lgripper1 of robot1 picks up ball11 in room3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "in room2, ball7 is inspected using robot1's rgripper1", "plan_length": 10, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7400cfed-9602-4df4-b54a-c8ad40a3e68d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some objects may or may not be defined. Is ball11 part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "791bb4c7-afe4-4489-a7dd-680443f25a82", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some objects may or may not be defined. Is lgripper2 part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "56146be1-3dda-4cdc-85b4-8a72481185f4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is carrying ball3 with rgripper1 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "72b483fb-160b-4d7f-b48b-9a2be66262a8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's lgripper1 is not free part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "59214d27-e382-4fe7-9b3a-acf38810681b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball4 is located at room1 part of the state? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "334ff989-bb87-4c73-b847-c3de63626ac4", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is using rgripper1 to load ball3 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a4853626-92fe-475c-b1cd-7633ad96ebc5", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's rgripper1 is not broken part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ba1b1fa1-bb0b-435c-8868-105ba89e4147", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1 is engaged in room1 part of the state? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1f90f36d-ae5d-4a28-98e0-894941fa16fa", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, is action, robot1 moves from room1 to room2, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6adc7eb4-459a-43a1-980c-a36566fd9ebf", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is action, room1 and room2 are checked by robot1, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "c246cbac-ac2a-439f-94c3-36d0d756d637", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is action, ball9 is dropped in room2 with rgripper1 by robot1, part of the domain? True or False", "answer": "True", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f69372a1-f692-469a-a027-7b90cb433bfe", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, is action, ball10 is inspected in room1 with rgripper1 by robot1, part of the domain? True or False", "answer": "False", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "0f363745-b950-43b6-ba8b-5e04bd913d39", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball11, ball2, ball3, ball6, ball7, ball8, rgripper1, robot1 and room2, is not part of the domain? Write None if all are defined.", "answer": "ball7", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "212b7625-b735-463d-9e5c-a766f6df87ca", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball12, ball2, ball3 and lgripper1, is not part of the domain? Write None if all are defined.", "answer": "ball12", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "aaeb03d0-49f6-449a-a99b-e7b0832fc3cd", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball8 is being carried by robot1's lgripper1 and robot1 is carrying ball3 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "ebf0c950-4604-45a4-9be8-4b400e5fbc2f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball10 is at room3, ball4 is present at room1, ball5 is present at room2, ball6 is present at room3 and ball9 is located at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "bb4b5715-d770-44ec-9a33-404bfad78f77", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_5", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is loading ball3 with rgripper1 and ball8 is being carried by robot1's lgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is loading ball3 with rgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1411d25d-0050-4484-8a8d-a3b83fd8629f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is present at room3, ball10 is at room3, ball2 is located at room3, ball4 is present at room1 and robot1 is at room1, is not defined? Write None if all are defined.", "answer": "ball4 is transported to room1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9dda1b4f-e16c-45cb-b1b3-6564da1ff60d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's lgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball10, lgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball5, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball7 with rgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2442aa8b-09ac-4947-a05e-0311a12cf0c3", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_10", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1953512d-b53a-4c14-9ae5-f3d42d42438f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not at room1, ball5 is not present at room1, ball7 is not at room2 and ball7 is not at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "611afb0f-a061-437c-9ca0-e39f3302dc6f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball11 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, rgripper1 of robot1 is not carrying ball5, robot1 is not using lgripper1 to load ball10, robot1 is not carrying ball4 with rgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not using lgripper1 to load ball10", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1e9a7387-b9c5-421a-9144-5cc791a7793b", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_14", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1's lgripper1 is not available and robot1's rgripper1 is not available, is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 is not broken", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "f96f7311-c41b-48c4-92c6-f9a377a27e19", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball3 is not present at room1, ball5 is not at room3, ball6 is not located at room1, robot1 is not at room3 and robot1 is not present in room2, is not defined? Write None if all are defined.", "answer": "robot1 is not engaged in room2", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1f24d97e-c04f-4409-9603-ebc5e967126e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not being carried by robot1's lgripper1, ball1 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball4 is not being carried by robot1's rgripper1, ball9 is not being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is carrying ball3, robot1 is not carrying ball10 with lgripper1 and robot1 is not carrying ball5 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "cdb2260e-a75b-4b22-a9af-844afb6a736e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and from room1, robot1's lgripper1 picks up ball8 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, rgripper1 of robot1 is not free and robot1's lgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "80ff5702-7124-4f47-be6b-99d2af9173ab", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball2 is located at room3, ball2 is not present at room1, ball7 is not at room2 and robot1 is not at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5fd0cb3c-ebf4-42b8-9961-1f193bc73f2c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball10 is not loaded using robot1's lgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's lgripper1, lgripper1 of robot1 is carrying ball8, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball9, rgripper1 of robot1 is not carrying ball10, rgripper1 of robot1 is not carrying ball4, rgripper1 of robot1 is not carrying ball8, robot1 is carrying ball3 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball11 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball7 with lgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "ball10 is not loaded using robot1's lgripper1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "b399625e-99fa-4e39-a2f8-2f27ded24095", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not available and robot1's rgripper1 is not free, is not defined? Write None if all are defined.", "answer": "robot1's lgripper1 is not broken", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "129abfcd-5a37-4b38-9711-2a56fccfb9f0", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball10 is not at room2, ball11 is not present at room3, ball2 is not located at room2, ball2 is present at room3, ball3 is not at room3, ball4 is not located at room2, ball5 is not at room1, ball5 is not at room3, ball5 is present at room2, ball6 is not at room1, ball6 is not at room2, ball7 is not present at room2, ball8 is not present at room1, ball8 is not present at room3, ball9 is located at room2, ball9 is not at room1 and robot1 is not located at room2, is not defined? Write None if all are defined.", "answer": "ball6 isn't moved to room1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "7ef5ed4f-6c0b-4bf2-a1fd-d4c8b59937be", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1 and ball8 is picked from room1 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "79f3b6a8-412b-4103-b232-ed8f6a236532", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is destroyed in room1 with lgripper1 by robot1 and lgripper1 of robot1 picks up ball8 in room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball11 is destroyed in room1 with lgripper1 by robot1", "plan_length": 15, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d4740ef3-42ff-4708-9ba5-0ced5d3879b1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is ball9 part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6a593894-7f63-4fb6-a9d8-9a44cd697fba", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_1_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, some objects may or may not be defined. Is ball12 part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "11b0eb99-3090-46ec-a577-cb60d46d253c", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball9 is being carried by robot1's lgripper1 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "4a6797f8-1762-47d8-b345-3acb9d4008ac", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. Is robot1's rgripper1 is available part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "29c0f408-363f-494d-846a-4ccedd5c5fa1", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball3 is at room2 part of the state? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d238b28f-a7ad-4435-afda-b23d88619068", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_9", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball9 is loaded using robot1's lgripper1 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "8022671c-0af4-47cf-b477-0b249a9ae2ae", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_10", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. Is rgripper1 of robot1 is broken part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "33f45a2e-fbfb-4da6-bea8-0e1e4ebecc14", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_2_question_11", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some properties of the state may or may not be defined. Is ball8 is moved to room2 part of the state? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "dfba2a42-6223-427d-9ff4-195b88fdf93f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_1", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, is action, from room2, robot1 moves to room3, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "1d8d84fd-0b4a-4dc0-afef-5debdfe7fbe6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_2", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is action, in room2, ball5 is inspected using robot1's rgripper1, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6c6a0ea3-dc79-403d-ab2b-1eddbb4d282e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_3", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, is action, rgripper1 of robot1 picks up ball11 in room1, part of the domain? True or False", "answer": "True", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "065c0469-f8e5-4382-850e-553b97ae678e", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_3_question_4", "fluent_type": null, "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, is action, in room1, ball5 is destroyed using robot1's lgripper1, part of the domain? True or False", "answer": "False", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e7750f2a-9866-4984-8867-6c7989d4de85", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball10, ball11, ball4, ball5, ball7, ball8, ball9, rgripper1, room1, room2 and room3, is not part of the domain? Write None if all are defined.", "answer": "room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "9cf7333a-24eb-4c70-aac6-98c97a5df039", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_4_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, rgripper1 of robot1 picks up ball7 in room2, from room2, robot1 moves to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves to room1 from room3, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball11, ball12, ball2, ball6, ball7, ball8, ball9 and rgripper1, is not part of the domain? Write None if all are defined.", "answer": "ball12", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5582c6ee-8fe5-4ab2-883c-259d165c9bac", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_3", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, lgripper1 of robot1 drops ball4 in room1, lgripper1 of robot1 picks up ball2 in room1, in room1, robot1's rgripper1 drops ball7, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, ball11 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room3, ball10 is located at room3, ball11 is at room1, ball2 is present at room3, ball4 is at room1, ball6 is located at room3, ball8 is present at room2 and robot1 is located at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "6bc51708-2019-4ac3-be6e-451653850d93", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_7", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room3, ball10 is located at room3, ball2 is located at room3, ball3 is located at room2, ball4 is at room1, ball5 is present at room2, ball6 is at room3, ball7 is at room1, ball8 is located at room2 and robot1 is present in room2, is not defined? Write None if all are defined.", "answer": "ball1 is moved to room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e6b3a1f1-3132-4bd0-9469-4fa9f694bf06", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_9", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, from room1, robot1's rgripper1 picks up ball6, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball11 is not being carried by robot1's lgripper1, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball6 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fb9cc7c6-c20b-4a52-b1b2-2c77a40f6ab9", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_11", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, rgripper1 of robot1 picks up ball3 in room3, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, in room2, robot1's lgripper1 drops ball8, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not located at room1, ball1 is not present at room2, ball10 is not at room2, ball10 is not present at room1, ball11 is not present at room2, ball11 is not present at room3, ball2 is not at room1, ball2 is not located at room2, ball3 is not present at room3, ball4 is not at room3, ball4 is not present at room2, ball5 is not present at room1, ball5 is not present at room3, ball6 is not at room1, ball6 is not at room2, ball7 is not at room3, ball7 is not located at room2, ball8 is not at room1, ball8 is not at room3, ball9 is not at room2, ball9 is not at room3, ball9 is not present at room1, robot1 is not located at room1 and robot1 is not located at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "3123d89c-4b3f-40e1-8830-aae43e21080d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_13", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, lgripper1 of robot1 picks up ball11 in room3, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, ball11 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, from room2, robot1's lgripper1 picks up ball9 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball3 is not being carried by robot1's rgripper1, ball5 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball3, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball6, rgripper1 of robot1 is not carrying ball7, rgripper1 of robot1 is not carrying ball9, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball8 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball7 with rgripper1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "d511dab5-6cbd-44f5-a30b-8ea6f458a9b8", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_15", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, from room3, robot1's lgripper1 picks up ball11, in room3, robot1's rgripper1 drops ball6, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not present at room2, ball4 is not located at room2, ball4 is not present at room3, ball5 is not located at room3, ball7 is not at room3, ball8 is not at room3, ball9 is not at room1 and ball9 is not present at room3, is not defined? Write None if all are defined.", "answer": "ball9 isn't moved to room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "5445bdbc-edc4-4415-b5d4-c8cf8478d807", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_17", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves to room1 from room2, in room1, robot1's lgripper1 drops ball4, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, ball11 is picked from room3 with lgripper1 by robot1, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, lgripper1 of robot1 picks up ball9 in room2 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball11 is not being carried by robot1's rgripper1, ball3 is not being carried by robot1's rgripper1, ball4 is not being carried by robot1's lgripper1, ball5 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's lgripper1, ball8 is not being carried by robot1's rgripper1, lgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball2, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball11 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball9 with rgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "e836a1ee-2ab6-4e4d-b1a7-8ecc87b0a64f", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_18", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves to room1 from room2, lgripper1 of robot1 drops ball4 in room1, ball2 is picked from room1 with lgripper1 by robot1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves from room1 to room2, ball8 is dropped in room2 with lgripper1 by robot1, from room2, robot1's lgripper1 picks up ball9 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, rgripper1 of robot1 is free and robot1's lgripper1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "be322999-cef5-4f04-a8f5-fa8afa86ae22", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_19", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, robot1 moves to room3 from room1, ball2 is dropped in room3 with lgripper1 by robot1, from room3, robot1's lgripper1 picks up ball11, ball6 is dropped in room3 with rgripper1 by robot1, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, lgripper1 of robot1 drops ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves from room1 to room2, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not at room2, ball10 is not present at room2, ball11 is at room1, ball11 is not located at room2, ball2 is not at room1, ball2 is present at room3, ball3 is not located at room1, ball3 is not located at room3, ball4 is located at room1, ball6 is located at room3, ball6 is not at room2, ball7 is not at room3, ball7 is not present at room2, ball8 is at room2, ball8 is not at room1, ball9 is not at room2, robot1 is not present in room3 and robot1 is present in room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "fabc2ec8-7c6e-4625-a9a6-a6746fdb3351", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_21", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, in room3, robot1's lgripper1 drops ball2, ball11 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves to room1 from room3, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, lgripper1 of robot1 drops ball8 in room2, lgripper1 of robot1 picks up ball9 in room2 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is not being carried by robot1's lgripper1, ball10 is not being carried by robot1's lgripper1, ball6 is not being carried by robot1's rgripper1, ball7 is not being carried by robot1's lgripper1, ball9 is being carried by robot1's lgripper1, lgripper1 of robot1 is not carrying ball11, lgripper1 of robot1 is not carrying ball2, lgripper1 of robot1 is not carrying ball5, rgripper1 of robot1 is not carrying ball11, rgripper1 of robot1 is not carrying ball2, rgripper1 of robot1 is not carrying ball8, robot1 is not carrying ball3 with rgripper1 and robot1 is not carrying ball4 with rgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not using rgripper1 to load ball11", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "a205501a-8243-4b3c-b6fe-d2365523a73d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_22", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball4 is picked from room2 with lgripper1 by robot1, from room2, robot1's rgripper1 picks up ball7, robot1 moves from room2 to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, rgripper1 of robot1 drops ball7 in room1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, rgripper1 of robot1 picks up ball3 in room3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, lgripper1 of robot1 picks up ball8 in room1, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, robot1's lgripper1 is not available and robot1's rgripper1 is free, is not defined? Write None if all are defined.", "answer": "rgripper1 of robot1 is broken", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "bdf86319-0caa-4b0a-9d73-0371e027261d", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_5_question_23", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: lgripper1 of robot1 picks up ball4 in room2, rgripper1 of robot1 picks up ball7 in room2, robot1 moves to room1 from room2, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, in room1, robot1's rgripper1 drops ball7, rgripper1 of robot1 picks up ball6 in room1, robot1 moves to room3 from room1, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, robot1 moves from room3 to room1, in room1, robot1's lgripper1 drops ball11, ball8 is picked from room1 with lgripper1 by robot1, from room1, robot1 moves to room2, in room2, robot1's lgripper1 drops ball8, ball9 is picked from room2 with lgripper1 by robot1 and ball3 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. What properties of the state out of, ball1 is located at room3, ball1 is not at room2, ball1 is not present at room1, ball10 is at room3, ball10 is not at room1, ball10 is not present at room2, ball11 is not at room3, ball11 is not located at room2, ball11 is present at room1, ball2 is located at room3, ball2 is not at room2, ball2 is not located at room1, ball3 is located at room2, ball3 is not located at room3, ball3 is not present at room1, ball4 is not at room3, ball4 is not present at room2, ball4 is present at room1, ball5 is located at room2, ball5 is not located at room3, ball5 is not present at room1, ball6 is not present at room1, ball6 is not present at room2, ball6 is present at room3, ball7 is not at room2, ball7 is not transported to room3, ball7 is present at room1, ball8 is at room2, ball8 is not at room3, ball8 is not located at room1, ball9 is not at room1, ball9 is not located at room2, ball9 is not located at room3, robot1 is at room2, robot1 is not at room1 and robot1 is not located at room3, is not defined? Write None if all are defined.", "answer": "ball7 is not transported to room3", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "2875964b-ceb0-44cf-893d-69e7c5e96edc", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_1", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, from room2, robot1's rgripper1 picks up ball7, from room2, robot1 moves to room1, ball4 is dropped in room1 with lgripper1 by robot1, from room1, robot1's lgripper1 picks up ball2, ball7 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, from room3, robot1's lgripper1 picks up ball11, rgripper1 of robot1 drops ball6 in room3, from room3, robot1's rgripper1 picks up ball3, from room3, robot1 moves to room1, in room1, robot1's lgripper1 drops ball11, from room1, robot1's lgripper1 picks up ball8, from room1, robot1 moves to room2, lgripper1 of robot1 drops ball8 in room2, ball9 is picked from room2 with lgripper1 by robot1 and in room2, robot1's rgripper1 drops ball3 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
{"id": "98fc02f4-ccda-42f8-99ec-f507795e73b6", "domain_name": "grippers", "instance_id": "Instance_10", "question_category": "hallucination", "question_name": "iter_6_question_2", "fluent_type": null, "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: from room2, robot1's lgripper1 picks up ball4, rgripper1 of robot1 picks up ball7 in room2, robot1 moves from room2 to room1, in room1, robot1's lgripper1 drops ball4, lgripper1 of robot1 picks up ball2 in room1, ball7 is dropped in room1 with rgripper1 by robot1, rgripper1 of robot1 picks up ball6 in room1, from room1, robot1 moves to room3, lgripper1 of robot1 drops ball2 in room3, lgripper1 of robot1 picks up ball11 in room3, in room3, robot1's rgripper1 drops ball6, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room1, lgripper1 of robot1 destroys ball11 in room1, from room1, robot1's lgripper1 picks up ball8, robot1 moves to room2 from room1, ball8 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1 and rgripper1 of robot1 drops ball3 in room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "lgripper1 of robot1 destroys ball11 in room1", "plan_length": 19, "initial_state_asp": {"part_of_plan?": true, "fluents": ["free(robot1,rgripper1)", "at(ball8,room1)", "at(ball10,room3)", "free(robot1,lgripper1)", "at(ball4,room2)", "at(ball3,room3)", "at(ball2,room1)", "at(ball7,room2)", "at(ball1,room3)", "at(ball5,room2)", "at(ball11,room3)", "at(ball6,room1)", "at(ball9,room2)", "at_robby(robot1,room2)"], "neg_fluents": ["-carry(robot1,ball10,rgripper1)", "-at(ball7,room1)", "-at_robby(robot1,room3)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball2,lgripper1)", "-at(ball4,room1)", "-carry(robot1,ball6,rgripper1)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball5,rgripper1)", "-at(ball2,room3)", "-at(ball7,room3)", "-at(ball2,room2)", "-carry(robot1,ball6,lgripper1)", "-carry(robot1,ball3,lgripper1)", "-at(ball5,room3)", "-carry(robot1,ball1,lgripper1)", "-at(ball8,room3)", "-carry(robot1,ball2,rgripper1)", "-at(ball11,room2)", "-at_robby(robot1,room1)", "-at(ball1,room1)", "-at(ball9,room1)", "-carry(robot1,ball11,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball11,room1)", "-carry(robot1,ball1,rgripper1)", "-at(ball3,room1)", "-carry(robot1,ball7,lgripper1)", "-at(ball8,room2)", "-at(ball10,room2)", "-at(ball6,room3)", "-carry(robot1,ball11,lgripper1)", "-carry(robot1,ball9,rgripper1)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball10,lgripper1)", "-at(ball1,room2)", "-at(ball5,room1)", "-at(ball4,room3)", "-carry(robot1,ball8,rgripper1)", "-carry(robot1,ball7,rgripper1)", "-at(ball3,room2)", "-at(ball9,room3)", "-carry(robot1,ball4,rgripper1)", "-carry(robot1,ball8,lgripper1)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room1", "room3"], "object": ["ball9", "ball6", "ball11", "ball5", "ball1", "ball10", "ball3", "ball4", "ball8", "ball7", "ball2"]}, "executable?": true}, "initial_state_nl": "Ball1 is located at room3, ball10 is at room3, ball11 is present at room3, ball2 is present at room1, ball3 is located at room3, ball4 is at room2, ball5 is at room2, ball6 is located at room1, ball7 is present at room2, ball8 is present at room1, ball9 is located at room2, lgripper1 of robot1 is free, robot1 is located at room2 and robot1's rgripper1 is available.", "action_sequence": ["action_pick(robot1,ball4,room2,lgripper1)", "action_pick(robot1,ball7,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,lgripper1)", "action_pick(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball7,room1,rgripper1)", "action_pick(robot1,ball6,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_drop(robot1,ball2,room3,lgripper1)", "action_pick(robot1,ball11,room3,lgripper1)", "action_drop(robot1,ball6,room3,rgripper1)", "action_pick(robot1,ball3,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball11,room1,lgripper1)", "action_pick(robot1,ball8,room1,lgripper1)", "action_move(robot1,room1,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball9,room2,lgripper1)", "action_drop(robot1,ball3,room2,rgripper1)", "action_move(robot1,room2,room3)", "action_drop(robot1,ball9,room3,lgripper1)"]}
